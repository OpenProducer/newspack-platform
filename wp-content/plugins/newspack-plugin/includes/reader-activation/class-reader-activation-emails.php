<?php
/**
 * Reader Activation related emails.
 *
 * @package Newspack
 */

namespace Newspack;

use Newspack\WooCommerce_My_Account;

defined( 'ABSPATH' ) || exit;

/**
 * Reader Activation related emails.
 */
class Reader_Activation_Emails {
	const EMAIL_TYPES = [
		'VERIFICATION'        => 'reader-activation-verification',
		'MAGIC_LINK'          => 'reader-activation-magic-link',
		'OTP_AUTH'            => 'reader-activation-otp-authentication',
		'RESET_PASSWORD'      => 'reader-activation-reset-password',
		'DELETE_ACCOUNT'      => 'reader-activation-delete-account',
		'CHANGE_EMAIL'        => 'reader-activation-change-email',
		'CHANGE_EMAIL_CANCEL' => 'reader-activation-change-email-cancel',
		'NON_READER'          => 'reader-activation-non-reader-user',
	];

	/**
	 * Initialize.
	 *
	 * @codeCoverageIgnore
	 */
	public static function init() {
		add_filter( 'newspack_email_configs', [ __CLASS__, 'add_email_configs' ] );

		// Disable the default WC password reset email and replace it with ours.
		add_filter( 'woocommerce_email_enabled_customer_reset_password', '__return_false' );
		add_action( 'woocommerce_reset_password_notification', [ __CLASS__, 'send_reset_password_email' ], 10, 2 );
		add_action( 'woocommerce_customer_reset_password', [ __CLASS__, 'redirect_non_reader' ] );
	}

	/**
	 * Register email type.
	 *
	 * @param array $configs Email types.
	 *
	 * @return array Email configs.
	 */
	public static function add_email_configs( $configs ) {
		$available_placeholders = [
			[
				'label'    => __( 'the site base address', 'newspack-plugin' ),
				'template' => '*SITE_ADDRESS*',
			],
			[
				'label'    => __( 'the site contact info, including site name and address', 'newspack-plugin' ),
				'template' => '*SITE_CONTACT*',
			],
			[
				'label'    => __( 'the site title', 'newspack-plugin' ),
				'template' => '*SITE_TITLE*',
			],
			[
				'label'    => __( 'the site url', 'newspack-plugin' ),
				'template' => '*SITE_URL*',
			],
		];
		$configs[ self::EMAIL_TYPES['VERIFICATION'] ]   = [
			'name'                   => self::EMAIL_TYPES['VERIFICATION'],
			'category'               => 'reader-activation',
			'label'                  => __( 'Verification', 'newspack-plugin' ),
			'description'            => __( "Email sent to the reader after they've registered.", 'newspack-plugin' ),
			'template'               => dirname( NEWSPACK_PLUGIN_FILE ) . '/includes/templates/reader-activation-emails/verification.php',
			'editor_notice'          => __( 'This email will be sent to a reader after they\'ve registered.', 'newspack-plugin' ),
			'available_placeholders' => array_merge(
				$available_placeholders,
				[
					[
						'label'    => __( 'the verification link', 'newspack-plugin' ),
						'template' => '*VERIFICATION_URL*',
					],
				]
			),
		];
		$configs[ self::EMAIL_TYPES['MAGIC_LINK'] ]     = [
			'name'                   => self::EMAIL_TYPES['MAGIC_LINK'],
			'category'               => 'reader-activation',
			'label'                  => __( 'Login link', 'newspack-plugin' ),
			'description'            => __( 'Email sent to users with a login link generated by Admin user or when one-time password is disabled.', 'newspack-plugin' ),
			'template'               => dirname( NEWSPACK_PLUGIN_FILE ) . '/includes/templates/reader-activation-emails/magic-link.php',
			'editor_notice'          => __( 'This email will be sent to a reader when they request a login link.', 'newspack-plugin' ),
			'available_placeholders' => array_merge(
				$available_placeholders,
				[
					[
						'label'    => __( 'the one-time password', 'newspack-plugin' ),
						'template' => '*MAGIC_LINK_OTP*',
					],
				]
			),
		];
		$configs[ self::EMAIL_TYPES['OTP_AUTH'] ]       = [
			'name'                   => self::EMAIL_TYPES['OTP_AUTH'],
			'category'               => 'reader-activation',
			'label'                  => __( 'Login one-time password', 'newspack-plugin' ),
			'description'            => __( 'Email sent to users with a one-time password and login link.', 'newspack-plugin' ),
			'template'               => dirname( NEWSPACK_PLUGIN_FILE ) . '/includes/templates/reader-activation-emails/otp.php',
			'editor_notice'          => __( 'This email will be sent to a reader when they request a login link and a one-time password is available.', 'newspack-plugin' ),
			'available_placeholders' => array_merge(
				$available_placeholders,
				[
					[
						'label'    => __( 'the one-time password', 'newspack-plugin' ),
						'template' => '*MAGIC_LINK_OTP*',
					],
					[
						'label'    => __( 'the login link', 'newspack-plugin' ),
						'template' => '*MAGIC_LINK_URL*',
					],
					[
						'label'    => __( 'the password reset link', 'newspack-plugin' ),
						'template' => '*SET_PASSWORD_LINK*',
					],
				]
			),
		];
		$configs[ self::EMAIL_TYPES['RESET_PASSWORD'] ] = [
			'name'                   => self::EMAIL_TYPES['RESET_PASSWORD'],
			'category'               => 'reader-activation',
			'label'                  => __( 'Set a New Password', 'newspack-plugin' ),
			'description'            => __( 'Email with password reset link.', 'newspack-plugin' ),
			'template'               => dirname( NEWSPACK_PLUGIN_FILE ) . '/includes/templates/reader-activation-emails/password-reset.php',
			'editor_notice'          => __( 'This email will be sent to a reader when they request a password creation or reset.', 'newspack-plugin' ),
			'available_placeholders' => array_merge(
				$available_placeholders,
				[
					[
						'label'    => __( 'the password reset link', 'newspack-plugin' ),
						'template' => '*PASSWORD_RESET_LINK*',
					],
				]
			),
		];
		$configs[ self::EMAIL_TYPES['DELETE_ACCOUNT'] ] = [
			'name'                   => self::EMAIL_TYPES['DELETE_ACCOUNT'],
			'category'               => 'reader-activation',
			'label'                  => __( 'Delete Account', 'newspack-plugin' ),
			'description'            => __( 'Email with account deletion link.', 'newspack-plugin' ),
			'template'               => dirname( NEWSPACK_PLUGIN_FILE ) . '/includes/templates/reader-activation-emails/delete-account.php',
			'editor_notice'          => __( 'This email will be sent to a reader when they request an account deletion.', 'newspack-plugin' ),
			'available_placeholders' => [
				[
					'label'    => __( 'the account deletion link', 'newspack-plugin' ),
					'template' => '*DELETION_LINK*',
				],
			],
		];
		if ( WooCommerce_My_Account::is_email_change_enabled() ) {
			$configs[ self::EMAIL_TYPES['CHANGE_EMAIL'] ] = [
				'name'                   => self::EMAIL_TYPES['CHANGE_EMAIL'],
				'category'               => 'reader-activation',
				'label'                  => __( 'Change Email Confirmation', 'newspack-plugin' ),
				'description'            => __( 'Email sent to the reader to confirm or cancel a request to update their email address.', 'newspack-plugin' ),
				'template'               => dirname( NEWSPACK_PLUGIN_FILE ) . '/includes/templates/reader-activation-emails/change-email.php',
				'editor_notice'          => __( 'This email will be sent to a reader\'s new email address after they update their email address.', 'newspack-plugin' ),
				'available_placeholders' => array_merge(
					$available_placeholders,
					[
						[
							'label'    => __( 'the verification link', 'newspack-plugin' ),
							'template' => '*EMAIL_VERIFICATION_URL*',
						],
						[
							'label'    => __( 'the email change cancellation link', 'newspack-plugin' ),
							'template' => '*EMAIL_CANCELLATION_URL*',
						],
					]
				),
			];
			$configs[ self::EMAIL_TYPES['CHANGE_EMAIL_CANCEL'] ] = [
				'name'                   => self::EMAIL_TYPES['CHANGE_EMAIL_CANCEL'],
				'category'               => 'reader-activation',
				'label'                  => __( 'Change Email Notification', 'newspack-plugin' ),
				'description'            => __( 'Email sent to notify the reader of a request to update their email addresses.', 'newspack-plugin' ),
				'template'               => dirname( NEWSPACK_PLUGIN_FILE ) . '/includes/templates/reader-activation-emails/change-email-cancel.php',
				'editor_notice'          => __( 'This email will be sent to a reader\'s existing email address after they update their email address.', 'newspack-plugin' ),
				'available_placeholders' => array_merge(
					$available_placeholders,
					[
						[
							'label'    => __( 'the email change cancellation link', 'newspack-plugin' ),
							'template' => '*EMAIL_CANCELLATION_URL*',
						],
						[
							'label'    => __( 'the new account email address pending confirmation', 'newspack-plugin' ),
							'template' => '*PENDING_EMAIL_ADDRESS*',
						],
					]
				),
			];
		}
		$configs[ self::EMAIL_TYPES['NON_READER'] ] = [
			'name'                   => self::EMAIL_TYPES['NON_READER'],
			'category'               => 'reader-activation',
			'label'                  => __( 'Non-reader account', 'newspack-plugin' ),
			'description'            => __( 'Email reminder sent to non-reader accounts instead of reader account-related emails.', 'newspack-plugin' ),
			'template'               => dirname( NEWSPACK_PLUGIN_FILE ) . '/includes/templates/reader-activation-emails/non-reader.php',
			'editor_notice'          => __( 'This email will be sent to non-reader WP user accounts as a reminder to use standard WP login flows.', 'newspack-plugin' ),
			'available_placeholders' => array_merge(
				$available_placeholders,
				[
					[
						'label'    => __( 'the standard WP login page', 'newspack-pliugin' ),
						'template' => '*WP_LOGIN_URL*',
					],
				]
			),
		];
		return $configs;
	}

	/**
	 * Redirect non reader to default wp-login.php.
	 *
	 * @param \WP_User $user User object.
	 */
	public static function redirect_non_reader( $user ) {
		if ( ! \Newspack\Reader_Activation::is_user_reader( $user ) ) {
			wp_safe_redirect( wp_login_url() );
			exit;
		}
	}

	/**
	 * Send password reset email.
	 *
	 * @param string $user_login User login.
	 * @param string $key Password reset key.
	 */
	public static function send_reset_password_email( $user_login, $key ) {
		$user = get_user_by( 'login', $user_login );
		Emails::send_email(
			self::EMAIL_TYPES['RESET_PASSWORD'],
			$user->data->user_email,
			[
				[
					'template' => '*PASSWORD_RESET_LINK*',
					'value'    => Emails::get_password_reset_url( $user, $key ),
				],
			]
		);
	}
}
Reader_Activation_Emails::init();
