{"version":3,"file":"./build/patterns/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"data\"]","../../packages/patterns/src/store/reducer.js","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"coreData\"]","webpack://wp/external window [\"wp\",\"blockEditor\"]","webpack://wp/external window [\"wp\",\"i18n\"]","../../packages/patterns/src/constants.js","../../packages/patterns/src/store/actions.js","../../packages/patterns/src/store/selectors.js","webpack://wp/external window [\"wp\",\"privateApis\"]","../../packages/patterns/src/lock-unlock.js","../../packages/patterns/src/store/index.js","../../packages/patterns/src/store/constants.js","webpack://wp/external window \"React\"","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"notices\"]","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/external window [\"wp\",\"htmlEntities\"]","../../packages/patterns/src/components/category-selector.js","../../packages/patterns/src/private-hooks.js","../../packages/patterns/src/components/create-pattern-modal.js","../../packages/patterns/src/components/duplicate-pattern-modal.js","webpack://wp/external window [\"wp\",\"primitives\"]","../../packages/icons/src/library/symbol.js","../../packages/patterns/src/components/pattern-convert-button.js","webpack://wp/external window [\"wp\",\"url\"]","../../packages/patterns/src/components/patterns-manage-button.js","webpack://wp/external window [\"wp\",\"a11y\"]","../../packages/patterns/src/components/reset-overrides-control.js","../../packages/patterns/src/private-apis.js","../../packages/patterns/src/components/rename-pattern-modal.js","../../packages/patterns/src/components/index.js","../../packages/patterns/src/components/rename-pattern-category-modal.js","../../packages/patterns/src/components/partial-syncing-controls.js","webpack://wp/./node_modules/nanoid/index.browser.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\nexport function isEditingPattern( state = {}, action ) {\n\tif ( action?.type === 'SET_EDITING_PATTERN' ) {\n\t\treturn {\n\t\t\t...state,\n\t\t\t[ action.clientId ]: action.isEditing,\n\t\t};\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tisEditingPattern,\n} );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nexport const PATTERN_TYPES = {\n\ttheme: 'pattern',\n\tuser: 'wp_block',\n};\n\nexport const PATTERN_DEFAULT_CATEGORY = 'all-patterns';\nexport const PATTERN_USER_CATEGORY = 'my-patterns';\nexport const EXCLUDED_PATTERN_SOURCES = [\n\t'core',\n\t'pattern-directory/core',\n\t'pattern-directory/featured',\n];\nexport const PATTERN_SYNC_TYPES = {\n\tfull: 'fully',\n\tunsynced: 'unsynced',\n};\n\n// TODO: This should not be hardcoded. Maybe there should be a config and/or an UI.\nexport const PARTIAL_SYNCING_SUPPORTED_BLOCKS = {\n\t'core/paragraph': { content: __( 'Content' ) },\n\t'core/heading': { content: __( 'Content' ) },\n\t'core/button': {\n\t\ttext: __( 'Text' ),\n\t\turl: __( 'URL' ),\n\t\tlinkTarget: __( 'Link Target' ),\n\t\trel: __( 'Link Relationship' ),\n\t},\n\t'core/image': {\n\t\tid: __( 'Image ID' ),\n\t\turl: __( 'URL' ),\n\t\ttitle: __( 'Title' ),\n\t\talt: __( 'Alt Text' ),\n\t},\n};\n","/**\n * WordPress dependencies\n */\n\nimport { cloneBlock } from '@wordpress/blocks';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { PATTERN_SYNC_TYPES } from '../constants';\n\n/**\n * Returns a generator converting one or more static blocks into a pattern, or creating a new empty pattern.\n *\n * @param {string}             title        Pattern title.\n * @param {'full'|'unsynced'}  syncType     They way block is synced, 'full' or 'unsynced'.\n * @param {string|undefined}   [content]    Optional serialized content of blocks to convert to pattern.\n * @param {number[]|undefined} [categories] Ids of any selected categories.\n */\nexport const createPattern =\n\t( title, syncType, content, categories ) =>\n\tasync ( { registry } ) => {\n\t\tconst meta =\n\t\t\tsyncType === PATTERN_SYNC_TYPES.unsynced\n\t\t\t\t? {\n\t\t\t\t\t\twp_pattern_sync_status: syncType,\n\t\t\t\t  }\n\t\t\t\t: undefined;\n\n\t\tconst reusableBlock = {\n\t\t\ttitle,\n\t\t\tcontent,\n\t\t\tstatus: 'publish',\n\t\t\tmeta,\n\t\t\twp_pattern_category: categories,\n\t\t};\n\n\t\tconst updatedRecord = await registry\n\t\t\t.dispatch( coreStore )\n\t\t\t.saveEntityRecord( 'postType', 'wp_block', reusableBlock );\n\n\t\treturn updatedRecord;\n\t};\n\n/**\n * Create a pattern from a JSON file.\n * @param {File}               file         The JSON file instance of the pattern.\n * @param {number[]|undefined} [categories] Ids of any selected categories.\n */\nexport const createPatternFromFile =\n\t( file, categories ) =>\n\tasync ( { dispatch } ) => {\n\t\tconst fileContent = await file.text();\n\t\t/** @type {import('./types').PatternJSON} */\n\t\tlet parsedContent;\n\t\ttry {\n\t\t\tparsedContent = JSON.parse( fileContent );\n\t\t} catch ( e ) {\n\t\t\tthrow new Error( 'Invalid JSON file' );\n\t\t}\n\t\tif (\n\t\t\tparsedContent.__file !== 'wp_block' ||\n\t\t\t! parsedContent.title ||\n\t\t\t! parsedContent.content ||\n\t\t\ttypeof parsedContent.title !== 'string' ||\n\t\t\ttypeof parsedContent.content !== 'string' ||\n\t\t\t( parsedContent.syncStatus &&\n\t\t\t\ttypeof parsedContent.syncStatus !== 'string' )\n\t\t) {\n\t\t\tthrow new Error( 'Invalid pattern JSON file' );\n\t\t}\n\n\t\tconst pattern = await dispatch.createPattern(\n\t\t\tparsedContent.title,\n\t\t\tparsedContent.syncStatus,\n\t\t\tparsedContent.content,\n\t\t\tcategories\n\t\t);\n\n\t\treturn pattern;\n\t};\n\n/**\n * Returns a generator converting a synced pattern block into a static block.\n *\n * @param {string} clientId The client ID of the block to attach.\n */\nexport const convertSyncedPatternToStatic =\n\t( clientId ) =>\n\t( { registry } ) => {\n\t\tconst patternBlock = registry\n\t\t\t.select( blockEditorStore )\n\t\t\t.getBlock( clientId );\n\n\t\tfunction cloneBlocksAndRemoveBindings( blocks ) {\n\t\t\treturn blocks.map( ( block ) => {\n\t\t\t\tlet metadata = block.attributes.metadata;\n\t\t\t\tif ( metadata ) {\n\t\t\t\t\tmetadata = { ...metadata };\n\t\t\t\t\tdelete metadata.id;\n\t\t\t\t\tdelete metadata.bindings;\n\t\t\t\t}\n\t\t\t\treturn cloneBlock(\n\t\t\t\t\tblock,\n\t\t\t\t\t{\n\t\t\t\t\t\tmetadata:\n\t\t\t\t\t\t\tmetadata && Object.keys( metadata ).length > 0\n\t\t\t\t\t\t\t\t? metadata\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t},\n\t\t\t\t\tcloneBlocksAndRemoveBindings( block.innerBlocks )\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tregistry\n\t\t\t.dispatch( blockEditorStore )\n\t\t\t.replaceBlocks(\n\t\t\t\tpatternBlock.clientId,\n\t\t\t\tcloneBlocksAndRemoveBindings( patternBlock.innerBlocks )\n\t\t\t);\n\t};\n\n/**\n * Returns an action descriptor for SET_EDITING_PATTERN action.\n *\n * @param {string}  clientId  The clientID of the pattern to target.\n * @param {boolean} isEditing Whether the block should be in editing state.\n * @return {Object} Action descriptor.\n */\nexport function setEditingPattern( clientId, isEditing ) {\n\treturn {\n\t\ttype: 'SET_EDITING_PATTERN',\n\t\tclientId,\n\t\tisEditing,\n\t};\n}\n","/**\n * Returns true if pattern is in the editing state.\n *\n * @param {Object} state    Global application state.\n * @param {number} clientId the clientID of the block.\n * @return {boolean} Whether the pattern is in the editing state.\n */\nexport function isEditingPattern( state, clientId ) {\n\treturn state.isEditingPattern[ clientId ];\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"privateApis\"];","/**\n * WordPress dependencies\n */\nimport { __dangerousOptInToUnstableAPIsOnlyForCoreModules } from '@wordpress/private-apis';\nexport const { lock, unlock } =\n\t__dangerousOptInToUnstableAPIsOnlyForCoreModules(\n\t\t'I know using unstable features means my theme or plugin will inevitably break in the next version of WordPress.',\n\t\t'@wordpress/patterns'\n\t);\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport { STORE_NAME } from './constants';\nimport * as selectors from './selectors';\nimport { unlock } from '../lock-unlock';\n\n/**\n * Post editor data store configuration.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#registerStore\n *\n * @type {Object}\n */\nexport const storeConfig = {\n\treducer,\n};\n\n/**\n * Store definition for the editor namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\t...storeConfig,\n} );\n\nregister( store );\nunlock( store ).registerPrivateActions( actions );\nunlock( store ).registerPrivateSelectors( selectors );\n","/**\n * Module Constants\n */\nexport const STORE_NAME = 'core/patterns';\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"notices\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"htmlEntities\"];","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useMemo, useState } from '@wordpress/element';\nimport { FormTokenField } from '@wordpress/components';\nimport { useDebounce } from '@wordpress/compose';\nimport { decodeEntities } from '@wordpress/html-entities';\n\nconst unescapeString = ( arg ) => {\n\treturn decodeEntities( arg );\n};\n\nexport const CATEGORY_SLUG = 'wp_pattern_category';\n\nexport default function CategorySelector( {\n\tcategoryTerms,\n\tonChange,\n\tcategoryMap,\n} ) {\n\tconst [ search, setSearch ] = useState( '' );\n\tconst debouncedSearch = useDebounce( setSearch, 500 );\n\n\tconst suggestions = useMemo( () => {\n\t\treturn Array.from( categoryMap.values() )\n\t\t\t.map( ( category ) => unescapeString( category.label ) )\n\t\t\t.filter( ( category ) => {\n\t\t\t\tif ( search !== '' ) {\n\t\t\t\t\treturn category\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t.includes( search.toLowerCase() );\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} )\n\t\t\t.sort( ( a, b ) => a.localeCompare( b ) );\n\t}, [ search, categoryMap ] );\n\n\tfunction handleChange( termNames ) {\n\t\tconst uniqueTerms = termNames.reduce( ( terms, newTerm ) => {\n\t\t\tif (\n\t\t\t\t! terms.some(\n\t\t\t\t\t( term ) => term.toLowerCase() === newTerm.toLowerCase()\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tterms.push( newTerm );\n\t\t\t}\n\t\t\treturn terms;\n\t\t}, [] );\n\n\t\tonChange( uniqueTerms );\n\t}\n\n\treturn (\n\t\t<FormTokenField\n\t\t\tclassName=\"patterns-menu-items__convert-modal-categories\"\n\t\t\tvalue={ categoryTerms }\n\t\t\tsuggestions={ suggestions }\n\t\t\tonChange={ handleChange }\n\t\t\tonInputChange={ debouncedSearch }\n\t\t\tlabel={ __( 'Categories' ) }\n\t\t\ttokenizeOnBlur\n\t\t\t__experimentalExpandOnFocus\n\t\t\t__next40pxDefaultSize\n\t\t\t__nextHasNoMarginBottom\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { CATEGORY_SLUG } from './components/category-selector';\n\n/**\n * Helper hook that creates a Map with the core and user patterns categories\n * and removes any duplicates. It's used when we need to create new user\n * categories when creating or importing patterns.\n * This hook also provides a function to find or create a pattern category.\n *\n * @return {Object} The merged categories map and the callback function to find or create a category.\n */\nexport function useAddPatternCategory() {\n\tconst { saveEntityRecord, invalidateResolution } = useDispatch( coreStore );\n\tconst { corePatternCategories, userPatternCategories } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getUserPatternCategories, getBlockPatternCategories } =\n\t\t\t\tselect( coreStore );\n\n\t\t\treturn {\n\t\t\t\tcorePatternCategories: getBlockPatternCategories(),\n\t\t\t\tuserPatternCategories: getUserPatternCategories(),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\tconst categoryMap = useMemo( () => {\n\t\t// Merge the user and core pattern categories and remove any duplicates.\n\t\tconst uniqueCategories = new Map();\n\t\tuserPatternCategories.forEach( ( category ) => {\n\t\t\tuniqueCategories.set( category.label.toLowerCase(), {\n\t\t\t\tlabel: category.label,\n\t\t\t\tname: category.name,\n\t\t\t\tid: category.id,\n\t\t\t} );\n\t\t} );\n\n\t\tcorePatternCategories.forEach( ( category ) => {\n\t\t\tif (\n\t\t\t\t! uniqueCategories.has( category.label.toLowerCase() ) &&\n\t\t\t\t// There are two core categories with `Post` label so explicitly remove the one with\n\t\t\t\t// the `query` slug to avoid any confusion.\n\t\t\t\tcategory.name !== 'query'\n\t\t\t) {\n\t\t\t\tuniqueCategories.set( category.label.toLowerCase(), {\n\t\t\t\t\tlabel: category.label,\n\t\t\t\t\tname: category.name,\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t\treturn uniqueCategories;\n\t}, [ userPatternCategories, corePatternCategories ] );\n\n\tasync function findOrCreateTerm( term ) {\n\t\ttry {\n\t\t\tconst existingTerm = categoryMap.get( term.toLowerCase() );\n\t\t\tif ( existingTerm?.id ) {\n\t\t\t\treturn existingTerm.id;\n\t\t\t}\n\t\t\t// If we have an existing core category we need to match the new user category to the\n\t\t\t// correct slug rather than autogenerating it to prevent duplicates, eg. the core `Headers`\n\t\t\t// category uses the singular `header` as the slug.\n\t\t\tconst termData = existingTerm\n\t\t\t\t? { name: existingTerm.label, slug: existingTerm.name }\n\t\t\t\t: { name: term };\n\t\t\tconst newTerm = await saveEntityRecord(\n\t\t\t\t'taxonomy',\n\t\t\t\tCATEGORY_SLUG,\n\t\t\t\ttermData,\n\t\t\t\t{ throwOnError: true }\n\t\t\t);\n\t\t\tinvalidateResolution( 'getUserPatternCategories' );\n\t\t\treturn newTerm.id;\n\t\t} catch ( error ) {\n\t\t\tif ( error.code !== 'term_exists' ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\treturn error.data.term_id;\n\t\t}\n\t}\n\n\treturn { categoryMap, findOrCreateTerm };\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\tModal,\n\tButton,\n\tTextControl,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n\tToggleControl,\n} from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport { PATTERN_DEFAULT_CATEGORY, PATTERN_SYNC_TYPES } from '../constants';\nimport { store as patternsStore } from '../store';\nimport CategorySelector from './category-selector';\nimport { useAddPatternCategory } from '../private-hooks';\nimport { unlock } from '../lock-unlock';\n\nexport default function CreatePatternModal( {\n\tclassName = 'patterns-menu-items__convert-modal',\n\tmodalTitle = __( 'Create pattern' ),\n\t...restProps\n} ) {\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ modalTitle }\n\t\t\tonRequestClose={ restProps.onClose }\n\t\t\toverlayClassName={ className }\n\t\t>\n\t\t\t<CreatePatternModalContents { ...restProps } />\n\t\t</Modal>\n\t);\n}\n\nexport function CreatePatternModalContents( {\n\tconfirmLabel = __( 'Create' ),\n\tdefaultCategories = [],\n\tcontent,\n\tonClose,\n\tonError,\n\tonSuccess,\n\tdefaultSyncType = PATTERN_SYNC_TYPES.full,\n\tdefaultTitle = '',\n} ) {\n\tconst [ syncType, setSyncType ] = useState( defaultSyncType );\n\tconst [ categoryTerms, setCategoryTerms ] = useState( defaultCategories );\n\tconst [ title, setTitle ] = useState( defaultTitle );\n\n\tconst [ isSaving, setIsSaving ] = useState( false );\n\tconst { createPattern } = unlock( useDispatch( patternsStore ) );\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\n\tconst { categoryMap, findOrCreateTerm } = useAddPatternCategory();\n\n\tasync function onCreate( patternTitle, sync ) {\n\t\tif ( ! title || isSaving ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tsetIsSaving( true );\n\t\t\tconst categories = await Promise.all(\n\t\t\t\tcategoryTerms.map( ( termName ) =>\n\t\t\t\t\tfindOrCreateTerm( termName )\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tconst newPattern = await createPattern(\n\t\t\t\tpatternTitle,\n\t\t\t\tsync,\n\t\t\t\ttypeof content === 'function' ? content() : content,\n\t\t\t\tcategories\n\t\t\t);\n\t\t\tonSuccess( {\n\t\t\t\tpattern: newPattern,\n\t\t\t\tcategoryId: PATTERN_DEFAULT_CATEGORY,\n\t\t\t} );\n\t\t} catch ( error ) {\n\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'pattern-create',\n\t\t\t} );\n\t\t\tonError?.();\n\t\t} finally {\n\t\t\tsetIsSaving( false );\n\t\t\tsetCategoryTerms( [] );\n\t\t\tsetTitle( '' );\n\t\t}\n\t}\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={ ( event ) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tonCreate( title, syncType );\n\t\t\t} }\n\t\t>\n\t\t\t<VStack spacing=\"5\">\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\tvalue={ title }\n\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\tplaceholder={ __( 'My pattern' ) }\n\t\t\t\t\tclassName=\"patterns-create-modal__name-input\"\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t/>\n\t\t\t\t<CategorySelector\n\t\t\t\t\tcategoryTerms={ categoryTerms }\n\t\t\t\t\tonChange={ setCategoryTerms }\n\t\t\t\t\tcategoryMap={ categoryMap }\n\t\t\t\t/>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={ _x(\n\t\t\t\t\t\t'Synced',\n\t\t\t\t\t\t'Option that makes an individual pattern synchronized'\n\t\t\t\t\t) }\n\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t'Sync this pattern across multiple locations.'\n\t\t\t\t\t) }\n\t\t\t\t\tchecked={ syncType === PATTERN_SYNC_TYPES.full }\n\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\tsetSyncType(\n\t\t\t\t\t\t\tsyncType === PATTERN_SYNC_TYPES.full\n\t\t\t\t\t\t\t\t? PATTERN_SYNC_TYPES.unsynced\n\t\t\t\t\t\t\t\t: PATTERN_SYNC_TYPES.full\n\t\t\t\t\t\t);\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\tsetTitle( '' );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\taria-disabled={ ! title || isSaving }\n\t\t\t\t\t\tisBusy={ isSaving }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ confirmLabel }\n\t\t\t\t\t</Button>\n\t\t\t\t</HStack>\n\t\t\t</VStack>\n\t\t</form>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport CreatePatternModal from './create-pattern-modal';\nimport { PATTERN_SYNC_TYPES, PATTERN_TYPES } from '../constants';\n\nfunction getTermLabels( pattern, categories ) {\n\t// Theme patterns rely on core pattern categories.\n\tif ( pattern.type !== PATTERN_TYPES.user ) {\n\t\treturn categories.core\n\t\t\t?.filter( ( category ) =>\n\t\t\t\tpattern.categories.includes( category.name )\n\t\t\t)\n\t\t\t.map( ( category ) => category.label );\n\t}\n\n\treturn categories.user\n\t\t?.filter( ( category ) =>\n\t\t\tpattern.wp_pattern_category.includes( category.id )\n\t\t)\n\t\t.map( ( category ) => category.label );\n}\n\nexport function useDuplicatePatternProps( { pattern, onSuccess } ) {\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\tconst categories = useSelect( ( select ) => {\n\t\tconst { getUserPatternCategories, getBlockPatternCategories } =\n\t\t\tselect( coreStore );\n\n\t\treturn {\n\t\t\tcore: getBlockPatternCategories(),\n\t\t\tuser: getUserPatternCategories(),\n\t\t};\n\t} );\n\tif ( ! pattern ) {\n\t\treturn null;\n\t}\n\treturn {\n\t\tcontent: pattern.content,\n\t\tdefaultCategories: getTermLabels( pattern, categories ),\n\t\tdefaultSyncType:\n\t\t\tpattern.type !== PATTERN_TYPES.user // Theme patterns are unsynced by default.\n\t\t\t\t? PATTERN_SYNC_TYPES.unsynced\n\t\t\t\t: pattern.wp_pattern_sync_status || PATTERN_SYNC_TYPES.full,\n\t\tdefaultTitle: sprintf(\n\t\t\t/* translators: %s: Existing pattern title */\n\t\t\t__( '%s (Copy)' ),\n\t\t\ttypeof pattern.title === 'string'\n\t\t\t\t? pattern.title\n\t\t\t\t: pattern.title.raw\n\t\t),\n\t\tonSuccess: ( { pattern: newPattern } ) => {\n\t\t\tcreateSuccessNotice(\n\t\t\t\tsprintf(\n\t\t\t\t\t// translators: %s: The new pattern's title e.g. 'Call to action (copy)'.\n\t\t\t\t\t__( '\"%s\" duplicated.' ),\n\t\t\t\t\tnewPattern.title.raw\n\t\t\t\t),\n\t\t\t\t{\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tid: 'patterns-create',\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tonSuccess?.( { pattern: newPattern } );\n\t\t},\n\t};\n}\n\nexport default function DuplicatePatternModal( {\n\tpattern,\n\tonClose,\n\tonSuccess,\n} ) {\n\tconst duplicatedProps = useDuplicatePatternProps( { pattern, onSuccess } );\n\tif ( ! pattern ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<CreatePatternModal\n\t\t\tmodalTitle={ __( 'Duplicate pattern' ) }\n\t\t\tconfirmLabel={ __( 'Duplicate' ) }\n\t\t\tonClose={ onClose }\n\t\t\tonError={ onClose }\n\t\t\t{ ...duplicatedProps }\n\t\t/>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst symbol = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-1 1.4l-5.6 5.6c-.1.1-.3.1-.4 0l-5.6-5.6c-.1-.1-.1-.3 0-.4l5.6-5.6s.1-.1.2-.1.1 0 .2.1l5.6 5.6c.1.1.1.3 0 .4zm-16.6-.4L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\" />\n\t</SVG>\n);\n\nexport default symbol;\n","/**\n * WordPress dependencies\n */\nimport {\n\thasBlockSupport,\n\tisReusableBlock,\n\tcreateBlock,\n\tserialize,\n} from '@wordpress/blocks';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useState, useCallback } from '@wordpress/element';\nimport { MenuItem } from '@wordpress/components';\nimport { symbol } from '@wordpress/icons';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n/**\n * Internal dependencies\n */\nimport { store as patternsStore } from '../store';\nimport CreatePatternModal from './create-pattern-modal';\nimport { unlock } from '../lock-unlock';\nimport { PATTERN_SYNC_TYPES } from '../constants';\n\n/**\n * Menu control to convert block(s) to a pattern block.\n *\n * @param {Object}   props                        Component props.\n * @param {string[]} props.clientIds              Client ids of selected blocks.\n * @param {string}   props.rootClientId           ID of the currently selected top-level block.\n * @param {()=>void} props.closeBlockSettingsMenu Callback to close the block settings menu dropdown.\n * @return {import('react').ComponentType} The menu control or null.\n */\nexport default function PatternConvertButton( {\n\tclientIds,\n\trootClientId,\n\tcloseBlockSettingsMenu,\n} ) {\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\t// Ignore reason: false positive of the lint rule.\n\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\tconst { setEditingPattern } = unlock( useDispatch( patternsStore ) );\n\tconst [ isModalOpen, setIsModalOpen ] = useState( false );\n\tconst canConvert = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canUser } = select( coreStore );\n\t\t\tconst {\n\t\t\t\tgetBlocksByClientId,\n\t\t\t\tcanInsertBlockType,\n\t\t\t\tgetBlockRootClientId,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tconst rootId =\n\t\t\t\trootClientId ||\n\t\t\t\t( clientIds.length > 0\n\t\t\t\t\t? getBlockRootClientId( clientIds[ 0 ] )\n\t\t\t\t\t: undefined );\n\n\t\t\tconst blocks = getBlocksByClientId( clientIds ) ?? [];\n\n\t\t\tconst isReusable =\n\t\t\t\tblocks.length === 1 &&\n\t\t\t\tblocks[ 0 ] &&\n\t\t\t\tisReusableBlock( blocks[ 0 ] ) &&\n\t\t\t\t!! select( coreStore ).getEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\t'wp_block',\n\t\t\t\t\tblocks[ 0 ].attributes.ref\n\t\t\t\t);\n\n\t\t\tconst _canConvert =\n\t\t\t\t// Hide when this is already a synced pattern.\n\t\t\t\t! isReusable &&\n\t\t\t\t// Hide when patterns are disabled.\n\t\t\t\tcanInsertBlockType( 'core/block', rootId ) &&\n\t\t\t\tblocks.every(\n\t\t\t\t\t( block ) =>\n\t\t\t\t\t\t// Guard against the case where a regular block has *just* been converted.\n\t\t\t\t\t\t!! block &&\n\t\t\t\t\t\t// Hide on invalid blocks.\n\t\t\t\t\t\tblock.isValid &&\n\t\t\t\t\t\t// Hide when block doesn't support being made into a pattern.\n\t\t\t\t\t\thasBlockSupport( block.name, 'reusable', true )\n\t\t\t\t) &&\n\t\t\t\t// Hide when current doesn't have permission to do that.\n\t\t\t\t!! canUser( 'create', 'blocks' );\n\n\t\t\treturn _canConvert;\n\t\t},\n\t\t[ clientIds, rootClientId ]\n\t);\n\tconst { getBlocksByClientId } = useSelect( blockEditorStore );\n\tconst getContent = useCallback(\n\t\t() => serialize( getBlocksByClientId( clientIds ) ),\n\t\t[ getBlocksByClientId, clientIds ]\n\t);\n\n\tif ( ! canConvert ) {\n\t\treturn null;\n\t}\n\n\tconst handleSuccess = ( { pattern } ) => {\n\t\tif ( pattern.wp_pattern_sync_status !== PATTERN_SYNC_TYPES.unsynced ) {\n\t\t\tconst newBlock = createBlock( 'core/block', {\n\t\t\t\tref: pattern.id,\n\t\t\t} );\n\n\t\t\treplaceBlocks( clientIds, newBlock );\n\t\t\tsetEditingPattern( newBlock.clientId, true );\n\t\t\tcloseBlockSettingsMenu();\n\t\t}\n\n\t\tcreateSuccessNotice(\n\t\t\tpattern.wp_pattern_sync_status === PATTERN_SYNC_TYPES.unsynced\n\t\t\t\t? sprintf(\n\t\t\t\t\t\t// translators: %s: the name the user has given to the pattern.\n\t\t\t\t\t\t__( 'Unsynced pattern created: %s' ),\n\t\t\t\t\t\tpattern.title.raw\n\t\t\t\t  )\n\t\t\t\t: sprintf(\n\t\t\t\t\t\t// translators: %s: the name the user has given to the pattern.\n\t\t\t\t\t\t__( 'Synced pattern created: %s' ),\n\t\t\t\t\t\tpattern.title.raw\n\t\t\t\t  ),\n\t\t\t{\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'convert-to-pattern-success',\n\t\t\t}\n\t\t);\n\t\tsetIsModalOpen( false );\n\t};\n\treturn (\n\t\t<>\n\t\t\t<MenuItem\n\t\t\t\ticon={ symbol }\n\t\t\t\tonClick={ () => setIsModalOpen( true ) }\n\t\t\t\taria-expanded={ isModalOpen }\n\t\t\t\taria-haspopup=\"dialog\"\n\t\t\t>\n\t\t\t\t{ __( 'Create pattern' ) }\n\t\t\t</MenuItem>\n\t\t\t{ isModalOpen && (\n\t\t\t\t<CreatePatternModal\n\t\t\t\t\tcontent={ getContent }\n\t\t\t\t\tonSuccess={ ( pattern ) => {\n\t\t\t\t\t\thandleSuccess( pattern );\n\t\t\t\t\t} }\n\t\t\t\t\tonError={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t} }\n\t\t\t\t\tonClose={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { isReusableBlock } from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { addQueryArgs } from '@wordpress/url';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as patternsStore } from '../store';\nimport { unlock } from '../lock-unlock';\n\nfunction PatternsManageButton( { clientId } ) {\n\tconst { canRemove, isVisible, managePatternsUrl } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlock, canRemoveBlock, getBlockCount, getSettings } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\tconst { canUser } = select( coreStore );\n\t\t\tconst reusableBlock = getBlock( clientId );\n\t\t\tconst isBlockTheme = getSettings().__unstableIsBlockBasedTheme;\n\n\t\t\treturn {\n\t\t\t\tcanRemove: canRemoveBlock( clientId ),\n\t\t\t\tisVisible:\n\t\t\t\t\t!! reusableBlock &&\n\t\t\t\t\tisReusableBlock( reusableBlock ) &&\n\t\t\t\t\t!! canUser(\n\t\t\t\t\t\t'update',\n\t\t\t\t\t\t'blocks',\n\t\t\t\t\t\treusableBlock.attributes.ref\n\t\t\t\t\t),\n\t\t\t\tinnerBlockCount: getBlockCount( clientId ),\n\t\t\t\t// The site editor and templates both check whether the user\n\t\t\t\t// has edit_theme_options capabilities. We can leverage that here\n\t\t\t\t// and omit the manage patterns link if the user can't access it.\n\t\t\t\tmanagePatternsUrl:\n\t\t\t\t\tisBlockTheme && canUser( 'read', 'templates' )\n\t\t\t\t\t\t? addQueryArgs( 'site-editor.php', {\n\t\t\t\t\t\t\t\tpath: '/patterns',\n\t\t\t\t\t\t  } )\n\t\t\t\t\t\t: addQueryArgs( 'edit.php', {\n\t\t\t\t\t\t\t\tpost_type: 'wp_block',\n\t\t\t\t\t\t  } ),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\t// Ignore reason: false positive of the lint rule.\n\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\tconst { convertSyncedPatternToStatic } = unlock(\n\t\tuseDispatch( patternsStore )\n\t);\n\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ canRemove && (\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ () => convertSyncedPatternToStatic( clientId ) }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Detach' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t\t<MenuItem href={ managePatternsUrl }>\n\t\t\t\t{ __( 'Manage patterns' ) }\n\t\t\t</MenuItem>\n\t\t</>\n\t);\n}\n\nexport default PatternsManageButton;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"a11y\"];","/**\n * WordPress dependencies\n */\nimport {\n\tstore as blockEditorStore,\n\tBlockControls,\n} from '@wordpress/block-editor';\nimport { ToolbarButton, ToolbarGroup } from '@wordpress/components';\nimport { useSelect, useRegistry } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { parse } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\nfunction recursivelyFindBlockWithId( blocks, id ) {\n\tfor ( const block of blocks ) {\n\t\tif ( block.attributes.metadata?.id === id ) {\n\t\t\treturn block;\n\t\t}\n\n\t\tconst found = recursivelyFindBlockWithId( block.innerBlocks, id );\n\t\tif ( found ) {\n\t\t\treturn found;\n\t\t}\n\t}\n}\n\nexport default function ResetOverridesControl( props ) {\n\tconst registry = useRegistry();\n\tconst id = props.attributes.metadata?.id;\n\tconst patternWithOverrides = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! id ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst { getBlockParentsByBlockName, getBlocksByClientId } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\tconst patternBlock = getBlocksByClientId(\n\t\t\t\tgetBlockParentsByBlockName( props.clientId, 'core/block' )\n\t\t\t)[ 0 ];\n\n\t\t\tif ( ! patternBlock?.attributes.content?.[ id ] ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn patternBlock;\n\t\t},\n\t\t[ props.clientId, id ]\n\t);\n\n\tconst resetOverrides = async () => {\n\t\tconst editedRecord = await registry\n\t\t\t.resolveSelect( coreStore )\n\t\t\t.getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t'wp_block',\n\t\t\t\tpatternWithOverrides.attributes.ref\n\t\t\t);\n\t\tconst blocks = editedRecord.blocks ?? parse( editedRecord.content );\n\t\tconst block = recursivelyFindBlockWithId( blocks, id );\n\n\t\tconst newAttributes = Object.assign(\n\t\t\t// Reset every existing attribute to undefined.\n\t\t\tObject.fromEntries(\n\t\t\t\tObject.keys( props.attributes ).map( ( key ) => [\n\t\t\t\t\tkey,\n\t\t\t\t\tundefined,\n\t\t\t\t] )\n\t\t\t),\n\t\t\t// Then assign the original attributes.\n\t\t\tblock.attributes\n\t\t);\n\n\t\tprops.setAttributes( newAttributes );\n\t};\n\n\treturn (\n\t\t<BlockControls group=\"other\">\n\t\t\t<ToolbarGroup>\n\t\t\t\t<ToolbarButton\n\t\t\t\t\tonClick={ resetOverrides }\n\t\t\t\t\tdisabled={ ! patternWithOverrides }\n\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Reset' ) }\n\t\t\t\t</ToolbarButton>\n\t\t\t</ToolbarGroup>\n\t\t</BlockControls>\n\t);\n}\n","/**\n * Internal dependencies\n */\nimport { lock } from './lock-unlock';\nimport {\n\tdefault as CreatePatternModal,\n\tCreatePatternModalContents,\n} from './components/create-pattern-modal';\nimport {\n\tdefault as DuplicatePatternModal,\n\tuseDuplicatePatternProps,\n} from './components/duplicate-pattern-modal';\nimport RenamePatternModal from './components/rename-pattern-modal';\nimport PatternsMenuItems from './components';\nimport RenamePatternCategoryModal from './components/rename-pattern-category-modal';\nimport PartialSyncingControls from './components/partial-syncing-controls';\nimport ResetOverridesControl from './components/reset-overrides-control';\nimport { useAddPatternCategory } from './private-hooks';\nimport {\n\tPATTERN_TYPES,\n\tPATTERN_DEFAULT_CATEGORY,\n\tPATTERN_USER_CATEGORY,\n\tEXCLUDED_PATTERN_SOURCES,\n\tPATTERN_SYNC_TYPES,\n\tPARTIAL_SYNCING_SUPPORTED_BLOCKS,\n} from './constants';\n\nexport const privateApis = {};\nlock( privateApis, {\n\tCreatePatternModal,\n\tCreatePatternModalContents,\n\tDuplicatePatternModal,\n\tuseDuplicatePatternProps,\n\tRenamePatternModal,\n\tPatternsMenuItems,\n\tRenamePatternCategoryModal,\n\tPartialSyncingControls,\n\tResetOverridesControl,\n\tuseAddPatternCategory,\n\tPATTERN_TYPES,\n\tPATTERN_DEFAULT_CATEGORY,\n\tPATTERN_USER_CATEGORY,\n\tEXCLUDED_PATTERN_SOURCES,\n\tPATTERN_SYNC_TYPES,\n\tPARTIAL_SYNCING_SUPPORTED_BLOCKS,\n} );\n","/**\n * WordPress dependencies\n */\nimport {\n\tButton,\n\tModal,\n\tTextControl,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { __ } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n\nexport default function RenamePatternModal( {\n\tonClose,\n\tonError,\n\tonSuccess,\n\tpattern,\n\t...props\n} ) {\n\tconst originalName = decodeEntities( pattern.title );\n\tconst [ name, setName ] = useState( originalName );\n\tconst [ isSaving, setIsSaving ] = useState( false );\n\n\tconst {\n\t\teditEntityRecord,\n\t\t__experimentalSaveSpecifiedEntityEdits: saveSpecifiedEntityEdits,\n\t} = useDispatch( coreStore );\n\n\tconst { createSuccessNotice, createErrorNotice } =\n\t\tuseDispatch( noticesStore );\n\n\tconst onRename = async ( event ) => {\n\t\tevent.preventDefault();\n\n\t\tif ( ! name || name === pattern.title || isSaving ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait editEntityRecord( 'postType', pattern.type, pattern.id, {\n\t\t\t\ttitle: name,\n\t\t\t} );\n\n\t\t\tsetIsSaving( true );\n\t\t\tsetName( '' );\n\t\t\tonClose?.();\n\n\t\t\tconst savedRecord = await saveSpecifiedEntityEdits(\n\t\t\t\t'postType',\n\t\t\t\tpattern.type,\n\t\t\t\tpattern.id,\n\t\t\t\t[ 'title' ],\n\t\t\t\t{ throwOnError: true }\n\t\t\t);\n\n\t\t\tonSuccess?.( savedRecord );\n\n\t\t\tcreateSuccessNotice( __( 'Pattern renamed' ), {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'pattern-update',\n\t\t\t} );\n\t\t} catch ( error ) {\n\t\t\tonError?.();\n\n\t\t\tconst errorMessage =\n\t\t\t\terror.message && error.code !== 'unknown_error'\n\t\t\t\t\t? error.message\n\t\t\t\t\t: __( 'An error occurred while renaming the pattern.' );\n\n\t\t\tcreateErrorNotice( errorMessage, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'pattern-update',\n\t\t\t} );\n\t\t} finally {\n\t\t\tsetIsSaving( false );\n\t\t\tsetName( '' );\n\t\t}\n\t};\n\n\tconst onRequestClose = () => {\n\t\tonClose?.();\n\t\tsetName( '' );\n\t};\n\n\treturn (\n\t\t<Modal title={ __( 'Rename' ) } { ...props } onRequestClose={ onClose }>\n\t\t\t<form onSubmit={ onRename }>\n\t\t\t\t<VStack spacing=\"5\">\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\tvalue={ name }\n\t\t\t\t\t\tonChange={ setName }\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\n\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tonClick={ onRequestClose }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Save' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { BlockSettingsMenuControls } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport PatternConvertButton from './pattern-convert-button';\nimport PatternsManageButton from './patterns-manage-button';\n\nexport default function PatternsMenuItems( { rootClientId } ) {\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t{ ( { selectedClientIds, onClose } ) => (\n\t\t\t\t<>\n\t\t\t\t\t<PatternConvertButton\n\t\t\t\t\t\tclientIds={ selectedClientIds }\n\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\tcloseBlockSettingsMenu={ onClose }\n\t\t\t\t\t/>\n\t\t\t\t\t{ selectedClientIds.length === 1 && (\n\t\t\t\t\t\t<PatternsManageButton\n\t\t\t\t\t\t\tclientId={ selectedClientIds[ 0 ] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t) }\n\t\t</BlockSettingsMenuControls>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\tModal,\n\tButton,\n\tTextControl,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useDispatch } from '@wordpress/data';\nimport { useId, useRef, useState } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { __ } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { speak } from '@wordpress/a11y';\n\n/**\n * Internal dependencies\n */\nimport { CATEGORY_SLUG } from './category-selector';\n\nexport default function RenamePatternCategoryModal( {\n\tcategory,\n\texistingCategories,\n\tonClose,\n\tonError,\n\tonSuccess,\n\t...props\n} ) {\n\tconst id = useId();\n\tconst textControlRef = useRef();\n\tconst [ name, setName ] = useState( decodeEntities( category.name ) );\n\tconst [ isSaving, setIsSaving ] = useState( false );\n\tconst [ validationMessage, setValidationMessage ] = useState( false );\n\tconst validationMessageId = validationMessage\n\t\t? `patterns-rename-pattern-category-modal__validation-message-${ id }`\n\t\t: undefined;\n\n\tconst { saveEntityRecord, invalidateResolution } = useDispatch( coreStore );\n\tconst { createErrorNotice, createSuccessNotice } =\n\t\tuseDispatch( noticesStore );\n\n\tconst onChange = ( newName ) => {\n\t\tif ( validationMessage ) {\n\t\t\tsetValidationMessage( undefined );\n\t\t}\n\t\tsetName( newName );\n\t};\n\n\tconst onSave = async ( event ) => {\n\t\tevent.preventDefault();\n\n\t\tif ( isSaving ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! name || name === category.name ) {\n\t\t\tconst message = __( 'Please enter a new name for this category.' );\n\t\t\tspeak( message, 'assertive' );\n\t\t\tsetValidationMessage( message );\n\t\t\ttextControlRef.current?.focus();\n\t\t\treturn;\n\t\t}\n\n\t\t// Check existing categories to avoid creating duplicates.\n\t\tif (\n\t\t\texistingCategories.patternCategories.find( ( existingCategory ) => {\n\t\t\t\t// Compare the id so that the we don't disallow the user changing the case of their current category\n\t\t\t\t// (i.e. renaming 'test' to 'Test').\n\t\t\t\treturn (\n\t\t\t\t\texistingCategory.id !== category.id &&\n\t\t\t\t\texistingCategory.label.toLowerCase() === name.toLowerCase()\n\t\t\t\t);\n\t\t\t} )\n\t\t) {\n\t\t\tconst message = __(\n\t\t\t\t'This category already exists. Please use a different name.'\n\t\t\t);\n\t\t\tspeak( message, 'assertive' );\n\t\t\tsetValidationMessage( message );\n\t\t\ttextControlRef.current?.focus();\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tsetIsSaving( true );\n\n\t\t\t// User pattern category properties may differ as they can be\n\t\t\t// normalized for use alongside template part areas, core pattern\n\t\t\t// categories etc. As a result we won't just destructure the passed\n\t\t\t// category object.\n\t\t\tconst savedRecord = await saveEntityRecord(\n\t\t\t\t'taxonomy',\n\t\t\t\tCATEGORY_SLUG,\n\t\t\t\t{\n\t\t\t\t\tid: category.id,\n\t\t\t\t\tslug: category.slug,\n\t\t\t\t\tname,\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tinvalidateResolution( 'getUserPatternCategories' );\n\t\t\tonSuccess?.( savedRecord );\n\t\t\tonClose();\n\n\t\t\tcreateSuccessNotice( __( 'Pattern category renamed.' ), {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'pattern-category-update',\n\t\t\t} );\n\t\t} catch ( error ) {\n\t\t\tonError?.();\n\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'pattern-category-update',\n\t\t\t} );\n\t\t} finally {\n\t\t\tsetIsSaving( false );\n\t\t\tsetName( '' );\n\t\t}\n\t};\n\n\tconst onRequestClose = () => {\n\t\tonClose();\n\t\tsetName( '' );\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ __( 'Rename' ) }\n\t\t\tonRequestClose={ onRequestClose }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t<form onSubmit={ onSave }>\n\t\t\t\t<VStack spacing=\"5\">\n\t\t\t\t\t<VStack spacing=\"2\">\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tref={ textControlRef }\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\t\tvalue={ name }\n\t\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\t\taria-describedby={ validationMessageId }\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ validationMessage && (\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"patterns-rename-pattern-category-modal__validation-message\"\n\t\t\t\t\t\t\t\tid={ validationMessageId }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ validationMessage }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</VStack>\n\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tonClick={ onRequestClose }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\taria-disabled={\n\t\t\t\t\t\t\t\t! name || name === category.name || isSaving\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tisBusy={ isSaving }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Save' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n}\n","/**\n * External dependencies\n */\nimport { nanoid } from 'nanoid';\n\n/**\n * WordPress dependencies\n */\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { BaseControl, CheckboxControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { PARTIAL_SYNCING_SUPPORTED_BLOCKS } from '../constants';\n\nfunction PartialSyncingControls( { name, attributes, setAttributes } ) {\n\tconst syncedAttributes = PARTIAL_SYNCING_SUPPORTED_BLOCKS[ name ];\n\tconst attributeSources = Object.keys( syncedAttributes ).map(\n\t\t( attributeName ) =>\n\t\t\tattributes.metadata?.bindings?.[ attributeName ]?.source\n\t);\n\tconst isConnectedToOtherSources = attributeSources.every(\n\t\t( source ) => source && source !== 'core/pattern-overrides'\n\t);\n\n\t// Render nothing if all supported attributes are connected to other sources.\n\tif ( isConnectedToOtherSources ) {\n\t\treturn null;\n\t}\n\n\tfunction updateBindings( isChecked ) {\n\t\tlet updatedBindings = {\n\t\t\t...attributes?.metadata?.bindings,\n\t\t};\n\n\t\tif ( ! isChecked ) {\n\t\t\tfor ( const attributeName of Object.keys( syncedAttributes ) ) {\n\t\t\t\tif (\n\t\t\t\t\tupdatedBindings[ attributeName ]?.source ===\n\t\t\t\t\t'core/pattern-overrides'\n\t\t\t\t) {\n\t\t\t\t\tdelete updatedBindings[ attributeName ];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( ! Object.keys( updatedBindings ).length ) {\n\t\t\t\tupdatedBindings = undefined;\n\t\t\t}\n\t\t\tsetAttributes( {\n\t\t\t\tmetadata: {\n\t\t\t\t\t...attributes.metadata,\n\t\t\t\t\tbindings: updatedBindings,\n\t\t\t\t},\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const attributeName of Object.keys( syncedAttributes ) ) {\n\t\t\tif ( ! updatedBindings[ attributeName ] ) {\n\t\t\t\tupdatedBindings[ attributeName ] = {\n\t\t\t\t\tsource: 'core/pattern-overrides',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( typeof attributes.metadata?.id === 'string' ) {\n\t\t\tsetAttributes( {\n\t\t\t\tmetadata: {\n\t\t\t\t\t...attributes.metadata,\n\t\t\t\t\tbindings: updatedBindings,\n\t\t\t\t},\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = nanoid( 6 );\n\t\tsetAttributes( {\n\t\t\tmetadata: {\n\t\t\t\t...attributes.metadata,\n\t\t\t\tid,\n\t\t\t\tbindings: updatedBindings,\n\t\t\t},\n\t\t} );\n\t}\n\n\treturn (\n\t\t<InspectorControls group=\"advanced\">\n\t\t\t<BaseControl __nextHasNoMarginBottom>\n\t\t\t\t<BaseControl.VisualLabel>\n\t\t\t\t\t{ __( 'Pattern overrides' ) }\n\t\t\t\t</BaseControl.VisualLabel>\n\t\t\t\t<CheckboxControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={ __( 'Allow instance overrides' ) }\n\t\t\t\t\tchecked={ attributeSources.some(\n\t\t\t\t\t\t( source ) => source === 'core/pattern-overrides'\n\t\t\t\t\t) }\n\t\t\t\t\tonChange={ ( isChecked ) => {\n\t\t\t\t\t\tupdateBindings( isChecked );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BaseControl>\n\t\t</InspectorControls>\n\t);\n}\n\nexport default PartialSyncingControls;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","combineReducers","isEditingPattern","state","action","type","clientId","isEditing","PATTERN_TYPES","theme","user","PATTERN_DEFAULT_CATEGORY","PATTERN_SYNC_TYPES","full","unsynced","PARTIAL_SYNCING_SUPPORTED_BLOCKS","content","__","text","url","linkTarget","rel","id","title","alt","createPattern","syncType","categories","async","registry","meta","wp_pattern_sync_status","undefined","reusableBlock","status","wp_pattern_category","dispatch","coreStore","saveEntityRecord","createPatternFromFile","file","fileContent","parsedContent","JSON","parse","e","Error","__file","syncStatus","convertSyncedPatternToStatic","patternBlock","select","blockEditorStore","getBlock","replaceBlocks","cloneBlocksAndRemoveBindings","blocks","map","block","metadata","attributes","bindings","cloneBlock","keys","length","innerBlocks","setEditingPattern","lock","unlock","__dangerousOptInToUnstableAPIsOnlyForCoreModules","storeConfig","reducer","store","createReduxStore","register","registerPrivateActions","actions","registerPrivateSelectors","selectors","unescapeString","arg","decodeEntities","CATEGORY_SLUG","CategorySelector","categoryTerms","onChange","categoryMap","search","setSearch","useState","debouncedSearch","useDebounce","suggestions","useMemo","Array","from","values","category","label","filter","toLowerCase","includes","sort","a","b","localeCompare","createElement","FormTokenField","className","termNames","uniqueTerms","reduce","terms","newTerm","some","term","push","onInputChange","tokenizeOnBlur","__experimentalExpandOnFocus","__next40pxDefaultSize","__nextHasNoMarginBottom","useAddPatternCategory","invalidateResolution","useDispatch","corePatternCategories","userPatternCategories","useSelect","getUserPatternCategories","getBlockPatternCategories","uniqueCategories","Map","forEach","set","name","has","findOrCreateTerm","existingTerm","termData","slug","throwOnError","error","code","data","term_id","CreatePatternModal","modalTitle","restProps","Modal","onRequestClose","onClose","overlayClassName","CreatePatternModalContents","confirmLabel","defaultCategories","onError","onSuccess","defaultSyncType","defaultTitle","setSyncType","setCategoryTerms","setTitle","isSaving","setIsSaving","patternsStore","createErrorNotice","noticesStore","onSubmit","event","preventDefault","patternTitle","sync","Promise","all","termName","newPattern","pattern","categoryId","message","onCreate","VStack","spacing","TextControl","placeholder","ToggleControl","_x","help","checked","HStack","justify","Button","variant","onClick","isBusy","getTermLabels","core","useDuplicatePatternProps","createSuccessNotice","sprintf","raw","SVG","xmlns","viewBox","Path","d","PatternConvertButton","clientIds","rootClientId","closeBlockSettingsMenu","isModalOpen","setIsModalOpen","canConvert","_getBlocksByClientId","canUser","getBlocksByClientId","canInsertBlockType","getBlockRootClientId","rootId","isReusableBlock","getEntityRecord","ref","every","isValid","hasBlockSupport","getContent","useCallback","serialize","Fragment","MenuItem","icon","symbol","handleSuccess","newBlock","createBlock","canRemove","isVisible","managePatternsUrl","canRemoveBlock","getBlockCount","getSettings","isBlockTheme","__unstableIsBlockBasedTheme","innerBlockCount","addQueryArgs","path","post_type","href","recursivelyFindBlockWithId","found","privateApis","DuplicatePatternModal","duplicatedProps","RenamePatternModal","props","originalName","setName","editEntityRecord","__experimentalSaveSpecifiedEntityEdits","saveSpecifiedEntityEdits","savedRecord","errorMessage","required","PatternsMenuItems","BlockSettingsMenuControls","selectedClientIds","PatternsManageButton","RenamePatternCategoryModal","existingCategories","useId","textControlRef","useRef","validationMessage","setValidationMessage","validationMessageId","speak","current","focus","patternCategories","find","existingCategory","newName","PartialSyncingControls","setAttributes","syncedAttributes","attributeSources","attributeName","source","InspectorControls","group","BaseControl","VisualLabel","CheckboxControl","isChecked","updatedBindings","size","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","updateBindings","ResetOverridesControl","useRegistry","patternWithOverrides","getBlockParentsByBlockName","BlockControls","ToolbarGroup","ToolbarButton","_editedRecord$blocks","editedRecord","resolveSelect","getEditedEntityRecord","newAttributes","assign","fromEntries","disabled","__experimentalIsFocusable","PATTERN_USER_CATEGORY","EXCLUDED_PATTERN_SOURCES"],"sourceRoot":""}