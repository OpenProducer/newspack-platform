{"version":3,"file":"./build/patterns/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/./packages/patterns/build-module/store/@wordpress/patterns/src/store/reducer.js","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"coreData\"]","webpack://wp/external window [\"wp\",\"blockEditor\"]","webpack://wp/./packages/patterns/build-module/store/@wordpress/patterns/src/store/actions.js","webpack://wp/./packages/patterns/build-module/store/@wordpress/patterns/src/store/selectors.js","webpack://wp/./packages/patterns/build-module/store/@wordpress/patterns/src/store/index.js","webpack://wp/./packages/patterns/build-module/store/@wordpress/patterns/src/store/constants.js","webpack://wp/external window [\"wp\",\"privateApis\"]","webpack://wp/./packages/patterns/build-module/@wordpress/patterns/src/lock-unlock.js","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"notices\"]","webpack://wp/./packages/patterns/build-module/components/@wordpress/patterns/src/components/create-pattern-modal.js","webpack://wp/external window [\"wp\",\"primitives\"]","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/symbol.js","webpack://wp/./packages/patterns/build-module/components/@wordpress/patterns/src/components/pattern-convert-button.js","webpack://wp/external window [\"wp\",\"url\"]","webpack://wp/./packages/patterns/build-module/components/@wordpress/patterns/src/components/patterns-manage-button.js","webpack://wp/./packages/patterns/build-module/@wordpress/patterns/src/private-apis.js","webpack://wp/./packages/patterns/build-module/components/@wordpress/patterns/src/components/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\nexport function isEditingPattern( state = {}, action ) {\n\tif ( action?.type === 'SET_EDITING_PATTERN' ) {\n\t\treturn {\n\t\t\t...state,\n\t\t\t[ action.clientId ]: action.isEditing,\n\t\t};\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tisEditingPattern,\n} );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","/**\n * WordPress dependencies\n */\n\nimport { parse, serialize, createBlock } from '@wordpress/blocks';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Returns a generator converting one or more static blocks into a pattern, or creating a new empty pattern.\n *\n * @param {string}             title     Pattern title.\n * @param {'full'|'unsynced'}  syncType  They way block is synced, 'full' or 'unsynced'.\n * @param {string[]|undefined} clientIds Optional client IDs of blocks to convert to pattern.\n */\nexport const __experimentalCreatePattern =\n\t( title, syncType, clientIds ) =>\n\tasync ( { registry, dispatch } ) => {\n\t\tconst meta =\n\t\t\tsyncType === 'unsynced'\n\t\t\t\t? {\n\t\t\t\t\t\twp_pattern_sync_status: syncType,\n\t\t\t\t  }\n\t\t\t\t: undefined;\n\n\t\tconst reusableBlock = {\n\t\t\ttitle,\n\t\t\tcontent: clientIds\n\t\t\t\t? serialize(\n\t\t\t\t\t\tregistry\n\t\t\t\t\t\t\t.select( blockEditorStore )\n\t\t\t\t\t\t\t.getBlocksByClientId( clientIds )\n\t\t\t\t  )\n\t\t\t\t: undefined,\n\t\t\tstatus: 'publish',\n\t\t\tmeta,\n\t\t};\n\n\t\tconst updatedRecord = await registry\n\t\t\t.dispatch( coreStore )\n\t\t\t.saveEntityRecord( 'postType', 'wp_block', reusableBlock );\n\n\t\tif ( syncType === 'unsynced' || ! clientIds ) {\n\t\t\treturn updatedRecord;\n\t\t}\n\n\t\tconst newBlock = createBlock( 'core/block', {\n\t\t\tref: updatedRecord.id,\n\t\t} );\n\t\tregistry\n\t\t\t.dispatch( blockEditorStore )\n\t\t\t.replaceBlocks( clientIds, newBlock );\n\t\tdispatch.__experimentalSetEditingPattern( newBlock.clientId, true );\n\t\treturn updatedRecord;\n\t};\n\n/**\n * Returns a generator converting a synced pattern block into a static block.\n *\n * @param {string} clientId The client ID of the block to attach.\n */\nexport const __experimentalConvertSyncedPatternToStatic =\n\t( clientId ) =>\n\t( { registry } ) => {\n\t\tconst oldBlock = registry\n\t\t\t.select( blockEditorStore )\n\t\t\t.getBlock( clientId );\n\t\tconst pattern = registry\n\t\t\t.select( 'core' )\n\t\t\t.getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t'wp_block',\n\t\t\t\toldBlock.attributes.ref\n\t\t\t);\n\n\t\tconst newBlocks = parse(\n\t\t\ttypeof pattern.content === 'function'\n\t\t\t\t? pattern.content( pattern )\n\t\t\t\t: pattern.content\n\t\t);\n\t\tregistry\n\t\t\t.dispatch( blockEditorStore )\n\t\t\t.replaceBlocks( oldBlock.clientId, newBlocks );\n\t};\n\n/**\n * Returns an action descriptor for SET_EDITING_PATTERN action.\n *\n * @param {string}  clientId  The clientID of the pattern to target.\n * @param {boolean} isEditing Whether the block should be in editing state.\n * @return {Object} Action descriptor.\n */\nexport function __experimentalSetEditingPattern( clientId, isEditing ) {\n\treturn {\n\t\ttype: 'SET_EDITING_PATTERN',\n\t\tclientId,\n\t\tisEditing,\n\t};\n}\n","/**\n * Returns true if pattern is in the editing state.\n *\n * @param {Object} state    Global application state.\n * @param {number} clientId the clientID of the block.\n * @return {boolean} Whether the pattern is in the editing state.\n */\nexport function __experimentalIsEditingPattern( state, clientId ) {\n\treturn state.isEditingPattern[ clientId ];\n}\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport { STORE_NAME } from './constants';\nimport * as selectors from './selectors';\n\n/**\n * Post editor data store configuration.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#registerStore\n *\n * @type {Object}\n */\nexport const storeConfig = {\n\treducer,\n\tselectors,\n\tactions,\n};\n\n/**\n * Store definition for the editor namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\t...storeConfig,\n} );\n\nregister( store );\n","/**\n * Module Constants\n */\nexport const STORE_NAME = 'core/patterns';\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"privateApis\"];","/**\n * WordPress dependencies\n */\nimport { __dangerousOptInToUnstableAPIsOnlyForCoreModules } from '@wordpress/private-apis';\nexport const { lock, unlock } =\n\t__dangerousOptInToUnstableAPIsOnlyForCoreModules(\n\t\t'I know using unstable features means my plugin or theme will inevitably break on the next WordPress release.',\n\t\t'@wordpress/patterns'\n\t);\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"notices\"];","/**\n * WordPress dependencies\n */\nimport {\n\tModal,\n\tButton,\n\tTextControl,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n\tToggleControl,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useState, useCallback } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\nexport const USER_PATTERN_CATEGORY = 'my-patterns';\n\nexport const SYNC_TYPES = {\n\tfull: undefined,\n\tunsynced: 'unsynced',\n};\n\n/**\n * Internal dependencies\n */\nimport { store } from '../store';\n\nexport default function CreatePatternModal( {\n\tonSuccess,\n\tonError,\n\tclientIds,\n\tonClose,\n\tclassName = 'patterns-menu-items__convert-modal',\n} ) {\n\tconst [ syncType, setSyncType ] = useState( SYNC_TYPES.full );\n\tconst [ title, setTitle ] = useState( '' );\n\tconst { __experimentalCreatePattern: createPattern } = useDispatch( store );\n\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\tconst onCreate = useCallback(\n\t\tasync function ( patternTitle, sync ) {\n\t\t\ttry {\n\t\t\t\tconst newPattern = await createPattern(\n\t\t\t\t\tpatternTitle,\n\t\t\t\t\tsync,\n\t\t\t\t\tclientIds\n\t\t\t\t);\n\t\t\t\tonSuccess( {\n\t\t\t\t\tpattern: newPattern,\n\t\t\t\t\tcategoryId: USER_PATTERN_CATEGORY,\n\t\t\t\t} );\n\t\t\t} catch ( error ) {\n\t\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tid: 'convert-to-pattern-error',\n\t\t\t\t} );\n\t\t\t\tonError();\n\t\t\t}\n\t\t},\n\t\t[ createPattern, clientIds, onSuccess, createErrorNotice, onError ]\n\t);\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ __( 'Create pattern' ) }\n\t\t\tonRequestClose={ () => {\n\t\t\t\tonClose();\n\t\t\t\tsetTitle( '' );\n\t\t\t} }\n\t\t\toverlayClassName={ className }\n\t\t>\n\t\t\t<form\n\t\t\t\tonSubmit={ ( event ) => {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tonCreate( title, syncType );\n\t\t\t\t\tsetTitle( '' );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<VStack spacing=\"5\">\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\t\tplaceholder={ __( 'My pattern' ) }\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Synced' ) }\n\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t'Editing the pattern will update it anywhere it is used.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tchecked={ ! syncType }\n\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\tsetSyncType(\n\t\t\t\t\t\t\t\tsyncType === SYNC_TYPES.full\n\t\t\t\t\t\t\t\t\t? SYNC_TYPES.unsynced\n\t\t\t\t\t\t\t\t\t: SYNC_TYPES.full\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\tsetTitle( '' );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t{ __( 'Create' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst symbol = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-1 1.4l-5.6 5.6c-.1.1-.3.1-.4 0l-5.6-5.6c-.1-.1-.1-.3 0-.4l5.6-5.6s.1-.1.2-.1.1 0 .2.1l5.6 5.6c.1.1.1.3 0 .4zm-16.6-.4L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\" />\n\t</SVG>\n);\n\nexport default symbol;\n","/**\n * WordPress dependencies\n */\nimport { hasBlockSupport, isReusableBlock } from '@wordpress/blocks';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useState } from '@wordpress/element';\nimport { MenuItem } from '@wordpress/components';\nimport { symbol } from '@wordpress/icons';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n/**\n * Internal dependencies\n */\nimport CreatePatternModal from './create-pattern-modal';\n\n/**\n * Menu control to convert block(s) to a pattern block.\n *\n * @param {Object}   props              Component props.\n * @param {string[]} props.clientIds    Client ids of selected blocks.\n * @param {string}   props.rootClientId ID of the currently selected top-level block.\n * @return {import('@wordpress/element').WPComponent} The menu control or null.\n */\nexport default function PatternConvertButton( { clientIds, rootClientId } ) {\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\tconst [ isModalOpen, setIsModalOpen ] = useState( false );\n\tconst canConvert = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canUser } = select( coreStore );\n\t\t\tconst {\n\t\t\t\tgetBlocksByClientId,\n\t\t\t\tcanInsertBlockType,\n\t\t\t\tgetBlockRootClientId,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tconst rootId =\n\t\t\t\trootClientId ||\n\t\t\t\t( clientIds.length > 0\n\t\t\t\t\t? getBlockRootClientId( clientIds[ 0 ] )\n\t\t\t\t\t: undefined );\n\n\t\t\tconst blocks = getBlocksByClientId( clientIds ) ?? [];\n\n\t\t\tconst isReusable =\n\t\t\t\tblocks.length === 1 &&\n\t\t\t\tblocks[ 0 ] &&\n\t\t\t\tisReusableBlock( blocks[ 0 ] ) &&\n\t\t\t\t!! select( coreStore ).getEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\t'wp_block',\n\t\t\t\t\tblocks[ 0 ].attributes.ref\n\t\t\t\t);\n\n\t\t\tconst _canConvert =\n\t\t\t\t// Hide when this is already a synced pattern.\n\t\t\t\t! isReusable &&\n\t\t\t\t// Hide when patterns are disabled.\n\t\t\t\tcanInsertBlockType( 'core/block', rootId ) &&\n\t\t\t\tblocks.every(\n\t\t\t\t\t( block ) =>\n\t\t\t\t\t\t// Guard against the case where a regular block has *just* been converted.\n\t\t\t\t\t\t!! block &&\n\t\t\t\t\t\t// Hide on invalid blocks.\n\t\t\t\t\t\tblock.isValid &&\n\t\t\t\t\t\t// Hide when block doesn't support being made into a pattern.\n\t\t\t\t\t\thasBlockSupport( block.name, 'reusable', true )\n\t\t\t\t) &&\n\t\t\t\t// Hide when current doesn't have permission to do that.\n\t\t\t\t!! canUser( 'create', 'blocks' );\n\n\t\t\treturn _canConvert;\n\t\t},\n\t\t[ clientIds, rootClientId ]\n\t);\n\n\tif ( ! canConvert ) {\n\t\treturn null;\n\t}\n\n\tconst handleSuccess = ( { pattern } ) => {\n\t\tcreateSuccessNotice(\n\t\t\tpattern.wp_pattern_sync_status === 'unsynced'\n\t\t\t\t? sprintf(\n\t\t\t\t\t\t// translators: %s: the name the user has given to the pattern.\n\t\t\t\t\t\t__( 'Unsynced Pattern created: %s' ),\n\t\t\t\t\t\tpattern.title.raw\n\t\t\t\t  )\n\t\t\t\t: sprintf(\n\t\t\t\t\t\t// translators: %s: the name the user has given to the pattern.\n\t\t\t\t\t\t__( 'Synced Pattern created: %s' ),\n\t\t\t\t\t\tpattern.title.raw\n\t\t\t\t  ),\n\t\t\t{\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'convert-to-pattern-success',\n\t\t\t}\n\t\t);\n\t\tsetIsModalOpen( false );\n\t};\n\treturn (\n\t\t<>\n\t\t\t<MenuItem\n\t\t\t\ticon={ symbol }\n\t\t\t\tonClick={ () => setIsModalOpen( true ) }\n\t\t\t\taria-expanded={ isModalOpen }\n\t\t\t\taria-haspopup=\"dialog\"\n\t\t\t>\n\t\t\t\t{ __( 'Create pattern' ) }\n\t\t\t</MenuItem>\n\t\t\t{ isModalOpen && (\n\t\t\t\t<CreatePatternModal\n\t\t\t\t\tclientIds={ clientIds }\n\t\t\t\t\tonSuccess={ ( pattern ) => {\n\t\t\t\t\t\thandleSuccess( pattern );\n\t\t\t\t\t} }\n\t\t\t\t\tonError={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t} }\n\t\t\t\t\tonClose={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { isReusableBlock } from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { addQueryArgs } from '@wordpress/url';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../store';\n\nfunction PatternsManageButton( { clientId } ) {\n\tconst { canRemove, isVisible, innerBlockCount, managePatternsUrl } =\n\t\tuseSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst { getBlock, canRemoveBlock, getBlockCount, getSettings } =\n\t\t\t\t\tselect( blockEditorStore );\n\t\t\t\tconst { canUser } = select( coreStore );\n\t\t\t\tconst reusableBlock = getBlock( clientId );\n\t\t\t\tconst isBlockTheme = getSettings().__unstableIsBlockBasedTheme;\n\n\t\t\t\treturn {\n\t\t\t\t\tcanRemove: canRemoveBlock( clientId ),\n\t\t\t\t\tisVisible:\n\t\t\t\t\t\t!! reusableBlock &&\n\t\t\t\t\t\tisReusableBlock( reusableBlock ) &&\n\t\t\t\t\t\t!! canUser(\n\t\t\t\t\t\t\t'update',\n\t\t\t\t\t\t\t'blocks',\n\t\t\t\t\t\t\treusableBlock.attributes.ref\n\t\t\t\t\t\t),\n\t\t\t\t\tinnerBlockCount: getBlockCount( clientId ),\n\t\t\t\t\t// The site editor and templates both check whether the user\n\t\t\t\t\t// has edit_theme_options capabilities. We can leverage that here\n\t\t\t\t\t// and omit the manage patterns link if the user can't access it.\n\t\t\t\t\tmanagePatternsUrl:\n\t\t\t\t\t\tisBlockTheme && canUser( 'read', 'templates' )\n\t\t\t\t\t\t\t? addQueryArgs( 'site-editor.php', {\n\t\t\t\t\t\t\t\t\tpath: '/patterns',\n\t\t\t\t\t\t\t  } )\n\t\t\t\t\t\t\t: addQueryArgs( 'edit.php', {\n\t\t\t\t\t\t\t\t\tpost_type: 'wp_block',\n\t\t\t\t\t\t\t  } ),\n\t\t\t\t};\n\t\t\t},\n\t\t\t[ clientId ]\n\t\t);\n\n\tconst { __experimentalConvertSyncedPatternToStatic: convertBlockToStatic } =\n\t\tuseDispatch( editorStore );\n\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<MenuItem href={ managePatternsUrl }>\n\t\t\t\t{ __( 'Manage patterns' ) }\n\t\t\t</MenuItem>\n\t\t\t{ canRemove && (\n\t\t\t\t<MenuItem onClick={ () => convertBlockToStatic( clientId ) }>\n\t\t\t\t\t{ innerBlockCount > 1\n\t\t\t\t\t\t? __( 'Detach patterns' )\n\t\t\t\t\t\t: __( 'Detach pattern' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default PatternsManageButton;\n","/**\n * Internal dependencies\n */\nimport { lock } from './lock-unlock';\nimport CreatePatternModal from './components/create-pattern-modal';\nimport PatternsMenuItems from './components';\n\nexport const privateApis = {};\nlock( privateApis, {\n\tCreatePatternModal,\n\tPatternsMenuItems,\n} );\n","/**\n * WordPress dependencies\n */\nimport { BlockSettingsMenuControls } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport PatternConvertButton from './pattern-convert-button';\nimport PatternsManageButton from './patterns-manage-button';\n\nexport default function PatternsMenuItems( { rootClientId } ) {\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t{ ( { selectedClientIds } ) => (\n\t\t\t\t<>\n\t\t\t\t\t<PatternConvertButton\n\t\t\t\t\t\tclientIds={ selectedClientIds }\n\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t/>\n\t\t\t\t\t{ selectedClientIds.length === 1 && (\n\t\t\t\t\t\t<PatternsManageButton\n\t\t\t\t\t\t\tclientId={ selectedClientIds[ 0 ] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t) }\n\t\t</BlockSettingsMenuControls>\n\t);\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","combineReducers","isEditingPattern","state","action","type","clientId","isEditing","__experimentalCreatePattern","title","syncType","clientIds","async","registry","dispatch","meta","wp_pattern_sync_status","undefined","reusableBlock","content","serialize","select","blockEditorStore","getBlocksByClientId","status","updatedRecord","coreStore","saveEntityRecord","newBlock","createBlock","ref","id","replaceBlocks","__experimentalSetEditingPattern","__experimentalConvertSyncedPatternToStatic","oldBlock","getBlock","pattern","getEditedEntityRecord","attributes","newBlocks","parse","__experimentalIsEditingPattern","storeConfig","reducer","selectors","actions","store","createReduxStore","register","lock","unlock","__dangerousOptInToUnstableAPIsOnlyForCoreModules","USER_PATTERN_CATEGORY","SYNC_TYPES","full","unsynced","CreatePatternModal","onSuccess","onError","onClose","className","setSyncType","useState","setTitle","createPattern","useDispatch","createErrorNotice","noticesStore","onCreate","useCallback","patternTitle","sync","newPattern","categoryId","error","message","createElement","Modal","__","onRequestClose","overlayClassName","onSubmit","event","preventDefault","VStack","spacing","TextControl","__nextHasNoMarginBottom","label","onChange","placeholder","ToggleControl","help","checked","HStack","justify","Button","variant","onClick","SVG","xmlns","viewBox","Path","d","PatternConvertButton","rootClientId","createSuccessNotice","isModalOpen","setIsModalOpen","useSelect","_getBlocksByClientId","canUser","canInsertBlockType","getBlockRootClientId","rootId","length","blocks","isReusableBlock","getEntityRecord","every","block","isValid","hasBlockSupport","name","Fragment","MenuItem","icon","symbol","handleSuccess","sprintf","raw","canRemove","isVisible","innerBlockCount","managePatternsUrl","canRemoveBlock","getBlockCount","getSettings","isBlockTheme","__unstableIsBlockBasedTheme","addQueryArgs","path","post_type","convertBlockToStatic","editorStore","href","privateApis","PatternsMenuItems","BlockSettingsMenuControls","selectedClientIds","PatternsManageButton"],"sourceRoot":""}