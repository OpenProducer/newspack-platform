{"version":3,"file":"./build/patterns/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"data\"]","../../packages/patterns/src/store/reducer.js","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"coreData\"]","webpack://wp/external window [\"wp\",\"blockEditor\"]","../../packages/patterns/src/constants.js","../../packages/patterns/src/store/actions.js","../../packages/patterns/src/store/selectors.js","webpack://wp/external window [\"wp\",\"privateApis\"]","../../packages/patterns/src/lock-unlock.js","../../packages/patterns/src/store/index.js","../../packages/patterns/src/store/constants.js","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"notices\"]","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/external window [\"wp\",\"htmlEntities\"]","../../packages/patterns/src/components/category-selector.js","../../packages/patterns/src/components/create-pattern-modal.js","webpack://wp/external window [\"wp\",\"primitives\"]","../../packages/icons/src/library/symbol.js","../../packages/patterns/src/components/pattern-convert-button.js","webpack://wp/external window [\"wp\",\"url\"]","../../packages/patterns/src/components/patterns-manage-button.js","../../packages/patterns/src/private-apis.js","../../packages/patterns/src/components/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\nexport function isEditingPattern( state = {}, action ) {\n\tif ( action?.type === 'SET_EDITING_PATTERN' ) {\n\t\treturn {\n\t\t\t...state,\n\t\t\t[ action.clientId ]: action.isEditing,\n\t\t};\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tisEditingPattern,\n} );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","export const PATTERN_TYPES = {\n\ttheme: 'pattern',\n\tuser: 'wp_block',\n};\n\nexport const PATTERN_DEFAULT_CATEGORY = 'all-patterns';\nexport const PATTERN_USER_CATEGORY = 'my-patterns';\nexport const PATTERN_CORE_SOURCES = [\n\t'core',\n\t'pattern-directory/core',\n\t'pattern-directory/featured',\n\t'pattern-directory/theme',\n];\nexport const PATTERN_SYNC_TYPES = {\n\tfull: 'fully',\n\tunsynced: 'unsynced',\n};\n","/**\n * WordPress dependencies\n */\n\nimport { parse } from '@wordpress/blocks';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { PATTERN_SYNC_TYPES } from '../constants';\n\n/**\n * Returns a generator converting one or more static blocks into a pattern, or creating a new empty pattern.\n *\n * @param {string}             title        Pattern title.\n * @param {'full'|'unsynced'}  syncType     They way block is synced, 'full' or 'unsynced'.\n * @param {string|undefined}   [content]    Optional serialized content of blocks to convert to pattern.\n * @param {number[]|undefined} [categories] Ids of any selected categories.\n */\nexport const createPattern =\n\t( title, syncType, content, categories ) =>\n\tasync ( { registry } ) => {\n\t\tconst meta =\n\t\t\tsyncType === PATTERN_SYNC_TYPES.unsynced\n\t\t\t\t? {\n\t\t\t\t\t\twp_pattern_sync_status: syncType,\n\t\t\t\t  }\n\t\t\t\t: undefined;\n\n\t\tconst reusableBlock = {\n\t\t\ttitle,\n\t\t\tcontent,\n\t\t\tstatus: 'publish',\n\t\t\tmeta,\n\t\t\twp_pattern_category: categories,\n\t\t};\n\n\t\tconst updatedRecord = await registry\n\t\t\t.dispatch( coreStore )\n\t\t\t.saveEntityRecord( 'postType', 'wp_block', reusableBlock );\n\n\t\treturn updatedRecord;\n\t};\n\n/**\n * Create a pattern from a JSON file.\n * @param {File}               file         The JSON file instance of the pattern.\n * @param {number[]|undefined} [categories] Ids of any selected categories.\n */\nexport const createPatternFromFile =\n\t( file, categories ) =>\n\tasync ( { dispatch } ) => {\n\t\tconst fileContent = await file.text();\n\t\t/** @type {import('./types').PatternJSON} */\n\t\tlet parsedContent;\n\t\ttry {\n\t\t\tparsedContent = JSON.parse( fileContent );\n\t\t} catch ( e ) {\n\t\t\tthrow new Error( 'Invalid JSON file' );\n\t\t}\n\t\tif (\n\t\t\tparsedContent.__file !== 'wp_block' ||\n\t\t\t! parsedContent.title ||\n\t\t\t! parsedContent.content ||\n\t\t\ttypeof parsedContent.title !== 'string' ||\n\t\t\ttypeof parsedContent.content !== 'string' ||\n\t\t\t( parsedContent.syncStatus &&\n\t\t\t\ttypeof parsedContent.syncStatus !== 'string' )\n\t\t) {\n\t\t\tthrow new Error( 'Invalid pattern JSON file' );\n\t\t}\n\n\t\tconst pattern = await dispatch.createPattern(\n\t\t\tparsedContent.title,\n\t\t\tparsedContent.syncStatus,\n\t\t\tparsedContent.content,\n\t\t\tcategories\n\t\t);\n\n\t\treturn pattern;\n\t};\n\n/**\n * Returns a generator converting a synced pattern block into a static block.\n *\n * @param {string} clientId The client ID of the block to attach.\n */\nexport const convertSyncedPatternToStatic =\n\t( clientId ) =>\n\t( { registry } ) => {\n\t\tconst oldBlock = registry\n\t\t\t.select( blockEditorStore )\n\t\t\t.getBlock( clientId );\n\t\tconst pattern = registry\n\t\t\t.select( 'core' )\n\t\t\t.getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t'wp_block',\n\t\t\t\toldBlock.attributes.ref\n\t\t\t);\n\n\t\tconst newBlocks = parse(\n\t\t\ttypeof pattern.content === 'function'\n\t\t\t\t? pattern.content( pattern )\n\t\t\t\t: pattern.content\n\t\t);\n\t\tregistry\n\t\t\t.dispatch( blockEditorStore )\n\t\t\t.replaceBlocks( oldBlock.clientId, newBlocks );\n\t};\n\n/**\n * Returns an action descriptor for SET_EDITING_PATTERN action.\n *\n * @param {string}  clientId  The clientID of the pattern to target.\n * @param {boolean} isEditing Whether the block should be in editing state.\n * @return {Object} Action descriptor.\n */\nexport function setEditingPattern( clientId, isEditing ) {\n\treturn {\n\t\ttype: 'SET_EDITING_PATTERN',\n\t\tclientId,\n\t\tisEditing,\n\t};\n}\n","/**\n * Returns true if pattern is in the editing state.\n *\n * @param {Object} state    Global application state.\n * @param {number} clientId the clientID of the block.\n * @return {boolean} Whether the pattern is in the editing state.\n */\nexport function isEditingPattern( state, clientId ) {\n\treturn state.isEditingPattern[ clientId ];\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"privateApis\"];","/**\n * WordPress dependencies\n */\nimport { __dangerousOptInToUnstableAPIsOnlyForCoreModules } from '@wordpress/private-apis';\nexport const { lock, unlock } =\n\t__dangerousOptInToUnstableAPIsOnlyForCoreModules(\n\t\t'I know using unstable features means my plugin or theme will inevitably break on the next WordPress release.',\n\t\t'@wordpress/patterns'\n\t);\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport { STORE_NAME } from './constants';\nimport * as selectors from './selectors';\nimport { unlock } from '../lock-unlock';\n\n/**\n * Post editor data store configuration.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#registerStore\n *\n * @type {Object}\n */\nexport const storeConfig = {\n\treducer,\n};\n\n/**\n * Store definition for the editor namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\t...storeConfig,\n} );\n\nregister( store );\nunlock( store ).registerPrivateActions( actions );\nunlock( store ).registerPrivateSelectors( selectors );\n","/**\n * Module Constants\n */\nexport const STORE_NAME = 'core/patterns';\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"notices\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"htmlEntities\"];","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useMemo, useState } from '@wordpress/element';\nimport { FormTokenField } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useDebounce } from '@wordpress/compose';\nimport { decodeEntities } from '@wordpress/html-entities';\n\nconst unescapeString = ( arg ) => {\n\treturn decodeEntities( arg );\n};\n\nconst EMPTY_ARRAY = [];\nconst MAX_TERMS_SUGGESTIONS = 20;\nconst DEFAULT_QUERY = {\n\tper_page: MAX_TERMS_SUGGESTIONS,\n\t_fields: 'id,name',\n\tcontext: 'view',\n};\nexport const CATEGORY_SLUG = 'wp_pattern_category';\n\nexport default function CategorySelector( { values, onChange } ) {\n\tconst [ search, setSearch ] = useState( '' );\n\tconst debouncedSearch = useDebounce( setSearch, 500 );\n\n\tconst { searchResults } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecords } = select( coreStore );\n\n\t\t\treturn {\n\t\t\t\tsearchResults: !! search\n\t\t\t\t\t? getEntityRecords( 'taxonomy', CATEGORY_SLUG, {\n\t\t\t\t\t\t\t...DEFAULT_QUERY,\n\t\t\t\t\t\t\tsearch,\n\t\t\t\t\t  } )\n\t\t\t\t\t: EMPTY_ARRAY,\n\t\t\t};\n\t\t},\n\t\t[ search ]\n\t);\n\n\tconst suggestions = useMemo( () => {\n\t\treturn ( searchResults ?? [] ).map( ( term ) =>\n\t\t\tunescapeString( term.name )\n\t\t);\n\t}, [ searchResults ] );\n\n\tfunction handleChange( termNames ) {\n\t\tconst uniqueTerms = termNames.reduce( ( terms, newTerm ) => {\n\t\t\tif (\n\t\t\t\t! terms.some(\n\t\t\t\t\t( term ) => term.toLowerCase() === newTerm.toLowerCase()\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tterms.push( newTerm );\n\t\t\t}\n\t\t\treturn terms;\n\t\t}, [] );\n\n\t\tonChange( uniqueTerms );\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<FormTokenField\n\t\t\t\tclassName=\"patterns-menu-items__convert-modal-categories\"\n\t\t\t\tvalue={ values }\n\t\t\t\tsuggestions={ suggestions }\n\t\t\t\tonChange={ handleChange }\n\t\t\t\tonInputChange={ debouncedSearch }\n\t\t\t\tmaxSuggestions={ MAX_TERMS_SUGGESTIONS }\n\t\t\t\tlabel={ __( 'Categories' ) }\n\t\t\t\ttokenizeOnBlur={ true }\n\t\t\t/>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\tModal,\n\tButton,\n\tTextControl,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n\tToggleControl,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { PATTERN_DEFAULT_CATEGORY, PATTERN_SYNC_TYPES } from '../constants';\n\n/**\n * Internal dependencies\n */\nimport { store as patternsStore } from '../store';\nimport CategorySelector, { CATEGORY_SLUG } from './category-selector';\nimport { unlock } from '../lock-unlock';\n\nexport default function CreatePatternModal( {\n\tonSuccess,\n\tonError,\n\tcontent,\n\tonClose,\n\tclassName = 'patterns-menu-items__convert-modal',\n} ) {\n\tconst [ syncType, setSyncType ] = useState( PATTERN_SYNC_TYPES.full );\n\tconst [ categoryTerms, setCategoryTerms ] = useState( [] );\n\tconst [ title, setTitle ] = useState( '' );\n\tconst [ isSaving, setIsSaving ] = useState( false );\n\tconst { createPattern } = unlock( useDispatch( patternsStore ) );\n\tconst { saveEntityRecord, invalidateResolution } = useDispatch( coreStore );\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\n\tasync function onCreate( patternTitle, sync ) {\n\t\tif ( ! title || isSaving ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tsetIsSaving( true );\n\t\t\tconst categories = await Promise.all(\n\t\t\t\tcategoryTerms.map( ( termName ) =>\n\t\t\t\t\tfindOrCreateTerm( termName )\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tconst newPattern = await createPattern(\n\t\t\t\tpatternTitle,\n\t\t\t\tsync,\n\t\t\t\ttypeof content === 'function' ? content() : content,\n\t\t\t\tcategories\n\t\t\t);\n\t\t\tonSuccess( {\n\t\t\t\tpattern: newPattern,\n\t\t\t\tcategoryId: PATTERN_DEFAULT_CATEGORY,\n\t\t\t} );\n\t\t} catch ( error ) {\n\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'convert-to-pattern-error',\n\t\t\t} );\n\t\t\tonError();\n\t\t} finally {\n\t\t\tsetIsSaving( false );\n\t\t\tsetCategoryTerms( [] );\n\t\t\tsetTitle( '' );\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} term\n\t * @return {Promise<number>} The pattern category id.\n\t */\n\tasync function findOrCreateTerm( term ) {\n\t\ttry {\n\t\t\tconst newTerm = await saveEntityRecord(\n\t\t\t\t'taxonomy',\n\t\t\t\tCATEGORY_SLUG,\n\t\t\t\t{ name: term },\n\t\t\t\t{ throwOnError: true }\n\t\t\t);\n\t\t\tinvalidateResolution( 'getUserPatternCategories' );\n\t\t\treturn newTerm.id;\n\t\t} catch ( error ) {\n\t\t\tif ( error.code !== 'term_exists' ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn error.data.term_id;\n\t\t}\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ __( 'Create pattern' ) }\n\t\t\tonRequestClose={ () => {\n\t\t\t\tonClose();\n\t\t\t\tsetTitle( '' );\n\t\t\t} }\n\t\t\toverlayClassName={ className }\n\t\t>\n\t\t\t<form\n\t\t\t\tonSubmit={ ( event ) => {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tonCreate( title, syncType );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<VStack spacing=\"5\">\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\t\tplaceholder={ __( 'My pattern' ) }\n\t\t\t\t\t\tclassName=\"patterns-create-modal__name-input\"\n\t\t\t\t\t/>\n\t\t\t\t\t<CategorySelector\n\t\t\t\t\t\tvalues={ categoryTerms }\n\t\t\t\t\t\tonChange={ setCategoryTerms }\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Synced' ) }\n\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t'Editing the pattern will update it anywhere it is used.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tchecked={ syncType === PATTERN_SYNC_TYPES.full }\n\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\tsetSyncType(\n\t\t\t\t\t\t\t\tsyncType === PATTERN_SYNC_TYPES.full\n\t\t\t\t\t\t\t\t\t? PATTERN_SYNC_TYPES.unsynced\n\t\t\t\t\t\t\t\t\t: PATTERN_SYNC_TYPES.full\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\tsetTitle( '' );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\taria-disabled={ ! title || isSaving }\n\t\t\t\t\t\t\tisBusy={ isSaving }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Create' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst symbol = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-1 1.4l-5.6 5.6c-.1.1-.3.1-.4 0l-5.6-5.6c-.1-.1-.1-.3 0-.4l5.6-5.6s.1-.1.2-.1.1 0 .2.1l5.6 5.6c.1.1.1.3 0 .4zm-16.6-.4L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\" />\n\t</SVG>\n);\n\nexport default symbol;\n","/**\n * WordPress dependencies\n */\nimport {\n\thasBlockSupport,\n\tisReusableBlock,\n\tcreateBlock,\n\tserialize,\n} from '@wordpress/blocks';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useState, useCallback } from '@wordpress/element';\nimport { MenuItem } from '@wordpress/components';\nimport { symbol } from '@wordpress/icons';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n/**\n * Internal dependencies\n */\nimport { store as patternsStore } from '../store';\nimport CreatePatternModal from './create-pattern-modal';\nimport { unlock } from '../lock-unlock';\nimport { PATTERN_SYNC_TYPES } from '../constants';\n\n/**\n * Menu control to convert block(s) to a pattern block.\n *\n * @param {Object}   props              Component props.\n * @param {string[]} props.clientIds    Client ids of selected blocks.\n * @param {string}   props.rootClientId ID of the currently selected top-level block.\n * @return {import('@wordpress/element').WPComponent} The menu control or null.\n */\nexport default function PatternConvertButton( { clientIds, rootClientId } ) {\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\t// Ignore reason: false positive of the lint rule.\n\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\tconst { setEditingPattern } = unlock( useDispatch( patternsStore ) );\n\tconst [ isModalOpen, setIsModalOpen ] = useState( false );\n\tconst canConvert = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canUser } = select( coreStore );\n\t\t\tconst {\n\t\t\t\tgetBlocksByClientId,\n\t\t\t\tcanInsertBlockType,\n\t\t\t\tgetBlockRootClientId,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tconst rootId =\n\t\t\t\trootClientId ||\n\t\t\t\t( clientIds.length > 0\n\t\t\t\t\t? getBlockRootClientId( clientIds[ 0 ] )\n\t\t\t\t\t: undefined );\n\n\t\t\tconst blocks = getBlocksByClientId( clientIds ) ?? [];\n\n\t\t\tconst isReusable =\n\t\t\t\tblocks.length === 1 &&\n\t\t\t\tblocks[ 0 ] &&\n\t\t\t\tisReusableBlock( blocks[ 0 ] ) &&\n\t\t\t\t!! select( coreStore ).getEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\t'wp_block',\n\t\t\t\t\tblocks[ 0 ].attributes.ref\n\t\t\t\t);\n\n\t\t\tconst _canConvert =\n\t\t\t\t// Hide when this is already a synced pattern.\n\t\t\t\t! isReusable &&\n\t\t\t\t// Hide when patterns are disabled.\n\t\t\t\tcanInsertBlockType( 'core/block', rootId ) &&\n\t\t\t\tblocks.every(\n\t\t\t\t\t( block ) =>\n\t\t\t\t\t\t// Guard against the case where a regular block has *just* been converted.\n\t\t\t\t\t\t!! block &&\n\t\t\t\t\t\t// Hide on invalid blocks.\n\t\t\t\t\t\tblock.isValid &&\n\t\t\t\t\t\t// Hide when block doesn't support being made into a pattern.\n\t\t\t\t\t\thasBlockSupport( block.name, 'reusable', true )\n\t\t\t\t) &&\n\t\t\t\t// Hide when current doesn't have permission to do that.\n\t\t\t\t!! canUser( 'create', 'blocks' );\n\n\t\t\treturn _canConvert;\n\t\t},\n\t\t[ clientIds, rootClientId ]\n\t);\n\tconst { getBlocksByClientId } = useSelect( blockEditorStore );\n\tconst getContent = useCallback(\n\t\t() => serialize( getBlocksByClientId( clientIds ) ),\n\t\t[ getBlocksByClientId, clientIds ]\n\t);\n\n\tif ( ! canConvert ) {\n\t\treturn null;\n\t}\n\n\tconst handleSuccess = ( { pattern } ) => {\n\t\tif ( pattern.wp_pattern_sync_status !== PATTERN_SYNC_TYPES.unsynced ) {\n\t\t\tconst newBlock = createBlock( 'core/block', {\n\t\t\t\tref: pattern.id,\n\t\t\t} );\n\n\t\t\treplaceBlocks( clientIds, newBlock );\n\t\t\tsetEditingPattern( newBlock.clientId, true );\n\t\t}\n\n\t\tcreateSuccessNotice(\n\t\t\tpattern.wp_pattern_sync_status === PATTERN_SYNC_TYPES.unsynced\n\t\t\t\t? sprintf(\n\t\t\t\t\t\t// translators: %s: the name the user has given to the pattern.\n\t\t\t\t\t\t__( 'Unsynced pattern created: %s' ),\n\t\t\t\t\t\tpattern.title.raw\n\t\t\t\t  )\n\t\t\t\t: sprintf(\n\t\t\t\t\t\t// translators: %s: the name the user has given to the pattern.\n\t\t\t\t\t\t__( 'Synced pattern created: %s' ),\n\t\t\t\t\t\tpattern.title.raw\n\t\t\t\t  ),\n\t\t\t{\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'convert-to-pattern-success',\n\t\t\t}\n\t\t);\n\t\tsetIsModalOpen( false );\n\t};\n\treturn (\n\t\t<>\n\t\t\t<MenuItem\n\t\t\t\ticon={ symbol }\n\t\t\t\tonClick={ () => setIsModalOpen( true ) }\n\t\t\t\taria-expanded={ isModalOpen }\n\t\t\t\taria-haspopup=\"dialog\"\n\t\t\t>\n\t\t\t\t{ __( 'Create pattern' ) }\n\t\t\t</MenuItem>\n\t\t\t{ isModalOpen && (\n\t\t\t\t<CreatePatternModal\n\t\t\t\t\tcontent={ getContent }\n\t\t\t\t\tonSuccess={ ( pattern ) => {\n\t\t\t\t\t\thandleSuccess( pattern );\n\t\t\t\t\t} }\n\t\t\t\t\tonError={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t} }\n\t\t\t\t\tonClose={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { isReusableBlock } from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { addQueryArgs } from '@wordpress/url';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as patternsStore } from '../store';\nimport { unlock } from '../lock-unlock';\n\nfunction PatternsManageButton( { clientId } ) {\n\tconst { canRemove, isVisible, innerBlockCount, managePatternsUrl } =\n\t\tuseSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst { getBlock, canRemoveBlock, getBlockCount, getSettings } =\n\t\t\t\t\tselect( blockEditorStore );\n\t\t\t\tconst { canUser } = select( coreStore );\n\t\t\t\tconst reusableBlock = getBlock( clientId );\n\t\t\t\tconst isBlockTheme = getSettings().__unstableIsBlockBasedTheme;\n\n\t\t\t\treturn {\n\t\t\t\t\tcanRemove: canRemoveBlock( clientId ),\n\t\t\t\t\tisVisible:\n\t\t\t\t\t\t!! reusableBlock &&\n\t\t\t\t\t\tisReusableBlock( reusableBlock ) &&\n\t\t\t\t\t\t!! canUser(\n\t\t\t\t\t\t\t'update',\n\t\t\t\t\t\t\t'blocks',\n\t\t\t\t\t\t\treusableBlock.attributes.ref\n\t\t\t\t\t\t),\n\t\t\t\t\tinnerBlockCount: getBlockCount( clientId ),\n\t\t\t\t\t// The site editor and templates both check whether the user\n\t\t\t\t\t// has edit_theme_options capabilities. We can leverage that here\n\t\t\t\t\t// and omit the manage patterns link if the user can't access it.\n\t\t\t\t\tmanagePatternsUrl:\n\t\t\t\t\t\tisBlockTheme && canUser( 'read', 'templates' )\n\t\t\t\t\t\t\t? addQueryArgs( 'site-editor.php', {\n\t\t\t\t\t\t\t\t\tpath: '/patterns',\n\t\t\t\t\t\t\t  } )\n\t\t\t\t\t\t\t: addQueryArgs( 'edit.php', {\n\t\t\t\t\t\t\t\t\tpost_type: 'wp_block',\n\t\t\t\t\t\t\t  } ),\n\t\t\t\t};\n\t\t\t},\n\t\t\t[ clientId ]\n\t\t);\n\n\t// Ignore reason: false positive of the lint rule.\n\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\tconst { convertSyncedPatternToStatic } = unlock(\n\t\tuseDispatch( patternsStore )\n\t);\n\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<MenuItem href={ managePatternsUrl }>\n\t\t\t\t{ __( 'Manage patterns' ) }\n\t\t\t</MenuItem>\n\t\t\t{ canRemove && (\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ () => convertSyncedPatternToStatic( clientId ) }\n\t\t\t\t>\n\t\t\t\t\t{ innerBlockCount > 1\n\t\t\t\t\t\t? __( 'Detach patterns' )\n\t\t\t\t\t\t: __( 'Detach pattern' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default PatternsManageButton;\n","/**\n * Internal dependencies\n */\nimport { lock } from './lock-unlock';\nimport CreatePatternModal from './components/create-pattern-modal';\nimport PatternsMenuItems from './components';\nimport {\n\tPATTERN_TYPES,\n\tPATTERN_DEFAULT_CATEGORY,\n\tPATTERN_USER_CATEGORY,\n\tPATTERN_CORE_SOURCES,\n\tPATTERN_SYNC_TYPES,\n} from './constants';\n\nexport const privateApis = {};\nlock( privateApis, {\n\tCreatePatternModal,\n\tPatternsMenuItems,\n\tPATTERN_TYPES,\n\tPATTERN_DEFAULT_CATEGORY,\n\tPATTERN_USER_CATEGORY,\n\tPATTERN_CORE_SOURCES,\n\tPATTERN_SYNC_TYPES,\n} );\n","/**\n * WordPress dependencies\n */\nimport { BlockSettingsMenuControls } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport PatternConvertButton from './pattern-convert-button';\nimport PatternsManageButton from './patterns-manage-button';\n\nexport default function PatternsMenuItems( { rootClientId } ) {\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t{ ( { selectedClientIds } ) => (\n\t\t\t\t<>\n\t\t\t\t\t<PatternConvertButton\n\t\t\t\t\t\tclientIds={ selectedClientIds }\n\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t/>\n\t\t\t\t\t{ selectedClientIds.length === 1 && (\n\t\t\t\t\t\t<PatternsManageButton\n\t\t\t\t\t\t\tclientId={ selectedClientIds[ 0 ] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t) }\n\t\t</BlockSettingsMenuControls>\n\t);\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","combineReducers","isEditingPattern","state","action","type","clientId","isEditing","PATTERN_DEFAULT_CATEGORY","PATTERN_SYNC_TYPES","full","unsynced","createPattern","title","syncType","content","categories","async","registry","meta","wp_pattern_sync_status","undefined","reusableBlock","status","wp_pattern_category","dispatch","coreStore","saveEntityRecord","createPatternFromFile","file","fileContent","text","parsedContent","JSON","parse","e","Error","__file","syncStatus","convertSyncedPatternToStatic","oldBlock","select","blockEditorStore","getBlock","pattern","getEditedEntityRecord","attributes","ref","newBlocks","replaceBlocks","setEditingPattern","lock","unlock","__dangerousOptInToUnstableAPIsOnlyForCoreModules","storeConfig","reducer","store","createReduxStore","register","registerPrivateActions","actions","registerPrivateSelectors","selectors","unescapeString","arg","decodeEntities","EMPTY_ARRAY","MAX_TERMS_SUGGESTIONS","DEFAULT_QUERY","per_page","_fields","context","CATEGORY_SLUG","CategorySelector","values","onChange","search","setSearch","useState","debouncedSearch","useDebounce","searchResults","useSelect","getEntityRecords","suggestions","useMemo","map","term","name","createElement","Fragment","FormTokenField","className","termNames","uniqueTerms","reduce","terms","newTerm","some","toLowerCase","push","onInputChange","maxSuggestions","label","__","tokenizeOnBlur","CreatePatternModal","onSuccess","onError","onClose","setSyncType","categoryTerms","setCategoryTerms","setTitle","isSaving","setIsSaving","useDispatch","patternsStore","invalidateResolution","createErrorNotice","noticesStore","Modal","onRequestClose","overlayClassName","onSubmit","event","preventDefault","patternTitle","sync","Promise","all","termName","throwOnError","id","error","code","data","term_id","findOrCreateTerm","newPattern","categoryId","message","onCreate","VStack","spacing","TextControl","__nextHasNoMarginBottom","placeholder","ToggleControl","help","checked","HStack","justify","Button","variant","onClick","isBusy","SVG","xmlns","viewBox","Path","d","PatternConvertButton","clientIds","rootClientId","createSuccessNotice","isModalOpen","setIsModalOpen","canConvert","_getBlocksByClientId","canUser","getBlocksByClientId","canInsertBlockType","getBlockRootClientId","rootId","length","blocks","isReusableBlock","getEntityRecord","every","block","isValid","hasBlockSupport","getContent","useCallback","serialize","MenuItem","icon","symbol","handleSuccess","newBlock","createBlock","sprintf","raw","canRemove","isVisible","innerBlockCount","managePatternsUrl","canRemoveBlock","getBlockCount","getSettings","isBlockTheme","__unstableIsBlockBasedTheme","addQueryArgs","path","post_type","href","privateApis","PatternsMenuItems","BlockSettingsMenuControls","selectedClientIds","PatternsManageButton","PATTERN_TYPES","theme","user","PATTERN_USER_CATEGORY","PATTERN_CORE_SOURCES"],"sourceRoot":""}