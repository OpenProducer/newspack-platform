{"version":3,"file":"./build/editor/index.min.js","mappings":"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,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,KACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,KACL,EAAK,KACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,KACL,EAAK,KACL,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,IACL,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,KACL,EAAK,KACL,EAAK,IACL,EAAK,IACL,EAAK,KACL,EAAK,KACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL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","sources":["webpack://wp/./node_modules/autosize/dist/autosize.js","webpack://wp/./node_modules/classnames/index.js","webpack://wp/./node_modules/computed-style/dist/computedStyle.commonjs.js","webpack://wp/./node_modules/line-height/lib/line-height.js","webpack://wp/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://wp/./node_modules/prop-types/index.js","webpack://wp/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://wp/./node_modules/react-autosize-textarea/lib/TextareaAutosize.js","webpack://wp/./node_modules/react-autosize-textarea/lib/index.js","webpack://wp/./node_modules/remove-accents/index.js","webpack://wp/external window \"React\"","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"privateApis\"]","../../packages/editor/src/lock-unlock.js","webpack://wp/external window [\"wp\",\"i18n\"]","../../packages/editor/src/bindings/pattern-overrides.js","webpack://wp/external window [\"wp\",\"coreData\"]","webpack://wp/external window [\"wp\",\"blockEditor\"]","../../packages/editor/src/store/defaults.js","../../packages/editor/src/store/reducer.js","webpack://wp/./node_modules/rememo/rememo.js","webpack://wp/external window [\"wp\",\"date\"]","webpack://wp/external window [\"wp\",\"url\"]","webpack://wp/external window [\"wp\",\"deprecated\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"primitives\"]","../../packages/icons/src/library/layout.js","webpack://wp/external window [\"wp\",\"preferences\"]","../../packages/editor/src/store/constants.js","../../packages/icons/src/library/header.js","../../packages/icons/src/library/footer.js","../../packages/icons/src/library/sidebar.js","../../packages/icons/src/library/symbol-filled.js","../../packages/editor/src/utils/get-template-part-icon.js","../../packages/editor/src/store/selectors.js","webpack://wp/external window [\"wp\",\"a11y\"]","webpack://wp/external window [\"wp\",\"apiFetch\"]","webpack://wp/external window [\"wp\",\"notices\"]","webpack://wp/external window [\"wp\",\"hooks\"]","../../packages/editor/src/store/local-autosave.js","../../packages/editor/src/store/actions.js","../../packages/editor/src/store/utils/notice-builder.js","../../packages/editor/src/store/private-actions.js","../../packages/editor/src/store/private-selectors.js","../../packages/editor/src/store/index.js","../../packages/editor/src/bindings/post-meta.js","../../packages/editor/src/bindings/index.js","webpack://wp/external window [\"wp\",\"compose\"]","../../packages/editor/src/components/autocompleters/user.js","../../packages/editor/src/hooks/custom-sources-backwards-compatibility.js","../../packages/editor/src/hooks/default-autocompleters.js","webpack://wp/external window [\"wp\",\"patterns\"]","../../packages/editor/src/hooks/pattern-overrides.js","webpack://wp/external window [\"wp\",\"keyboardShortcuts\"]","../../packages/editor/src/components/global-keyboard-shortcuts/index.js","../../packages/editor/src/components/autosave-monitor/index.js","webpack://wp/external window [\"wp\",\"components\"]","../../packages/icons/src/library/symbol.js","../../packages/icons/src/library/navigation.js","../../packages/icons/src/library/page.js","../../packages/icons/src/library/chevron-right-small.js","../../packages/icons/src/library/chevron-left-small.js","webpack://wp/external window [\"wp\",\"keycodes\"]","webpack://wp/external window [\"wp\",\"commands\"]","../../packages/editor/src/components/document-bar/index.js","webpack://wp/external window [\"wp\",\"richText\"]","../../packages/editor/src/components/document-outline/item.js","../../packages/editor/src/components/document-outline/index.js","../../packages/editor/src/components/document-outline/check.js","../../packages/editor/src/components/global-keyboard-shortcuts/register-shortcuts.js","../../packages/icons/src/library/redo.js","../../packages/icons/src/library/undo.js","../../packages/editor/src/components/editor-history/redo.js","../../packages/editor/src/components/editor-history/undo.js","../../packages/editor/src/components/template-validation-notice/index.js","../../packages/editor/src/components/editor-notices/index.js","../../packages/editor/src/components/editor-snackbars/index.js","webpack://wp/external window [\"wp\",\"htmlEntities\"]","../../packages/editor/src/components/entities-saved-states/entity-record-item.js","../../packages/editor/src/components/entities-saved-states/entity-type-list.js","../../packages/editor/src/components/entities-saved-states/hooks/use-is-dirty.js","../../packages/editor/src/components/entities-saved-states/index.js","../../packages/editor/src/components/error-boundary/index.js","../../packages/editor/src/components/local-autosave-monitor/index.js","../../packages/editor/src/components/page-attributes/check.js","../../packages/editor/src/components/post-type-support-check/index.js","../../packages/editor/src/components/page-attributes/order.js","../../packages/editor/src/utils/terms.js","../../packages/editor/src/components/page-attributes/parent.js","../../packages/editor/src/components/page-attributes/panel.js","../../packages/icons/src/library/add-template.js","../../packages/editor/src/components/post-template/create-new-template-modal.js","../../packages/editor/src/components/post-template/hooks.js","../../packages/editor/src/components/post-template/classic-theme.js","webpack://wp/external window [\"wp\",\"plugins\"]","../../packages/editor/src/components/preferences-modal/enable-panel.js","webpack://wp/external window [\"wp\",\"warning\"]","../../packages/editor/src/components/preferences-modal/enable-plugin-document-setting-panel.js","../../packages/editor/src/components/plugin-document-setting-panel/index.js","../../packages/icons/src/library/check.js","../../packages/editor/src/components/post-template/swap-template-button.js","../../packages/editor/src/components/post-template/reset-default-template.js","../../packages/editor/src/components/post-template/create-new-template.js","../../packages/editor/src/components/post-template/block-theme.js","../../packages/editor/src/components/post-panel-row/index.js","../../packages/editor/src/components/post-template/panel.js","../../packages/editor/src/components/post-author/constants.js","../../packages/editor/src/components/post-author/hook.js","../../packages/editor/src/components/post-author/combobox.js","../../packages/editor/src/components/post-author/select.js","../../packages/editor/src/components/post-author/index.js","../../packages/editor/src/components/post-author/check.js","../../packages/editor/src/components/post-author/panel.js","../../packages/editor/src/components/post-comments/index.js","../../packages/editor/src/components/post-pingbacks/index.js","../../packages/editor/src/components/post-discussion/panel.js","../../packages/editor/src/components/post-excerpt/index.js","../../packages/editor/src/components/post-excerpt/check.js","../../packages/editor/src/components/post-excerpt/plugin.js","../../packages/editor/src/components/post-excerpt/panel.js","webpack://wp/external window [\"wp\",\"blob\"]","../../packages/editor/src/components/theme-support-check/index.js","../../packages/editor/src/components/post-featured-image/check.js","../../packages/editor/src/components/post-featured-image/index.js","../../packages/editor/src/components/post-featured-image/panel.js","../../packages/editor/src/components/post-format/check.js","../../packages/editor/src/components/post-format/index.js","../../packages/icons/src/library/backup.js","../../packages/editor/src/components/post-last-revision/check.js","../../packages/editor/src/components/post-last-revision/index.js","../../packages/editor/src/components/post-last-revision/panel.js","../../packages/editor/src/components/post-locked-modal/index.js","../../packages/editor/src/components/post-pending-status/check.js","../../packages/editor/src/components/post-pending-status/index.js","../../packages/editor/src/components/post-preview-button/index.js","../../packages/editor/src/components/post-publish-button/label.js","../../packages/editor/src/components/post-publish-button/index.js","../../packages/icons/src/library/close-small.js","../../packages/icons/src/library/wordpress.js","../../packages/editor/src/components/post-visibility/utils.js","../../packages/editor/src/components/post-visibility/index.js","../../packages/editor/src/components/post-visibility/label.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://wp/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://wp/./node_modules/date-fns/esm/toDate/index.js","webpack://wp/./node_modules/date-fns/esm/startOfMonth/index.js","webpack://wp/./node_modules/date-fns/esm/endOfMonth/index.js","webpack://wp/./node_modules/date-fns/esm/constants/index.js","webpack://wp/./node_modules/date-fns/esm/parseISO/index.js","../../packages/editor/src/components/post-schedule/index.js","webpack://wp/./node_modules/date-fns/esm/_lib/toInteger/index.js","../../packages/editor/src/components/post-schedule/label.js","../../packages/editor/src/components/post-taxonomies/most-used-terms.js","../../packages/editor/src/components/post-taxonomies/flat-term-selector.js","../../packages/editor/src/components/post-publish-panel/maybe-tags-panel.js","../../packages/editor/src/components/post-publish-panel/maybe-post-format-panel.js","../../packages/editor/src/components/post-taxonomies/hierarchical-term-selector.js","../../packages/editor/src/components/post-publish-panel/maybe-category-panel.js","../../packages/editor/src/components/post-publish-panel/maybe-upload-media.js","../../packages/editor/src/components/post-publish-panel/prepublish.js","../../packages/editor/src/components/post-publish-panel/postpublish.js","../../packages/editor/src/components/post-publish-panel/index.js","../../packages/icons/src/library/cloud-upload.js","../../packages/icons/src/icon/index.js","../../packages/icons/src/library/cloud.js","../../packages/editor/src/components/post-saved-state/index.js","../../packages/editor/src/components/post-schedule/check.js","../../packages/editor/src/components/post-schedule/panel.js","../../packages/editor/src/components/post-slug/check.js","../../packages/editor/src/components/post-slug/index.js","../../packages/editor/src/components/post-sticky/check.js","../../packages/editor/src/components/post-sticky/index.js","../../packages/editor/src/components/post-switch-to-draft-button/index.js","../../packages/editor/src/components/post-sync-status/index.js","../../packages/editor/src/components/post-taxonomies/index.js","../../packages/editor/src/components/post-taxonomies/check.js","../../packages/editor/src/components/post-taxonomies/panel.js","../../packages/editor/src/components/post-text-editor/index.js","webpack://wp/external window [\"wp\",\"dom\"]","../../packages/editor/src/components/post-title/constants.js","../../packages/editor/src/components/post-title/use-post-title-focus.js","../../packages/editor/src/components/post-title/use-post-title.js","../../packages/editor/src/components/post-title/index.js","../../packages/editor/src/components/post-title/post-title-raw.js","../../packages/editor/src/components/post-trash/index.js","../../packages/editor/src/components/post-trash/check.js","../../packages/editor/src/components/post-url/index.js","../../packages/editor/src/components/post-url/check.js","../../packages/editor/src/components/post-url/label.js","../../packages/editor/src/components/post-url/panel.js","../../packages/editor/src/components/post-visibility/check.js","../../packages/icons/src/library/info.js","webpack://wp/external window [\"wp\",\"wordcount\"]","../../packages/editor/src/components/word-count/index.js","../../packages/editor/src/components/time-to-read/index.js","../../packages/editor/src/components/character-count/index.js","../../packages/editor/src/components/table-of-contents/panel.js","../../packages/editor/src/components/table-of-contents/index.js","../../packages/editor/src/components/unsaved-changes-warning/index.js","../../packages/editor/src/components/provider/with-registry-provider.js","../../packages/editor/src/components/media-categories/index.js","webpack://wp/external window [\"wp\",\"mediaUtils\"]","../../packages/editor/src/utils/media-upload/index.js","../../packages/editor/src/components/provider/use-block-editor-settings.js","../../packages/editor/src/components/provider/disable-non-page-content-blocks.js","../../packages/editor/src/components/provider/navigation-block-editing-mode.js","../../packages/editor/src/components/provider/use-hide-blocks-from-inserter.js","../../packages/icons/src/library/list-view.js","../../packages/icons/src/library/code.js","../../packages/icons/src/library/external.js","../../packages/editor/src/components/commands/index.js","../../packages/editor/src/components/block-removal-warnings/index.js","../../packages/editor/src/components/provider/index.js","webpack://wp/external window [\"wp\",\"serverSideRender\"]","../../packages/editor/src/components/deprecated.js","../../packages/editor/src/components/index.js","../../packages/editor/src/utils/url.js","../../packages/editor/src/components/editor-canvas/edit-template-blocks-notification.js","../../packages/editor/src/components/editor-canvas/index.js","../../packages/icons/src/library/plus.js","../../packages/editor/src/components/document-tools/index.js","../../packages/icons/src/library/close.js","../../packages/editor/src/components/list-view-sidebar/list-view-outline.js","../../packages/editor/src/components/list-view-sidebar/index.js","../../packages/editor/src/components/mode-switcher/index.js","../../packages/icons/src/library/mobile.js","../../packages/icons/src/library/tablet.js","../../packages/icons/src/library/desktop.js","../../packages/editor/src/components/block-manager/checklist.js","../../packages/editor/src/components/block-manager/category.js","../../packages/editor/src/components/block-manager/index.js","../../packages/editor/src/components/preferences-modal/index.js","../../packages/editor/src/private-apis.js","../../packages/editor/src/components/inserter-sidebar/index.js","../../packages/editor/src/components/post-view-link/index.js","../../packages/editor/src/components/preview-dropdown/index.js"],"sourcesContent":["/*!\n\tautosize 4.0.2\n\tlicense: MIT\n\thttp://www.jacklmoore.com/autosize\n*/\n(function (global, factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(['module', 'exports'], factory);\n\t} else if (typeof exports !== \"undefined\") {\n\t\tfactory(module, exports);\n\t} else {\n\t\tvar mod = {\n\t\t\texports: {}\n\t\t};\n\t\tfactory(mod, mod.exports);\n\t\tglobal.autosize = mod.exports;\n\t}\n})(this, function (module, exports) {\n\t'use strict';\n\n\tvar map = typeof Map === \"function\" ? new Map() : function () {\n\t\tvar keys = [];\n\t\tvar values = [];\n\n\t\treturn {\n\t\t\thas: function has(key) {\n\t\t\t\treturn keys.indexOf(key) > -1;\n\t\t\t},\n\t\t\tget: function get(key) {\n\t\t\t\treturn values[keys.indexOf(key)];\n\t\t\t},\n\t\t\tset: function set(key, value) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t\tvalues.push(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelete: function _delete(key) {\n\t\t\t\tvar index = keys.indexOf(key);\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tkeys.splice(index, 1);\n\t\t\t\t\tvalues.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}();\n\n\tvar createEvent = function createEvent(name) {\n\t\treturn new Event(name, { bubbles: true });\n\t};\n\ttry {\n\t\tnew Event('test');\n\t} catch (e) {\n\t\t// IE does not support `new Event()`\n\t\tcreateEvent = function createEvent(name) {\n\t\t\tvar evt = document.createEvent('Event');\n\t\t\tevt.initEvent(name, true, false);\n\t\t\treturn evt;\n\t\t};\n\t}\n\n\tfunction assign(ta) {\n\t\tif (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;\n\n\t\tvar heightOffset = null;\n\t\tvar clientWidth = null;\n\t\tvar cachedHeight = null;\n\n\t\tfunction init() {\n\t\t\tvar style = window.getComputedStyle(ta, null);\n\n\t\t\tif (style.resize === 'vertical') {\n\t\t\t\tta.style.resize = 'none';\n\t\t\t} else if (style.resize === 'both') {\n\t\t\t\tta.style.resize = 'horizontal';\n\t\t\t}\n\n\t\t\tif (style.boxSizing === 'content-box') {\n\t\t\t\theightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));\n\t\t\t} else {\n\t\t\t\theightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n\t\t\t}\n\t\t\t// Fix when a textarea is not on document body and heightOffset is Not a Number\n\t\t\tif (isNaN(heightOffset)) {\n\t\t\t\theightOffset = 0;\n\t\t\t}\n\n\t\t\tupdate();\n\t\t}\n\n\t\tfunction changeOverflow(value) {\n\t\t\t{\n\t\t\t\t// Chrome/Safari-specific fix:\n\t\t\t\t// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space\n\t\t\t\t// made available by removing the scrollbar. The following forces the necessary text reflow.\n\t\t\t\tvar width = ta.style.width;\n\t\t\t\tta.style.width = '0px';\n\t\t\t\t// Force reflow:\n\t\t\t\t/* jshint ignore:start */\n\t\t\t\tta.offsetWidth;\n\t\t\t\t/* jshint ignore:end */\n\t\t\t\tta.style.width = width;\n\t\t\t}\n\n\t\t\tta.style.overflowY = value;\n\t\t}\n\n\t\tfunction getParentOverflows(el) {\n\t\t\tvar arr = [];\n\n\t\t\twhile (el && el.parentNode && el.parentNode instanceof Element) {\n\t\t\t\tif (el.parentNode.scrollTop) {\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\tnode: el.parentNode,\n\t\t\t\t\t\tscrollTop: el.parentNode.scrollTop\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tel = el.parentNode;\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t}\n\n\t\tfunction resize() {\n\t\t\tif (ta.scrollHeight === 0) {\n\t\t\t\t// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar overflows = getParentOverflows(ta);\n\t\t\tvar docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)\n\n\t\t\tta.style.height = '';\n\t\t\tta.style.height = ta.scrollHeight + heightOffset + 'px';\n\n\t\t\t// used to check if an update is actually necessary on window.resize\n\t\t\tclientWidth = ta.clientWidth;\n\n\t\t\t// prevents scroll-position jumping\n\t\t\toverflows.forEach(function (el) {\n\t\t\t\tel.node.scrollTop = el.scrollTop;\n\t\t\t});\n\n\t\t\tif (docTop) {\n\t\t\t\tdocument.documentElement.scrollTop = docTop;\n\t\t\t}\n\t\t}\n\n\t\tfunction update() {\n\t\t\tresize();\n\n\t\t\tvar styleHeight = Math.round(parseFloat(ta.style.height));\n\t\t\tvar computed = window.getComputedStyle(ta, null);\n\n\t\t\t// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box\n\t\t\tvar actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;\n\n\t\t\t// The actual height not matching the style height (set via the resize method) indicates that \n\t\t\t// the max-height has been exceeded, in which case the overflow should be allowed.\n\t\t\tif (actualHeight < styleHeight) {\n\t\t\t\tif (computed.overflowY === 'hidden') {\n\t\t\t\t\tchangeOverflow('scroll');\n\t\t\t\t\tresize();\n\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.\n\t\t\t\tif (computed.overflowY !== 'hidden') {\n\t\t\t\t\tchangeOverflow('hidden');\n\t\t\t\t\tresize();\n\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cachedHeight !== actualHeight) {\n\t\t\t\tcachedHeight = actualHeight;\n\t\t\t\tvar evt = createEvent('autosize:resized');\n\t\t\t\ttry {\n\t\t\t\t\tta.dispatchEvent(evt);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Firefox will throw an error on dispatchEvent for a detached element\n\t\t\t\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=889376\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar pageResize = function pageResize() {\n\t\t\tif (ta.clientWidth !== clientWidth) {\n\t\t\t\tupdate();\n\t\t\t}\n\t\t};\n\n\t\tvar destroy = function (style) {\n\t\t\twindow.removeEventListener('resize', pageResize, false);\n\t\t\tta.removeEventListener('input', update, false);\n\t\t\tta.removeEventListener('keyup', update, false);\n\t\t\tta.removeEventListener('autosize:destroy', destroy, false);\n\t\t\tta.removeEventListener('autosize:update', update, false);\n\n\t\t\tObject.keys(style).forEach(function (key) {\n\t\t\t\tta.style[key] = style[key];\n\t\t\t});\n\n\t\t\tmap.delete(ta);\n\t\t}.bind(ta, {\n\t\t\theight: ta.style.height,\n\t\t\tresize: ta.style.resize,\n\t\t\toverflowY: ta.style.overflowY,\n\t\t\toverflowX: ta.style.overflowX,\n\t\t\twordWrap: ta.style.wordWrap\n\t\t});\n\n\t\tta.addEventListener('autosize:destroy', destroy, false);\n\n\t\t// IE9 does not fire onpropertychange or oninput for deletions,\n\t\t// so binding to onkeyup to catch most of those events.\n\t\t// There is no way that I know of to detect something like 'cut' in IE9.\n\t\tif ('onpropertychange' in ta && 'oninput' in ta) {\n\t\t\tta.addEventListener('keyup', update, false);\n\t\t}\n\n\t\twindow.addEventListener('resize', pageResize, false);\n\t\tta.addEventListener('input', update, false);\n\t\tta.addEventListener('autosize:update', update, false);\n\t\tta.style.overflowX = 'hidden';\n\t\tta.style.wordWrap = 'break-word';\n\n\t\tmap.set(ta, {\n\t\t\tdestroy: destroy,\n\t\t\tupdate: update\n\t\t});\n\n\t\tinit();\n\t}\n\n\tfunction destroy(ta) {\n\t\tvar methods = map.get(ta);\n\t\tif (methods) {\n\t\t\tmethods.destroy();\n\t\t}\n\t}\n\n\tfunction update(ta) {\n\t\tvar methods = map.get(ta);\n\t\tif (methods) {\n\t\t\tmethods.update();\n\t\t}\n\t}\n\n\tvar autosize = null;\n\n\t// Do nothing in Node.js environment and IE8 (or lower)\n\tif (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {\n\t\tautosize = function autosize(el) {\n\t\t\treturn el;\n\t\t};\n\t\tautosize.destroy = function (el) {\n\t\t\treturn el;\n\t\t};\n\t\tautosize.update = function (el) {\n\t\t\treturn el;\n\t\t};\n\t} else {\n\t\tautosize = function autosize(el, options) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], function (x) {\n\t\t\t\t\treturn assign(x, options);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t\tautosize.destroy = function (el) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], destroy);\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t\tautosize.update = function (el) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], update);\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t}\n\n\texports.default = autosize;\n\tmodule.exports = exports['default'];\n});","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// This code has been refactored for 140 bytes\n// You can see the original here: https://github.com/twolfson/computedStyle/blob/04cd1da2e30fa45844f95f5cb1ac898e9b9ef050/lib/computedStyle.js\nvar computedStyle = function (el, prop, getComputedStyle) {\n  getComputedStyle = window.getComputedStyle;\n\n  // In one fell swoop\n  return (\n    // If we have getComputedStyle\n    getComputedStyle ?\n      // Query it\n      // TODO: From CSS-Query notes, we might need (node, null) for FF\n      getComputedStyle(el) :\n\n    // Otherwise, we are in IE and use currentStyle\n      el.currentStyle\n  )[\n    // Switch to camelCase for CSSOM\n    // DEV: Grabbed from jQuery\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\n    prop.replace(/-(\\w)/gi, function (word, letter) {\n      return letter.toUpperCase();\n    })\n  ];\n};\n\nmodule.exports = computedStyle;\n","// Load in dependencies\nvar computedStyle = require('computed-style');\n\n/**\n * Calculate the `line-height` of a given node\n * @param {HTMLElement} node Element to calculate line height of. Must be in the DOM.\n * @returns {Number} `line-height` of the element in pixels\n */\nfunction lineHeight(node) {\n  // Grab the line-height via style\n  var lnHeightStr = computedStyle(node, 'line-height');\n  var lnHeight = parseFloat(lnHeightStr, 10);\n\n  // If the lineHeight did not contain a unit (i.e. it was numeric), convert it to ems (e.g. '2.3' === '2.3em')\n  if (lnHeightStr === lnHeight + '') {\n    // Save the old lineHeight style and update the em unit to the element\n    var _lnHeightStyle = node.style.lineHeight;\n    node.style.lineHeight = lnHeightStr + 'em';\n\n    // Calculate the em based height\n    lnHeightStr = computedStyle(node, 'line-height');\n    lnHeight = parseFloat(lnHeightStr, 10);\n\n    // Revert the lineHeight style\n    if (_lnHeightStyle) {\n      node.style.lineHeight = _lnHeightStyle;\n    } else {\n      delete node.style.lineHeight;\n    }\n  }\n\n  // If the lineHeight is in `pt`, convert it to pixels (4px for 3pt)\n  // DEV: `em` units are converted to `pt` in IE6\n  // Conversion ratio from https://developer.mozilla.org/en-US/docs/Web/CSS/length\n  if (lnHeightStr.indexOf('pt') !== -1) {\n    lnHeight *= 4;\n    lnHeight /= 3;\n  // Otherwise, if the lineHeight is in `mm`, convert it to pixels (96px for 25.4mm)\n  } else if (lnHeightStr.indexOf('mm') !== -1) {\n    lnHeight *= 96;\n    lnHeight /= 25.4;\n  // Otherwise, if the lineHeight is in `cm`, convert it to pixels (96px for 2.54cm)\n  } else if (lnHeightStr.indexOf('cm') !== -1) {\n    lnHeight *= 96;\n    lnHeight /= 2.54;\n  // Otherwise, if the lineHeight is in `in`, convert it to pixels (96px for 1in)\n  } else if (lnHeightStr.indexOf('in') !== -1) {\n    lnHeight *= 96;\n  // Otherwise, if the lineHeight is in `pc`, convert it to pixels (12pt for 1pc)\n  } else if (lnHeightStr.indexOf('pc') !== -1) {\n    lnHeight *= 16;\n  }\n\n  // Continue our computation\n  lnHeight = Math.round(lnHeight);\n\n  // If the line-height is \"normal\", calculate by font-size\n  if (lnHeightStr === 'normal') {\n    // Create a temporary node\n    var nodeName = node.nodeName;\n    var _node = document.createElement(nodeName);\n    _node.innerHTML = '&nbsp;';\n\n    // If we have a text area, reset it to only 1 row\n    // https://github.com/twolfson/line-height/issues/4\n    if (nodeName.toUpperCase() === 'TEXTAREA') {\n      _node.setAttribute('rows', '1');\n    }\n\n    // Set the font-size of the element\n    var fontSizeStr = computedStyle(node, 'font-size');\n    _node.style.fontSize = fontSizeStr;\n\n    // Remove default padding/border which can affect offset height\n    // https://github.com/twolfson/line-height/issues/4\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight\n    _node.style.padding = '0px';\n    _node.style.border = '0px';\n\n    // Append it to the body\n    var body = document.body;\n    body.appendChild(_node);\n\n    // Assume the line height of the element is the height\n    var height = _node.offsetHeight;\n    lnHeight = height;\n\n    // Remove our child from the DOM\n    body.removeChild(_node);\n  }\n\n  // Return the calculated height\n  return lnHeight;\n}\n\n// Export lineHeight\nmodule.exports = lineHeight;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nexports.__esModule = true;\nvar React = require(\"react\");\nvar PropTypes = require(\"prop-types\");\nvar autosize = require(\"autosize\");\nvar _getLineHeight = require(\"line-height\");\nvar getLineHeight = _getLineHeight;\nvar RESIZED = \"autosize:resized\";\n/**\n * A light replacement for built-in textarea component\n * which automaticaly adjusts its height to match the content\n */\nvar TextareaAutosizeClass = /** @class */ (function (_super) {\n    __extends(TextareaAutosizeClass, _super);\n    function TextareaAutosizeClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            lineHeight: null\n        };\n        _this.textarea = null;\n        _this.onResize = function (e) {\n            if (_this.props.onResize) {\n                _this.props.onResize(e);\n            }\n        };\n        _this.updateLineHeight = function () {\n            if (_this.textarea) {\n                _this.setState({\n                    lineHeight: getLineHeight(_this.textarea)\n                });\n            }\n        };\n        _this.onChange = function (e) {\n            var onChange = _this.props.onChange;\n            _this.currentValue = e.currentTarget.value;\n            onChange && onChange(e);\n        };\n        return _this;\n    }\n    TextareaAutosizeClass.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, maxRows = _a.maxRows, async = _a.async;\n        if (typeof maxRows === \"number\") {\n            this.updateLineHeight();\n        }\n        if (typeof maxRows === \"number\" || async) {\n            /*\n              the defer is needed to:\n                - force \"autosize\" to activate the scrollbar when this.props.maxRows is passed\n                - support StyledComponents (see #71)\n            */\n            setTimeout(function () { return _this.textarea && autosize(_this.textarea); });\n        }\n        else {\n            this.textarea && autosize(this.textarea);\n        }\n        if (this.textarea) {\n            this.textarea.addEventListener(RESIZED, this.onResize);\n        }\n    };\n    TextareaAutosizeClass.prototype.componentWillUnmount = function () {\n        if (this.textarea) {\n            this.textarea.removeEventListener(RESIZED, this.onResize);\n            autosize.destroy(this.textarea);\n        }\n    };\n    TextareaAutosizeClass.prototype.render = function () {\n        var _this = this;\n        var _a = this, _b = _a.props, onResize = _b.onResize, maxRows = _b.maxRows, onChange = _b.onChange, style = _b.style, innerRef = _b.innerRef, children = _b.children, props = __rest(_b, [\"onResize\", \"maxRows\", \"onChange\", \"style\", \"innerRef\", \"children\"]), lineHeight = _a.state.lineHeight;\n        var maxHeight = maxRows && lineHeight ? lineHeight * maxRows : null;\n        return (React.createElement(\"textarea\", __assign({}, props, { onChange: this.onChange, style: maxHeight ? __assign({}, style, { maxHeight: maxHeight }) : style, ref: function (element) {\n                _this.textarea = element;\n                if (typeof _this.props.innerRef === 'function') {\n                    _this.props.innerRef(element);\n                }\n                else if (_this.props.innerRef) {\n                    _this.props.innerRef.current = element;\n                }\n            } }), children));\n    };\n    TextareaAutosizeClass.prototype.componentDidUpdate = function () {\n        this.textarea && autosize.update(this.textarea);\n    };\n    TextareaAutosizeClass.defaultProps = {\n        rows: 1,\n        async: false\n    };\n    TextareaAutosizeClass.propTypes = {\n        rows: PropTypes.number,\n        maxRows: PropTypes.number,\n        onResize: PropTypes.func,\n        innerRef: PropTypes.any,\n        async: PropTypes.bool\n    };\n    return TextareaAutosizeClass;\n}(React.Component));\nexports.TextareaAutosize = React.forwardRef(function (props, ref) {\n    return React.createElement(TextareaAutosizeClass, __assign({}, props, { innerRef: ref }));\n});\n","\"use strict\";\nexports.__esModule = true;\nvar TextareaAutosize_1 = require(\"./TextareaAutosize\");\nexports[\"default\"] = TextareaAutosize_1.TextareaAutosize;\n","var characterMap = {\n\t\"À\": \"A\",\n\t\"Á\": \"A\",\n\t\"Â\": \"A\",\n\t\"Ã\": \"A\",\n\t\"Ä\": \"A\",\n\t\"Å\": \"A\",\n\t\"Ấ\": \"A\",\n\t\"Ắ\": \"A\",\n\t\"Ẳ\": \"A\",\n\t\"Ẵ\": \"A\",\n\t\"Ặ\": \"A\",\n\t\"Æ\": \"AE\",\n\t\"Ầ\": \"A\",\n\t\"Ằ\": \"A\",\n\t\"Ȃ\": \"A\",\n\t\"Ả\": \"A\",\n\t\"Ạ\": \"A\",\n\t\"Ẩ\": \"A\",\n\t\"Ẫ\": \"A\",\n\t\"Ậ\": \"A\",\n\t\"Ç\": \"C\",\n\t\"Ḉ\": \"C\",\n\t\"È\": \"E\",\n\t\"É\": \"E\",\n\t\"Ê\": \"E\",\n\t\"Ë\": \"E\",\n\t\"Ế\": \"E\",\n\t\"Ḗ\": \"E\",\n\t\"Ề\": \"E\",\n\t\"Ḕ\": \"E\",\n\t\"Ḝ\": \"E\",\n\t\"Ȇ\": \"E\",\n\t\"Ẻ\": \"E\",\n\t\"Ẽ\": \"E\",\n\t\"Ẹ\": \"E\",\n\t\"Ể\": \"E\",\n\t\"Ễ\": \"E\",\n\t\"Ệ\": \"E\",\n\t\"Ì\": \"I\",\n\t\"Í\": \"I\",\n\t\"Î\": \"I\",\n\t\"Ï\": \"I\",\n\t\"Ḯ\": \"I\",\n\t\"Ȋ\": \"I\",\n\t\"Ỉ\": \"I\",\n\t\"Ị\": \"I\",\n\t\"Ð\": \"D\",\n\t\"Ñ\": \"N\",\n\t\"Ò\": \"O\",\n\t\"Ó\": \"O\",\n\t\"Ô\": \"O\",\n\t\"Õ\": \"O\",\n\t\"Ö\": \"O\",\n\t\"Ø\": \"O\",\n\t\"Ố\": \"O\",\n\t\"Ṍ\": \"O\",\n\t\"Ṓ\": \"O\",\n\t\"Ȏ\": \"O\",\n\t\"Ỏ\": \"O\",\n\t\"Ọ\": \"O\",\n\t\"Ổ\": \"O\",\n\t\"Ỗ\": \"O\",\n\t\"Ộ\": \"O\",\n\t\"Ờ\": \"O\",\n\t\"Ở\": \"O\",\n\t\"Ỡ\": \"O\",\n\t\"Ớ\": \"O\",\n\t\"Ợ\": \"O\",\n\t\"Ù\": \"U\",\n\t\"Ú\": \"U\",\n\t\"Û\": \"U\",\n\t\"Ü\": \"U\",\n\t\"Ủ\": \"U\",\n\t\"Ụ\": \"U\",\n\t\"Ử\": \"U\",\n\t\"Ữ\": \"U\",\n\t\"Ự\": \"U\",\n\t\"Ý\": \"Y\",\n\t\"à\": \"a\",\n\t\"á\": \"a\",\n\t\"â\": \"a\",\n\t\"ã\": \"a\",\n\t\"ä\": \"a\",\n\t\"å\": \"a\",\n\t\"ấ\": \"a\",\n\t\"ắ\": \"a\",\n\t\"ẳ\": \"a\",\n\t\"ẵ\": \"a\",\n\t\"ặ\": \"a\",\n\t\"æ\": \"ae\",\n\t\"ầ\": \"a\",\n\t\"ằ\": \"a\",\n\t\"ȃ\": \"a\",\n\t\"ả\": \"a\",\n\t\"ạ\": \"a\",\n\t\"ẩ\": \"a\",\n\t\"ẫ\": \"a\",\n\t\"ậ\": \"a\",\n\t\"ç\": \"c\",\n\t\"ḉ\": \"c\",\n\t\"è\": \"e\",\n\t\"é\": \"e\",\n\t\"ê\": \"e\",\n\t\"ë\": \"e\",\n\t\"ế\": \"e\",\n\t\"ḗ\": \"e\",\n\t\"ề\": \"e\",\n\t\"ḕ\": \"e\",\n\t\"ḝ\": \"e\",\n\t\"ȇ\": \"e\",\n\t\"ẻ\": \"e\",\n\t\"ẽ\": \"e\",\n\t\"ẹ\": \"e\",\n\t\"ể\": \"e\",\n\t\"ễ\": \"e\",\n\t\"ệ\": \"e\",\n\t\"ì\": \"i\",\n\t\"í\": \"i\",\n\t\"î\": \"i\",\n\t\"ï\": \"i\",\n\t\"ḯ\": \"i\",\n\t\"ȋ\": \"i\",\n\t\"ỉ\": \"i\",\n\t\"ị\": \"i\",\n\t\"ð\": \"d\",\n\t\"ñ\": \"n\",\n\t\"ò\": \"o\",\n\t\"ó\": \"o\",\n\t\"ô\": \"o\",\n\t\"õ\": \"o\",\n\t\"ö\": \"o\",\n\t\"ø\": \"o\",\n\t\"ố\": \"o\",\n\t\"ṍ\": \"o\",\n\t\"ṓ\": \"o\",\n\t\"ȏ\": \"o\",\n\t\"ỏ\": \"o\",\n\t\"ọ\": \"o\",\n\t\"ổ\": \"o\",\n\t\"ỗ\": \"o\",\n\t\"ộ\": \"o\",\n\t\"ờ\": \"o\",\n\t\"ở\": \"o\",\n\t\"ỡ\": \"o\",\n\t\"ớ\": \"o\",\n\t\"ợ\": \"o\",\n\t\"ù\": \"u\",\n\t\"ú\": \"u\",\n\t\"û\": \"u\",\n\t\"ü\": \"u\",\n\t\"ủ\": \"u\",\n\t\"ụ\": \"u\",\n\t\"ử\": \"u\",\n\t\"ữ\": \"u\",\n\t\"ự\": \"u\",\n\t\"ý\": \"y\",\n\t\"ÿ\": \"y\",\n\t\"Ā\": \"A\",\n\t\"ā\": \"a\",\n\t\"Ă\": \"A\",\n\t\"ă\": \"a\",\n\t\"Ą\": \"A\",\n\t\"ą\": \"a\",\n\t\"Ć\": \"C\",\n\t\"ć\": \"c\",\n\t\"Ĉ\": \"C\",\n\t\"ĉ\": \"c\",\n\t\"Ċ\": \"C\",\n\t\"ċ\": \"c\",\n\t\"Č\": \"C\",\n\t\"č\": \"c\",\n\t\"C̆\": \"C\",\n\t\"c̆\": \"c\",\n\t\"Ď\": \"D\",\n\t\"ď\": \"d\",\n\t\"Đ\": \"D\",\n\t\"đ\": \"d\",\n\t\"Ē\": \"E\",\n\t\"ē\": \"e\",\n\t\"Ĕ\": \"E\",\n\t\"ĕ\": \"e\",\n\t\"Ė\": \"E\",\n\t\"ė\": \"e\",\n\t\"Ę\": \"E\",\n\t\"ę\": \"e\",\n\t\"Ě\": \"E\",\n\t\"ě\": \"e\",\n\t\"Ĝ\": \"G\",\n\t\"Ǵ\": \"G\",\n\t\"ĝ\": \"g\",\n\t\"ǵ\": \"g\",\n\t\"Ğ\": \"G\",\n\t\"ğ\": \"g\",\n\t\"Ġ\": \"G\",\n\t\"ġ\": \"g\",\n\t\"Ģ\": \"G\",\n\t\"ģ\": \"g\",\n\t\"Ĥ\": \"H\",\n\t\"ĥ\": \"h\",\n\t\"Ħ\": \"H\",\n\t\"ħ\": \"h\",\n\t\"Ḫ\": \"H\",\n\t\"ḫ\": \"h\",\n\t\"Ĩ\": \"I\",\n\t\"ĩ\": \"i\",\n\t\"Ī\": \"I\",\n\t\"ī\": \"i\",\n\t\"Ĭ\": \"I\",\n\t\"ĭ\": \"i\",\n\t\"Į\": \"I\",\n\t\"į\": \"i\",\n\t\"İ\": \"I\",\n\t\"ı\": \"i\",\n\t\"Ĳ\": \"IJ\",\n\t\"ĳ\": \"ij\",\n\t\"Ĵ\": \"J\",\n\t\"ĵ\": \"j\",\n\t\"Ķ\": \"K\",\n\t\"ķ\": \"k\",\n\t\"Ḱ\": \"K\",\n\t\"ḱ\": \"k\",\n\t\"K̆\": \"K\",\n\t\"k̆\": \"k\",\n\t\"Ĺ\": \"L\",\n\t\"ĺ\": \"l\",\n\t\"Ļ\": \"L\",\n\t\"ļ\": \"l\",\n\t\"Ľ\": \"L\",\n\t\"ľ\": \"l\",\n\t\"Ŀ\": \"L\",\n\t\"ŀ\": \"l\",\n\t\"Ł\": \"l\",\n\t\"ł\": \"l\",\n\t\"Ḿ\": \"M\",\n\t\"ḿ\": \"m\",\n\t\"M̆\": \"M\",\n\t\"m̆\": \"m\",\n\t\"Ń\": \"N\",\n\t\"ń\": \"n\",\n\t\"Ņ\": \"N\",\n\t\"ņ\": \"n\",\n\t\"Ň\": \"N\",\n\t\"ň\": \"n\",\n\t\"ŉ\": \"n\",\n\t\"N̆\": \"N\",\n\t\"n̆\": \"n\",\n\t\"Ō\": \"O\",\n\t\"ō\": \"o\",\n\t\"Ŏ\": \"O\",\n\t\"ŏ\": \"o\",\n\t\"Ő\": \"O\",\n\t\"ő\": \"o\",\n\t\"Œ\": \"OE\",\n\t\"œ\": \"oe\",\n\t\"P̆\": \"P\",\n\t\"p̆\": \"p\",\n\t\"Ŕ\": \"R\",\n\t\"ŕ\": \"r\",\n\t\"Ŗ\": \"R\",\n\t\"ŗ\": \"r\",\n\t\"Ř\": \"R\",\n\t\"ř\": \"r\",\n\t\"R̆\": \"R\",\n\t\"r̆\": \"r\",\n\t\"Ȓ\": \"R\",\n\t\"ȓ\": \"r\",\n\t\"Ś\": \"S\",\n\t\"ś\": \"s\",\n\t\"Ŝ\": \"S\",\n\t\"ŝ\": \"s\",\n\t\"Ş\": \"S\",\n\t\"Ș\": \"S\",\n\t\"ș\": \"s\",\n\t\"ş\": \"s\",\n\t\"Š\": \"S\",\n\t\"š\": \"s\",\n\t\"Ţ\": \"T\",\n\t\"ţ\": \"t\",\n\t\"ț\": \"t\",\n\t\"Ț\": \"T\",\n\t\"Ť\": \"T\",\n\t\"ť\": \"t\",\n\t\"Ŧ\": \"T\",\n\t\"ŧ\": \"t\",\n\t\"T̆\": \"T\",\n\t\"t̆\": \"t\",\n\t\"Ũ\": \"U\",\n\t\"ũ\": \"u\",\n\t\"Ū\": \"U\",\n\t\"ū\": \"u\",\n\t\"Ŭ\": \"U\",\n\t\"ŭ\": \"u\",\n\t\"Ů\": \"U\",\n\t\"ů\": \"u\",\n\t\"Ű\": \"U\",\n\t\"ű\": \"u\",\n\t\"Ų\": \"U\",\n\t\"ų\": \"u\",\n\t\"Ȗ\": \"U\",\n\t\"ȗ\": \"u\",\n\t\"V̆\": \"V\",\n\t\"v̆\": \"v\",\n\t\"Ŵ\": \"W\",\n\t\"ŵ\": \"w\",\n\t\"Ẃ\": \"W\",\n\t\"ẃ\": \"w\",\n\t\"X̆\": \"X\",\n\t\"x̆\": \"x\",\n\t\"Ŷ\": \"Y\",\n\t\"ŷ\": \"y\",\n\t\"Ÿ\": \"Y\",\n\t\"Y̆\": \"Y\",\n\t\"y̆\": \"y\",\n\t\"Ź\": \"Z\",\n\t\"ź\": \"z\",\n\t\"Ż\": \"Z\",\n\t\"ż\": \"z\",\n\t\"Ž\": \"Z\",\n\t\"ž\": \"z\",\n\t\"ſ\": \"s\",\n\t\"ƒ\": \"f\",\n\t\"Ơ\": \"O\",\n\t\"ơ\": \"o\",\n\t\"Ư\": \"U\",\n\t\"ư\": \"u\",\n\t\"Ǎ\": \"A\",\n\t\"ǎ\": \"a\",\n\t\"Ǐ\": \"I\",\n\t\"ǐ\": \"i\",\n\t\"Ǒ\": \"O\",\n\t\"ǒ\": \"o\",\n\t\"Ǔ\": \"U\",\n\t\"ǔ\": \"u\",\n\t\"Ǖ\": \"U\",\n\t\"ǖ\": \"u\",\n\t\"Ǘ\": \"U\",\n\t\"ǘ\": \"u\",\n\t\"Ǚ\": \"U\",\n\t\"ǚ\": \"u\",\n\t\"Ǜ\": \"U\",\n\t\"ǜ\": \"u\",\n\t\"Ứ\": \"U\",\n\t\"ứ\": \"u\",\n\t\"Ṹ\": \"U\",\n\t\"ṹ\": \"u\",\n\t\"Ǻ\": \"A\",\n\t\"ǻ\": \"a\",\n\t\"Ǽ\": \"AE\",\n\t\"ǽ\": \"ae\",\n\t\"Ǿ\": \"O\",\n\t\"ǿ\": \"o\",\n\t\"Þ\": \"TH\",\n\t\"þ\": \"th\",\n\t\"Ṕ\": \"P\",\n\t\"ṕ\": \"p\",\n\t\"Ṥ\": \"S\",\n\t\"ṥ\": \"s\",\n\t\"X́\": \"X\",\n\t\"x́\": \"x\",\n\t\"Ѓ\": \"Г\",\n\t\"ѓ\": \"г\",\n\t\"Ќ\": \"К\",\n\t\"ќ\": \"к\",\n\t\"A̋\": \"A\",\n\t\"a̋\": \"a\",\n\t\"E̋\": \"E\",\n\t\"e̋\": \"e\",\n\t\"I̋\": \"I\",\n\t\"i̋\": \"i\",\n\t\"Ǹ\": \"N\",\n\t\"ǹ\": \"n\",\n\t\"Ồ\": \"O\",\n\t\"ồ\": \"o\",\n\t\"Ṑ\": \"O\",\n\t\"ṑ\": \"o\",\n\t\"Ừ\": \"U\",\n\t\"ừ\": \"u\",\n\t\"Ẁ\": \"W\",\n\t\"ẁ\": \"w\",\n\t\"Ỳ\": \"Y\",\n\t\"ỳ\": \"y\",\n\t\"Ȁ\": \"A\",\n\t\"ȁ\": \"a\",\n\t\"Ȅ\": \"E\",\n\t\"ȅ\": \"e\",\n\t\"Ȉ\": \"I\",\n\t\"ȉ\": \"i\",\n\t\"Ȍ\": \"O\",\n\t\"ȍ\": \"o\",\n\t\"Ȑ\": \"R\",\n\t\"ȑ\": \"r\",\n\t\"Ȕ\": \"U\",\n\t\"ȕ\": \"u\",\n\t\"B̌\": \"B\",\n\t\"b̌\": \"b\",\n\t\"Č̣\": \"C\",\n\t\"č̣\": \"c\",\n\t\"Ê̌\": \"E\",\n\t\"ê̌\": \"e\",\n\t\"F̌\": \"F\",\n\t\"f̌\": \"f\",\n\t\"Ǧ\": \"G\",\n\t\"ǧ\": \"g\",\n\t\"Ȟ\": \"H\",\n\t\"ȟ\": \"h\",\n\t\"J̌\": \"J\",\n\t\"ǰ\": \"j\",\n\t\"Ǩ\": \"K\",\n\t\"ǩ\": \"k\",\n\t\"M̌\": \"M\",\n\t\"m̌\": \"m\",\n\t\"P̌\": \"P\",\n\t\"p̌\": \"p\",\n\t\"Q̌\": \"Q\",\n\t\"q̌\": \"q\",\n\t\"Ř̩\": \"R\",\n\t\"ř̩\": \"r\",\n\t\"Ṧ\": \"S\",\n\t\"ṧ\": \"s\",\n\t\"V̌\": \"V\",\n\t\"v̌\": \"v\",\n\t\"W̌\": \"W\",\n\t\"w̌\": \"w\",\n\t\"X̌\": \"X\",\n\t\"x̌\": \"x\",\n\t\"Y̌\": \"Y\",\n\t\"y̌\": \"y\",\n\t\"A̧\": \"A\",\n\t\"a̧\": \"a\",\n\t\"B̧\": \"B\",\n\t\"b̧\": \"b\",\n\t\"Ḑ\": \"D\",\n\t\"ḑ\": \"d\",\n\t\"Ȩ\": \"E\",\n\t\"ȩ\": \"e\",\n\t\"Ɛ̧\": \"E\",\n\t\"ɛ̧\": \"e\",\n\t\"Ḩ\": \"H\",\n\t\"ḩ\": \"h\",\n\t\"I̧\": \"I\",\n\t\"i̧\": \"i\",\n\t\"Ɨ̧\": \"I\",\n\t\"ɨ̧\": \"i\",\n\t\"M̧\": \"M\",\n\t\"m̧\": \"m\",\n\t\"O̧\": \"O\",\n\t\"o̧\": \"o\",\n\t\"Q̧\": \"Q\",\n\t\"q̧\": \"q\",\n\t\"U̧\": \"U\",\n\t\"u̧\": \"u\",\n\t\"X̧\": \"X\",\n\t\"x̧\": \"x\",\n\t\"Z̧\": \"Z\",\n\t\"z̧\": \"z\",\n\t\"й\":\"и\",\n\t\"Й\":\"И\",\n\t\"ё\":\"е\",\n\t\"Ё\":\"Е\",\n};\n\nvar chars = Object.keys(characterMap).join('|');\nvar allAccents = new RegExp(chars, 'g');\nvar firstAccent = new RegExp(chars, '');\n\nfunction matcher(match) {\n\treturn characterMap[match];\n}\n\nvar removeAccents = function(string) {\n\treturn string.replace(allAccents, matcher);\n};\n\nvar hasAccents = function(string) {\n\treturn !!string.match(firstAccent);\n};\n\nmodule.exports = removeAccents;\nmodule.exports.has = hasAccents;\nmodule.exports.remove = removeAccents;\n","module.exports = window[\"React\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"privateApis\"];","/**\n * WordPress dependencies\n */\nimport { __dangerousOptInToUnstableAPIsOnlyForCoreModules } from '@wordpress/private-apis';\nexport const { lock, unlock } =\n\t__dangerousOptInToUnstableAPIsOnlyForCoreModules(\n\t\t'I know using unstable features means my theme or plugin will inevitably break in the next version of WordPress.',\n\t\t'@wordpress/editor'\n\t);\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","/**\n * WordPress dependencies\n */\nimport { _x } from '@wordpress/i18n';\n\nexport default {\n\tname: 'core/pattern-overrides',\n\tlabel: _x( 'Pattern Overrides', 'block bindings source' ),\n\tuseSource: null,\n\tlockAttributesEditing: false,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","/**\n * WordPress dependencies\n */\nimport { SETTINGS_DEFAULTS } from '@wordpress/block-editor';\n\n/**\n * The default post editor settings.\n *\n * @property {boolean|Array} allowedBlockTypes     Allowed block types\n * @property {boolean}       richEditingEnabled    Whether rich editing is enabled or not\n * @property {boolean}       codeEditingEnabled    Whether code editing is enabled or not\n * @property {boolean}       fontLibraryEnabled    Whether the font library is enabled or not.\n * @property {boolean}       enableCustomFields    Whether the WordPress custom fields are enabled or not.\n *                                                 true  = the user has opted to show the Custom Fields panel at the bottom of the editor.\n *                                                 false = the user has opted to hide the Custom Fields panel at the bottom of the editor.\n *                                                 undefined = the current environment does not support Custom Fields, so the option toggle in Preferences -> Panels to enable the Custom Fields panel is not displayed.\n * @property {number}        autosaveInterval      How often in seconds the post will be auto-saved via the REST API.\n * @property {number}        localAutosaveInterval How often in seconds the post will be backed up to sessionStorage.\n * @property {Array?}        availableTemplates    The available post templates\n * @property {boolean}       disablePostFormats    Whether or not the post formats are disabled\n * @property {Array?}        allowedMimeTypes      List of allowed mime types and file extensions\n * @property {number}        maxUploadFileSize     Maximum upload file size\n * @property {boolean}       supportsLayout        Whether the editor supports layouts.\n */\nexport const EDITOR_SETTINGS_DEFAULTS = {\n\t...SETTINGS_DEFAULTS,\n\n\trichEditingEnabled: true,\n\tcodeEditingEnabled: true,\n\tfontLibraryEnabled: true,\n\tenableCustomFields: undefined,\n\tdefaultRenderingMode: 'post-only',\n};\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { EDITOR_SETTINGS_DEFAULTS } from './defaults';\n\n/**\n * Returns a post attribute value, flattening nested rendered content using its\n * raw value in place of its original object form.\n *\n * @param {*} value Original value.\n *\n * @return {*} Raw value.\n */\nexport function getPostRawValue( value ) {\n\tif ( value && 'object' === typeof value && 'raw' in value ) {\n\t\treturn value.raw;\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns true if the two object arguments have the same keys, or false\n * otherwise.\n *\n * @param {Object} a First object.\n * @param {Object} b Second object.\n *\n * @return {boolean} Whether the two objects have the same keys.\n */\nexport function hasSameKeys( a, b ) {\n\tconst keysA = Object.keys( a ).sort();\n\tconst keysB = Object.keys( b ).sort();\n\treturn (\n\t\tkeysA.length === keysB.length &&\n\t\tkeysA.every( ( key, index ) => keysB[ index ] === key )\n\t);\n}\n\n/**\n * Returns true if, given the currently dispatching action and the previously\n * dispatched action, the two actions are editing the same post property, or\n * false otherwise.\n *\n * @param {Object} action         Currently dispatching action.\n * @param {Object} previousAction Previously dispatched action.\n *\n * @return {boolean} Whether actions are updating the same post property.\n */\nexport function isUpdatingSamePostProperty( action, previousAction ) {\n\treturn (\n\t\taction.type === 'EDIT_POST' &&\n\t\thasSameKeys( action.edits, previousAction.edits )\n\t);\n}\n\n/**\n * Returns true if, given the currently dispatching action and the previously\n * dispatched action, the two actions are modifying the same property such that\n * undo history should be batched.\n *\n * @param {Object} action         Currently dispatching action.\n * @param {Object} previousAction Previously dispatched action.\n *\n * @return {boolean} Whether to overwrite present state.\n */\nexport function shouldOverwriteState( action, previousAction ) {\n\tif ( action.type === 'RESET_EDITOR_BLOCKS' ) {\n\t\treturn ! action.shouldCreateUndoLevel;\n\t}\n\n\tif ( ! previousAction || action.type !== previousAction.type ) {\n\t\treturn false;\n\t}\n\n\treturn isUpdatingSamePostProperty( action, previousAction );\n}\n\nexport function postId( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_EDITED_POST':\n\t\t\treturn action.postId;\n\t}\n\n\treturn state;\n}\n\nexport function templateId( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_CURRENT_TEMPLATE_ID':\n\t\t\treturn action.id;\n\t}\n\n\treturn state;\n}\n\nexport function postType( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_EDITED_POST':\n\t\t\treturn action.postType;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning whether the post blocks match the defined template or not.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {boolean} Updated state.\n */\nexport function template( state = { isValid: true }, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_TEMPLATE_VALIDITY':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisValid: action.isValid,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning current network request state (whether a request to\n * the WP REST API is in progress, successful, or failed).\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function saving( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REQUEST_POST_UPDATE_START':\n\t\tcase 'REQUEST_POST_UPDATE_FINISH':\n\t\t\treturn {\n\t\t\t\tpending: action.type === 'REQUEST_POST_UPDATE_START',\n\t\t\t\toptions: action.options || {},\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning deleting post request state.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function deleting( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REQUEST_POST_DELETE_START':\n\t\tcase 'REQUEST_POST_DELETE_FINISH':\n\t\t\treturn {\n\t\t\t\tpending: action.type === 'REQUEST_POST_DELETE_START',\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Post Lock State.\n *\n * @typedef {Object} PostLockState\n *\n * @property {boolean}  isLocked       Whether the post is locked.\n * @property {?boolean} isTakeover     Whether the post editing has been taken over.\n * @property {?boolean} activePostLock Active post lock value.\n * @property {?Object}  user           User that took over the post.\n */\n\n/**\n * Reducer returning the post lock status.\n *\n * @param {PostLockState} state  Current state.\n * @param {Object}        action Dispatched action.\n *\n * @return {PostLockState} Updated state.\n */\nexport function postLock( state = { isLocked: false }, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'UPDATE_POST_LOCK':\n\t\t\treturn action.lock;\n\t}\n\n\treturn state;\n}\n\n/**\n * Post saving lock.\n *\n * When post saving is locked, the post cannot be published or updated.\n *\n * @param {PostLockState} state  Current state.\n * @param {Object}        action Dispatched action.\n *\n * @return {PostLockState} Updated state.\n */\nexport function postSavingLock( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'LOCK_POST_SAVING':\n\t\t\treturn { ...state, [ action.lockName ]: true };\n\n\t\tcase 'UNLOCK_POST_SAVING': {\n\t\t\tconst { [ action.lockName ]: removedLockName, ...restState } =\n\t\t\t\tstate;\n\t\t\treturn restState;\n\t\t}\n\t}\n\treturn state;\n}\n\n/**\n * Post autosaving lock.\n *\n * When post autosaving is locked, the post will not autosave.\n *\n * @param {PostLockState} state  Current state.\n * @param {Object}        action Dispatched action.\n *\n * @return {PostLockState} Updated state.\n */\nexport function postAutosavingLock( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'LOCK_POST_AUTOSAVING':\n\t\t\treturn { ...state, [ action.lockName ]: true };\n\n\t\tcase 'UNLOCK_POST_AUTOSAVING': {\n\t\t\tconst { [ action.lockName ]: removedLockName, ...restState } =\n\t\t\t\tstate;\n\t\t\treturn restState;\n\t\t}\n\t}\n\treturn state;\n}\n\n/**\n * Reducer returning the post editor setting.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function editorSettings( state = EDITOR_SETTINGS_DEFAULTS, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'UPDATE_EDITOR_SETTINGS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.settings,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\nexport function renderingMode( state = 'post-only', action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_RENDERING_MODE':\n\t\t\treturn action.mode;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning the editing canvas device type.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function deviceType( state = 'Desktop', action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_DEVICE_TYPE':\n\t\t\treturn action.deviceType;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer storing the list of all programmatically removed panels.\n *\n * @param {Array}  state  Current state.\n * @param {Object} action Action object.\n *\n * @return {Array} Updated state.\n */\nexport function removedPanels( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REMOVE_PANEL':\n\t\t\tif ( ! state.includes( action.panelName ) ) {\n\t\t\t\treturn [ ...state, action.panelName ];\n\t\t\t}\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer to set the block inserter panel open or closed.\n *\n * Note: this reducer interacts with the list view panel reducer\n * to make sure that only one of the two panels is open at the same time.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n */\nexport function blockInserterPanel( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_LIST_VIEW_OPENED':\n\t\t\treturn action.isOpen ? false : state;\n\t\tcase 'SET_IS_INSERTER_OPENED':\n\t\t\treturn action.value;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer to set the list view panel open or closed.\n *\n * Note: this reducer interacts with the inserter panel reducer\n * to make sure that only one of the two panels is open at the same time.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n */\nexport function listViewPanel( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_INSERTER_OPENED':\n\t\t\treturn action.value ? false : state;\n\t\tcase 'SET_IS_LIST_VIEW_OPENED':\n\t\t\treturn action.isOpen;\n\t}\n\treturn state;\n}\n\n/**\n * This reducer does nothing aside initializing a ref to the list view toggle.\n * We will have a unique ref per \"editor\" instance.\n *\n * @param {Object} state\n * @return {Object} Reference to the list view toggle button.\n */\nexport function listViewToggleRef( state = { current: null } ) {\n\treturn state;\n}\n\nexport default combineReducers( {\n\tpostId,\n\tpostType,\n\ttemplateId,\n\tsaving,\n\tdeleting,\n\tpostLock,\n\ttemplate,\n\tpostSavingLock,\n\teditorSettings,\n\tpostAutosavingLock,\n\trenderingMode,\n\tdeviceType,\n\tremovedPanels,\n\tblockInserterPanel,\n\tlistViewPanel,\n\tlistViewToggleRef,\n} );\n","'use strict';\n\n/** @typedef {(...args: any[]) => *[]} GetDependants */\n\n/** @typedef {() => void} Clear */\n\n/**\n * @typedef {{\n *   getDependants: GetDependants,\n *   clear: Clear\n * }} EnhancedSelector\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef CacheNode\n *\n * @property {?CacheNode|undefined} [prev] Previous node.\n * @property {?CacheNode|undefined} [next] Next node.\n * @property {*[]} args Function arguments for cache entry.\n * @property {*} val Function result.\n */\n\n/**\n * @typedef Cache\n *\n * @property {Clear} clear Function to clear cache.\n * @property {boolean} [isUniqueByDependants] Whether dependants are valid in\n * considering cache uniqueness. A cache is unique if dependents are all arrays\n * or objects.\n * @property {CacheNode?} [head] Cache head.\n * @property {*[]} [lastDependants] Dependants from previous invocation.\n */\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {{}}\n */\nvar LEAF_KEY = {};\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @template T\n *\n * @param {T} value Value to return.\n *\n * @return {[T]} Value returned as entry in array.\n */\nfunction arrayOf(value) {\n\treturn [value];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike(value) {\n\treturn !!value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Cache} Cache object.\n */\nfunction createCache() {\n\t/** @type {Cache} */\n\tvar cache = {\n\t\tclear: function () {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {*[]} a First array.\n * @param {*[]} b Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual(a, b, fromIndex) {\n\tvar i;\n\n\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\n\tfor (i = fromIndex; i < a.length; i++) {\n\t\tif (a[i] !== b[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @template {(...args: *[]) => *} S\n *\n * @param {S} selector Selector function.\n * @param {GetDependants=} getDependants Dependant getter returning an array of\n * references used in cache bust consideration.\n */\nexport default function (selector, getDependants) {\n\t/** @type {WeakMap<*,*>} */\n\tvar rootCache;\n\n\t/** @type {GetDependants} */\n\tvar normalizedGetDependants = getDependants ? getDependants : arrayOf;\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {*[]} dependants Selector dependants.\n\t *\n\t * @return {Cache} Cache object.\n\t */\n\tfunction getCache(dependants) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti,\n\t\t\tdependant,\n\t\t\tmap,\n\t\t\tcache;\n\n\t\tfor (i = 0; i < dependants.length; i++) {\n\t\t\tdependant = dependants[i];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif (!isObjectLike(dependant)) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif (caches.has(dependant)) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get(dependant);\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set(dependant, map);\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif (!caches.has(LEAF_KEY)) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set(LEAF_KEY, cache);\n\t\t}\n\n\t\treturn caches.get(LEAF_KEY);\n\t}\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = new WeakMap();\n\t}\n\n\t/* eslint-disable jsdoc/check-param-names */\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {*}    source    Source object for derivation.\n\t * @param {...*} extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\t/* eslint-enable jsdoc/check-param-names */\n\tfunction callSelector(/* source, ...extraArgs */) {\n\t\tvar len = arguments.length,\n\t\t\tcache,\n\t\t\tnode,\n\t\t\ti,\n\t\t\targs,\n\t\t\tdependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tdependants = normalizedGetDependants.apply(null, args);\n\t\tcache = getCache(dependants);\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type), shallow\n\t\t// compare against last dependants and, if references have changed,\n\t\t// destroy cache to recalculate result.\n\t\tif (!cache.isUniqueByDependants) {\n\t\t\tif (\n\t\t\t\tcache.lastDependants &&\n\t\t\t\t!isShallowEqual(dependants, cache.lastDependants, 0)\n\t\t\t) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile (node) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif (!isShallowEqual(node.args, args, 1)) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== cache.head) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\t/** @type {CacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {CacheNode} */ (cache.head).prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = /** @type {CacheNode} */ ({\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply(null, args),\n\t\t});\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[0] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (cache.head) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = normalizedGetDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn /** @type {S & EnhancedSelector} */ (callSelector);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"date\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"deprecated\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst layout = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18 5.5H6a.5.5 0 00-.5.5v3h13V6a.5.5 0 00-.5-.5zm.5 5H10v8h8a.5.5 0 00.5-.5v-7.5zm-10 0h-3V18a.5.5 0 00.5.5h2.5v-8zM6 4h12a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2z\" />\n\t</SVG>\n);\n\nexport default layout;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"preferences\"];","/**\n * Set of post properties for which edits should assume a merging behavior,\n * assuming an object value.\n *\n * @type {Set}\n */\nexport const EDIT_MERGE_PROPERTIES = new Set( [ 'meta' ] );\n\n/**\n * Constant for the store module (or reducer) key.\n *\n * @type {string}\n */\nexport const STORE_NAME = 'core/editor';\n\nexport const SAVE_POST_NOTICE_ID = 'SAVE_POST_NOTICE_ID';\nexport const TRASH_POST_NOTICE_ID = 'TRASH_POST_NOTICE_ID';\nexport const PERMALINK_POSTNAME_REGEX = /%(?:postname|pagename)%/;\nexport const ONE_MINUTE_IN_MS = 60 * 1000;\nexport const AUTOSAVE_PROPERTIES = [ 'title', 'excerpt', 'content' ];\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst header = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18.5 10.5H10v8h8a.5.5 0 00.5-.5v-7.5zm-10 0h-3V18a.5.5 0 00.5.5h2.5v-8zM6 4h12a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2z\" />\n\t</SVG>\n);\n\nexport default header;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst footer = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\td=\"M18 5.5h-8v8h8.5V6a.5.5 0 00-.5-.5zm-9.5 8h-3V6a.5.5 0 01.5-.5h2.5v8zM6 4h12a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2z\"\n\t\t/>\n\t</SVG>\n);\n\nexport default footer;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst sidebar = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18 5.5H6a.5.5 0 00-.5.5v3h13V6a.5.5 0 00-.5-.5zm.5 5H10v8h8a.5.5 0 00.5-.5v-7.5zM6 4h12a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2z\" />\n\t</SVG>\n);\n\nexport default sidebar;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst symbolFilled = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-17.6 1L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\" />\n\t</SVG>\n);\n\nexport default symbolFilled;\n","/**\n * WordPress dependencies\n */\nimport {\n\theader as headerIcon,\n\tfooter as footerIcon,\n\tsidebar as sidebarIcon,\n\tsymbolFilled as symbolFilledIcon,\n} from '@wordpress/icons';\n/**\n * Helper function to retrieve the corresponding icon by name.\n *\n * @param {string} iconName The name of the icon.\n *\n * @return {Object} The corresponding icon.\n */\nexport function getTemplatePartIcon( iconName ) {\n\tif ( 'header' === iconName ) {\n\t\treturn headerIcon;\n\t} else if ( 'footer' === iconName ) {\n\t\treturn footerIcon;\n\t} else if ( 'sidebar' === iconName ) {\n\t\treturn sidebarIcon;\n\t}\n\treturn symbolFilledIcon;\n}\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tgetFreeformContentHandlerName,\n\tgetDefaultBlockName,\n\t__unstableSerializeAndClean,\n\tparse,\n} from '@wordpress/blocks';\nimport { isInTheFuture, getDate } from '@wordpress/date';\nimport { addQueryArgs, cleanForSlug } from '@wordpress/url';\nimport { createRegistrySelector } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\nimport { Platform } from '@wordpress/element';\nimport { layout } from '@wordpress/icons';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport {\n\tEDIT_MERGE_PROPERTIES,\n\tPERMALINK_POSTNAME_REGEX,\n\tONE_MINUTE_IN_MS,\n\tAUTOSAVE_PROPERTIES,\n} from './constants';\nimport { getPostRawValue } from './reducer';\nimport { getTemplatePartIcon } from '../utils/get-template-part-icon';\n\n/**\n * Shared reference to an empty object for cases where it is important to avoid\n * returning a new object reference on every invocation, as in a connected or\n * other pure component which performs `shouldComponentUpdate` check on props.\n * This should be used as a last resort, since the normalized data should be\n * maintained by the reducer result in state.\n */\nconst EMPTY_OBJECT = {};\n\n/**\n * Returns true if any past editor history snapshots exist, or false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether undo history exists.\n */\nexport const hasEditorUndo = createRegistrySelector( ( select ) => () => {\n\treturn select( coreStore ).hasUndo();\n} );\n\n/**\n * Returns true if any future editor history snapshots exist, or false\n * otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether redo history exists.\n */\nexport const hasEditorRedo = createRegistrySelector( ( select ) => () => {\n\treturn select( coreStore ).hasRedo();\n} );\n\n/**\n * Returns true if the currently edited post is yet to be saved, or false if\n * the post has been saved.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post is new.\n */\nexport function isEditedPostNew( state ) {\n\treturn getCurrentPost( state ).status === 'auto-draft';\n}\n\n/**\n * Returns true if content includes unsaved changes, or false otherwise.\n *\n * @param {Object} state Editor state.\n *\n * @return {boolean} Whether content includes unsaved changes.\n */\nexport function hasChangedContent( state ) {\n\tconst edits = getPostEdits( state );\n\treturn 'content' in edits;\n}\n\n/**\n * Returns true if there are unsaved values for the current edit session, or\n * false if the editing state matches the saved or new post.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether unsaved values exist.\n */\nexport const isEditedPostDirty = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\t// Edits should contain only fields which differ from the saved post (reset\n\t\t// at initial load and save complete). Thus, a non-empty edits state can be\n\t\t// inferred to contain unsaved values.\n\t\tconst postType = getCurrentPostType( state );\n\t\tconst postId = getCurrentPostId( state );\n\t\tif (\n\t\t\tselect( coreStore ).hasEditsForEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tpostType,\n\t\t\t\tpostId\n\t\t\t)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n);\n\n/**\n * Returns true if there are unsaved edits for entities other than\n * the editor's post, and false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether there are edits or not.\n */\nexport const hasNonPostEntityChanges = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst dirtyEntityRecords =\n\t\t\tselect( coreStore ).__experimentalGetDirtyEntityRecords();\n\t\tconst { type, id } = getCurrentPost( state );\n\t\treturn dirtyEntityRecords.some(\n\t\t\t( entityRecord ) =>\n\t\t\t\tentityRecord.kind !== 'postType' ||\n\t\t\t\tentityRecord.name !== type ||\n\t\t\t\tentityRecord.key !== id\n\t\t);\n\t}\n);\n\n/**\n * Returns true if there are no unsaved values for the current edit session and\n * if the currently edited post is new (has never been saved before).\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether new post and unsaved values exist.\n */\nexport function isCleanNewPost( state ) {\n\treturn ! isEditedPostDirty( state ) && isEditedPostNew( state );\n}\n\n/**\n * Returns the post currently being edited in its last known saved state, not\n * including unsaved edits. Returns an object containing relevant default post\n * values if the post has not yet been saved.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} Post object.\n */\nexport const getCurrentPost = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst postId = getCurrentPostId( state );\n\t\tconst postType = getCurrentPostType( state );\n\n\t\tconst post = select( coreStore ).getRawEntityRecord(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t\tif ( post ) {\n\t\t\treturn post;\n\t\t}\n\n\t\t// This exists for compatibility with the previous selector behavior\n\t\t// which would guarantee an object return based on the editor reducer's\n\t\t// default empty object state.\n\t\treturn EMPTY_OBJECT;\n\t}\n);\n\n/**\n * Returns the post type of the post currently being edited.\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Post type.\n */\nexport function getCurrentPostType( state ) {\n\treturn state.postType;\n}\n\n/**\n * Returns the ID of the post currently being edited, or null if the post has\n * not yet been saved.\n *\n * @param {Object} state Global application state.\n *\n * @return {?number} ID of current post.\n */\nexport function getCurrentPostId( state ) {\n\treturn state.postId;\n}\n\n/**\n * Returns the template ID currently being rendered/edited\n *\n * @param {Object} state Global application state.\n *\n * @return {string?} Template ID.\n */\nexport function getCurrentTemplateId( state ) {\n\treturn state.templateId;\n}\n\n/**\n * Returns the number of revisions of the post currently being edited.\n *\n * @param {Object} state Global application state.\n *\n * @return {number} Number of revisions.\n */\nexport function getCurrentPostRevisionsCount( state ) {\n\treturn (\n\t\tgetCurrentPost( state )._links?.[ 'version-history' ]?.[ 0 ]?.count ?? 0\n\t);\n}\n\n/**\n * Returns the last revision ID of the post currently being edited,\n * or null if the post has no revisions.\n *\n * @param {Object} state Global application state.\n *\n * @return {?number} ID of the last revision.\n */\nexport function getCurrentPostLastRevisionId( state ) {\n\treturn (\n\t\tgetCurrentPost( state )._links?.[ 'predecessor-version' ]?.[ 0 ]?.id ??\n\t\tnull\n\t);\n}\n\n/**\n * Returns any post values which have been changed in the editor but not yet\n * been saved.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} Object of key value pairs comprising unsaved edits.\n */\nexport const getPostEdits = createRegistrySelector( ( select ) => ( state ) => {\n\tconst postType = getCurrentPostType( state );\n\tconst postId = getCurrentPostId( state );\n\treturn (\n\t\tselect( coreStore ).getEntityRecordEdits(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t) || EMPTY_OBJECT\n\t);\n} );\n\n/**\n * Returns an attribute value of the saved post.\n *\n * @param {Object} state         Global application state.\n * @param {string} attributeName Post attribute name.\n *\n * @return {*} Post attribute value.\n */\nexport function getCurrentPostAttribute( state, attributeName ) {\n\tswitch ( attributeName ) {\n\t\tcase 'type':\n\t\t\treturn getCurrentPostType( state );\n\n\t\tcase 'id':\n\t\t\treturn getCurrentPostId( state );\n\n\t\tdefault:\n\t\t\tconst post = getCurrentPost( state );\n\t\t\tif ( ! post.hasOwnProperty( attributeName ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn getPostRawValue( post[ attributeName ] );\n\t}\n}\n\n/**\n * Returns a single attribute of the post being edited, preferring the unsaved\n * edit if one exists, but merging with the attribute value for the last known\n * saved state of the post (this is needed for some nested attributes like meta).\n *\n * @param {Object} state         Global application state.\n * @param {string} attributeName Post attribute name.\n *\n * @return {*} Post attribute value.\n */\nconst getNestedEditedPostProperty = createSelector(\n\t( state, attributeName ) => {\n\t\tconst edits = getPostEdits( state );\n\t\tif ( ! edits.hasOwnProperty( attributeName ) ) {\n\t\t\treturn getCurrentPostAttribute( state, attributeName );\n\t\t}\n\n\t\treturn {\n\t\t\t...getCurrentPostAttribute( state, attributeName ),\n\t\t\t...edits[ attributeName ],\n\t\t};\n\t},\n\t( state, attributeName ) => [\n\t\tgetCurrentPostAttribute( state, attributeName ),\n\t\tgetPostEdits( state )[ attributeName ],\n\t]\n);\n\n/**\n * Returns a single attribute of the post being edited, preferring the unsaved\n * edit if one exists, but falling back to the attribute for the last known\n * saved state of the post.\n *\n * @param {Object} state         Global application state.\n * @param {string} attributeName Post attribute name.\n *\n * @return {*} Post attribute value.\n */\nexport function getEditedPostAttribute( state, attributeName ) {\n\t// Special cases.\n\tswitch ( attributeName ) {\n\t\tcase 'content':\n\t\t\treturn getEditedPostContent( state );\n\t}\n\n\t// Fall back to saved post value if not edited.\n\tconst edits = getPostEdits( state );\n\tif ( ! edits.hasOwnProperty( attributeName ) ) {\n\t\treturn getCurrentPostAttribute( state, attributeName );\n\t}\n\n\t// Merge properties are objects which contain only the patch edit in state,\n\t// and thus must be merged with the current post attribute.\n\tif ( EDIT_MERGE_PROPERTIES.has( attributeName ) ) {\n\t\treturn getNestedEditedPostProperty( state, attributeName );\n\t}\n\n\treturn edits[ attributeName ];\n}\n\n/**\n * Returns an attribute value of the current autosave revision for a post, or\n * null if there is no autosave for the post.\n *\n * @deprecated since 5.6. Callers should use the `getAutosave( postType, postId, userId )` selector\n * \t\t\t   from the '@wordpress/core-data' package and access properties on the returned\n * \t\t\t   autosave object using getPostRawValue.\n *\n * @param {Object} state         Global application state.\n * @param {string} attributeName Autosave attribute name.\n *\n * @return {*} Autosave attribute value.\n */\nexport const getAutosaveAttribute = createRegistrySelector(\n\t( select ) => ( state, attributeName ) => {\n\t\tif (\n\t\t\t! AUTOSAVE_PROPERTIES.includes( attributeName ) &&\n\t\t\tattributeName !== 'preview_link'\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst postType = getCurrentPostType( state );\n\n\t\t// Currently template autosaving is not supported.\n\t\tif ( postType === 'wp_template' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst postId = getCurrentPostId( state );\n\t\tconst currentUserId = select( coreStore ).getCurrentUser()?.id;\n\t\tconst autosave = select( coreStore ).getAutosave(\n\t\t\tpostType,\n\t\t\tpostId,\n\t\t\tcurrentUserId\n\t\t);\n\n\t\tif ( autosave ) {\n\t\t\treturn getPostRawValue( autosave[ attributeName ] );\n\t\t}\n\t}\n);\n\n/**\n * Returns the current visibility of the post being edited, preferring the\n * unsaved value if different than the saved post. The return value is one of\n * \"private\", \"password\", or \"public\".\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Post visibility.\n */\nexport function getEditedPostVisibility( state ) {\n\tconst status = getEditedPostAttribute( state, 'status' );\n\tif ( status === 'private' ) {\n\t\treturn 'private';\n\t}\n\n\tconst password = getEditedPostAttribute( state, 'password' );\n\tif ( password ) {\n\t\treturn 'password';\n\t}\n\n\treturn 'public';\n}\n\n/**\n * Returns true if post is pending review.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether current post is pending review.\n */\nexport function isCurrentPostPending( state ) {\n\treturn getCurrentPost( state ).status === 'pending';\n}\n\n/**\n * Return true if the current post has already been published.\n *\n * @param {Object}  state       Global application state.\n * @param {Object?} currentPost Explicit current post for bypassing registry selector.\n *\n * @return {boolean} Whether the post has been published.\n */\nexport function isCurrentPostPublished( state, currentPost ) {\n\tconst post = currentPost || getCurrentPost( state );\n\n\treturn (\n\t\t[ 'publish', 'private' ].indexOf( post.status ) !== -1 ||\n\t\t( post.status === 'future' &&\n\t\t\t! isInTheFuture(\n\t\t\t\tnew Date( Number( getDate( post.date ) ) - ONE_MINUTE_IN_MS )\n\t\t\t) )\n\t);\n}\n\n/**\n * Returns true if post is already scheduled.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether current post is scheduled to be posted.\n */\nexport function isCurrentPostScheduled( state ) {\n\treturn (\n\t\tgetCurrentPost( state ).status === 'future' &&\n\t\t! isCurrentPostPublished( state )\n\t);\n}\n\n/**\n * Return true if the post being edited can be published.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post can been published.\n */\nexport function isEditedPostPublishable( state ) {\n\tconst post = getCurrentPost( state );\n\n\t// TODO: Post being publishable should be superset of condition of post\n\t// being saveable. Currently this restriction is imposed at UI.\n\t//\n\t//  See: <PostPublishButton /> (`isButtonEnabled` assigned by `isSaveable`).\n\n\treturn (\n\t\tisEditedPostDirty( state ) ||\n\t\t[ 'publish', 'private', 'future' ].indexOf( post.status ) === -1\n\t);\n}\n\n/**\n * Returns true if the post can be saved, or false otherwise. A post must\n * contain a title, an excerpt, or non-empty content to be valid for save.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post can be saved.\n */\nexport function isEditedPostSaveable( state ) {\n\tif ( isSavingPost( state ) ) {\n\t\treturn false;\n\t}\n\n\t// TODO: Post should not be saveable if not dirty. Cannot be added here at\n\t// this time since posts where meta boxes are present can be saved even if\n\t// the post is not dirty. Currently this restriction is imposed at UI, but\n\t// should be moved here.\n\t//\n\t//  See: `isEditedPostPublishable` (includes `isEditedPostDirty` condition)\n\t//  See: <PostSavedState /> (`forceIsDirty` prop)\n\t//  See: <PostPublishButton /> (`forceIsDirty` prop)\n\t//  See: https://github.com/WordPress/gutenberg/pull/4184.\n\n\treturn (\n\t\t!! getEditedPostAttribute( state, 'title' ) ||\n\t\t!! getEditedPostAttribute( state, 'excerpt' ) ||\n\t\t! isEditedPostEmpty( state ) ||\n\t\tPlatform.OS === 'native'\n\t);\n}\n\n/**\n * Returns true if the edited post has content. A post has content if it has at\n * least one saveable block or otherwise has a non-empty content property\n * assigned.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether post has content.\n */\nexport const isEditedPostEmpty = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\t// While the condition of truthy content string is sufficient to determine\n\t\t// emptiness, testing saveable blocks length is a trivial operation. Since\n\t\t// this function can be called frequently, optimize for the fast case as a\n\t\t// condition of the mere existence of blocks. Note that the value of edited\n\t\t// content takes precedent over block content, and must fall through to the\n\t\t// default logic.\n\t\tconst postId = getCurrentPostId( state );\n\t\tconst postType = getCurrentPostType( state );\n\t\tconst record = select( coreStore ).getEditedEntityRecord(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t\tif ( typeof record.content !== 'function' ) {\n\t\t\treturn ! record.content;\n\t\t}\n\n\t\tconst blocks = getEditedPostAttribute( state, 'blocks' );\n\n\t\tif ( blocks.length === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Pierce the abstraction of the serializer in knowing that blocks are\n\t\t// joined with newlines such that even if every individual block\n\t\t// produces an empty save result, the serialized content is non-empty.\n\t\tif ( blocks.length > 1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// There are two conditions under which the optimization cannot be\n\t\t// assumed, and a fallthrough to getEditedPostContent must occur:\n\t\t//\n\t\t// 1. getBlocksForSerialization has special treatment in omitting a\n\t\t//    single unmodified default block.\n\t\t// 2. Comment delimiters are omitted for a freeform or unregistered\n\t\t//    block in its serialization. The freeform block specifically may\n\t\t//    produce an empty string in its saved output.\n\t\t//\n\t\t// For all other content, the single block is assumed to make a post\n\t\t// non-empty, if only by virtue of its own comment delimiters.\n\t\tconst blockName = blocks[ 0 ].name;\n\t\tif (\n\t\t\tblockName !== getDefaultBlockName() &&\n\t\t\tblockName !== getFreeformContentHandlerName()\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ! getEditedPostContent( state );\n\t}\n);\n\n/**\n * Returns true if the post can be autosaved, or false otherwise.\n *\n * @param {Object} state    Global application state.\n * @param {Object} autosave A raw autosave object from the REST API.\n *\n * @return {boolean} Whether the post can be autosaved.\n */\nexport const isEditedPostAutosaveable = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\t// A post must contain a title, an excerpt, or non-empty content to be valid for autosaving.\n\t\tif ( ! isEditedPostSaveable( state ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// A post is not autosavable when there is a post autosave lock.\n\t\tif ( isPostAutosavingLocked( state ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst postType = getCurrentPostType( state );\n\n\t\t// Currently template autosaving is not supported.\n\t\tif ( postType === 'wp_template' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst postId = getCurrentPostId( state );\n\t\tconst hasFetchedAutosave = select( coreStore ).hasFetchedAutosaves(\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t\tconst currentUserId = select( coreStore ).getCurrentUser()?.id;\n\n\t\t// Disable reason - this line causes the side-effect of fetching the autosave\n\t\t// via a resolver, moving below the return would result in the autosave never\n\t\t// being fetched.\n\t\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\t\tconst autosave = select( coreStore ).getAutosave(\n\t\t\tpostType,\n\t\t\tpostId,\n\t\t\tcurrentUserId\n\t\t);\n\n\t\t// If any existing autosaves have not yet been fetched, this function is\n\t\t// unable to determine if the post is autosaveable, so return false.\n\t\tif ( ! hasFetchedAutosave ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If we don't already have an autosave, the post is autosaveable.\n\t\tif ( ! autosave ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// To avoid an expensive content serialization, use the content dirtiness\n\t\t// flag in place of content field comparison against the known autosave.\n\t\t// This is not strictly accurate, and relies on a tolerance toward autosave\n\t\t// request failures for unnecessary saves.\n\t\tif ( hasChangedContent( state ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If title, excerpt, or meta have changed, the post is autosaveable.\n\t\treturn [ 'title', 'excerpt', 'meta' ].some(\n\t\t\t( field ) =>\n\t\t\t\tgetPostRawValue( autosave[ field ] ) !==\n\t\t\t\tgetEditedPostAttribute( state, field )\n\t\t);\n\t}\n);\n\n/**\n * Return true if the post being edited is being scheduled. Preferring the\n * unsaved status values.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post has been published.\n */\nexport function isEditedPostBeingScheduled( state ) {\n\tconst date = getEditedPostAttribute( state, 'date' );\n\t// Offset the date by one minute (network latency).\n\tconst checkedDate = new Date(\n\t\tNumber( getDate( date ) ) - ONE_MINUTE_IN_MS\n\t);\n\n\treturn isInTheFuture( checkedDate );\n}\n\n/**\n * Returns whether the current post should be considered to have a \"floating\"\n * date (i.e. that it would publish \"Immediately\" rather than at a set time).\n *\n * Unlike in the PHP backend, the REST API returns a full date string for posts\n * where the 0000-00-00T00:00:00 placeholder is present in the database. To\n * infer that a post is set to publish \"Immediately\" we check whether the date\n * and modified date are the same.\n *\n * @param {Object} state Editor state.\n *\n * @return {boolean} Whether the edited post has a floating date value.\n */\nexport function isEditedPostDateFloating( state ) {\n\tconst date = getEditedPostAttribute( state, 'date' );\n\tconst modified = getEditedPostAttribute( state, 'modified' );\n\n\t// This should be the status of the persisted post\n\t// It shouldn't use the \"edited\" status otherwise it breaks the\n\t// inferred post data floating status\n\t// See https://github.com/WordPress/gutenberg/issues/28083.\n\tconst status = getCurrentPost( state ).status;\n\tif (\n\t\tstatus === 'draft' ||\n\t\tstatus === 'auto-draft' ||\n\t\tstatus === 'pending'\n\t) {\n\t\treturn date === modified || date === null;\n\t}\n\treturn false;\n}\n\n/**\n * Returns true if the post is currently being deleted, or false otherwise.\n *\n * @param {Object} state Editor state.\n *\n * @return {boolean} Whether post is being deleted.\n */\nexport function isDeletingPost( state ) {\n\treturn !! state.deleting.pending;\n}\n\n/**\n * Returns true if the post is currently being saved, or false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether post is being saved.\n */\nexport function isSavingPost( state ) {\n\treturn !! state.saving.pending;\n}\n\n/**\n * Returns true if non-post entities are currently being saved, or false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether non-post entities are being saved.\n */\nexport const isSavingNonPostEntityChanges = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst entitiesBeingSaved =\n\t\t\tselect( coreStore ).__experimentalGetEntitiesBeingSaved();\n\t\tconst { type, id } = getCurrentPost( state );\n\t\treturn entitiesBeingSaved.some(\n\t\t\t( entityRecord ) =>\n\t\t\t\tentityRecord.kind !== 'postType' ||\n\t\t\t\tentityRecord.name !== type ||\n\t\t\t\tentityRecord.key !== id\n\t\t);\n\t}\n);\n\n/**\n * Returns true if a previous post save was attempted successfully, or false\n * otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post was saved successfully.\n */\nexport const didPostSaveRequestSucceed = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst postType = getCurrentPostType( state );\n\t\tconst postId = getCurrentPostId( state );\n\t\treturn ! select( coreStore ).getLastEntitySaveError(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t}\n);\n\n/**\n * Returns true if a previous post save was attempted but failed, or false\n * otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post save failed.\n */\nexport const didPostSaveRequestFail = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst postType = getCurrentPostType( state );\n\t\tconst postId = getCurrentPostId( state );\n\t\treturn !! select( coreStore ).getLastEntitySaveError(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t}\n);\n\n/**\n * Returns true if the post is autosaving, or false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post is autosaving.\n */\nexport function isAutosavingPost( state ) {\n\treturn isSavingPost( state ) && Boolean( state.saving.options?.isAutosave );\n}\n\n/**\n * Returns true if the post is being previewed, or false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post is being previewed.\n */\nexport function isPreviewingPost( state ) {\n\treturn isSavingPost( state ) && Boolean( state.saving.options?.isPreview );\n}\n\n/**\n * Returns the post preview link\n *\n * @param {Object} state Global application state.\n *\n * @return {string | undefined} Preview Link.\n */\nexport function getEditedPostPreviewLink( state ) {\n\tif ( state.saving.pending || isSavingPost( state ) ) {\n\t\treturn;\n\t}\n\n\tlet previewLink = getAutosaveAttribute( state, 'preview_link' );\n\t// Fix for issue: https://github.com/WordPress/gutenberg/issues/33616\n\t// If the post is draft, ignore the preview link from the autosave record,\n\t// because the preview could be a stale autosave if the post was switched from\n\t// published to draft.\n\t// See: https://github.com/WordPress/gutenberg/pull/37952.\n\tif ( ! previewLink || 'draft' === getCurrentPost( state ).status ) {\n\t\tpreviewLink = getEditedPostAttribute( state, 'link' );\n\t\tif ( previewLink ) {\n\t\t\tpreviewLink = addQueryArgs( previewLink, { preview: true } );\n\t\t}\n\t}\n\tconst featuredImageId = getEditedPostAttribute( state, 'featured_media' );\n\n\tif ( previewLink && featuredImageId ) {\n\t\treturn addQueryArgs( previewLink, { _thumbnail_id: featuredImageId } );\n\t}\n\n\treturn previewLink;\n}\n\n/**\n * Returns a suggested post format for the current post, inferred only if there\n * is a single block within the post and it is of a type known to match a\n * default post format. Returns null if the format cannot be determined.\n *\n * @return {?string} Suggested post format.\n */\nexport const getSuggestedPostFormat = createRegistrySelector(\n\t( select ) => () => {\n\t\tconst blocks = select( blockEditorStore ).getBlocks();\n\n\t\tif ( blocks.length > 2 ) return null;\n\n\t\tlet name;\n\t\t// If there is only one block in the content of the post grab its name\n\t\t// so we can derive a suitable post format from it.\n\t\tif ( blocks.length === 1 ) {\n\t\t\tname = blocks[ 0 ].name;\n\t\t\t// Check for core/embed `video` and `audio` eligible suggestions.\n\t\t\tif ( name === 'core/embed' ) {\n\t\t\t\tconst provider = blocks[ 0 ].attributes?.providerNameSlug;\n\t\t\t\tif ( [ 'youtube', 'vimeo' ].includes( provider ) ) {\n\t\t\t\t\tname = 'core/video';\n\t\t\t\t} else if ( [ 'spotify', 'soundcloud' ].includes( provider ) ) {\n\t\t\t\t\tname = 'core/audio';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If there are two blocks in the content and the last one is a text blocks\n\t\t// grab the name of the first one to also suggest a post format from it.\n\t\tif ( blocks.length === 2 && blocks[ 1 ].name === 'core/paragraph' ) {\n\t\t\tname = blocks[ 0 ].name;\n\t\t}\n\n\t\t// We only convert to default post formats in core.\n\t\tswitch ( name ) {\n\t\t\tcase 'core/image':\n\t\t\t\treturn 'image';\n\t\t\tcase 'core/quote':\n\t\t\tcase 'core/pullquote':\n\t\t\t\treturn 'quote';\n\t\t\tcase 'core/gallery':\n\t\t\t\treturn 'gallery';\n\t\t\tcase 'core/video':\n\t\t\t\treturn 'video';\n\t\t\tcase 'core/audio':\n\t\t\t\treturn 'audio';\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n);\n\n/**\n * Returns the content of the post being edited.\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Post content.\n */\nexport const getEditedPostContent = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst postId = getCurrentPostId( state );\n\t\tconst postType = getCurrentPostType( state );\n\t\tconst record = select( coreStore ).getEditedEntityRecord(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t\tif ( record ) {\n\t\t\tif ( typeof record.content === 'function' ) {\n\t\t\t\treturn record.content( record );\n\t\t\t} else if ( record.blocks ) {\n\t\t\t\treturn __unstableSerializeAndClean( record.blocks );\n\t\t\t} else if ( record.content ) {\n\t\t\t\treturn record.content;\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t}\n);\n\n/**\n * Returns true if the post is being published, or false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether post is being published.\n */\nexport function isPublishingPost( state ) {\n\treturn (\n\t\tisSavingPost( state ) &&\n\t\t! isCurrentPostPublished( state ) &&\n\t\tgetEditedPostAttribute( state, 'status' ) === 'publish'\n\t);\n}\n\n/**\n * Returns whether the permalink is editable or not.\n *\n * @param {Object} state Editor state.\n *\n * @return {boolean} Whether or not the permalink is editable.\n */\nexport function isPermalinkEditable( state ) {\n\tconst permalinkTemplate = getEditedPostAttribute(\n\t\tstate,\n\t\t'permalink_template'\n\t);\n\n\treturn PERMALINK_POSTNAME_REGEX.test( permalinkTemplate );\n}\n\n/**\n * Returns the permalink for the post.\n *\n * @param {Object} state Editor state.\n *\n * @return {?string} The permalink, or null if the post is not viewable.\n */\nexport function getPermalink( state ) {\n\tconst permalinkParts = getPermalinkParts( state );\n\tif ( ! permalinkParts ) {\n\t\treturn null;\n\t}\n\n\tconst { prefix, postName, suffix } = permalinkParts;\n\n\tif ( isPermalinkEditable( state ) ) {\n\t\treturn prefix + postName + suffix;\n\t}\n\n\treturn prefix;\n}\n\n/**\n * Returns the slug for the post being edited, preferring a manually edited\n * value if one exists, then a sanitized version of the current post title, and\n * finally the post ID.\n *\n * @param {Object} state Editor state.\n *\n * @return {string} The current slug to be displayed in the editor\n */\nexport function getEditedPostSlug( state ) {\n\treturn (\n\t\tgetEditedPostAttribute( state, 'slug' ) ||\n\t\tcleanForSlug( getEditedPostAttribute( state, 'title' ) ) ||\n\t\tgetCurrentPostId( state )\n\t);\n}\n\n/**\n * Returns the permalink for a post, split into it's three parts: the prefix,\n * the postName, and the suffix.\n *\n * @param {Object} state Editor state.\n *\n * @return {Object} An object containing the prefix, postName, and suffix for\n *                  the permalink, or null if the post is not viewable.\n */\nexport function getPermalinkParts( state ) {\n\tconst permalinkTemplate = getEditedPostAttribute(\n\t\tstate,\n\t\t'permalink_template'\n\t);\n\tif ( ! permalinkTemplate ) {\n\t\treturn null;\n\t}\n\n\tconst postName =\n\t\tgetEditedPostAttribute( state, 'slug' ) ||\n\t\tgetEditedPostAttribute( state, 'generated_slug' );\n\n\tconst [ prefix, suffix ] = permalinkTemplate.split(\n\t\tPERMALINK_POSTNAME_REGEX\n\t);\n\n\treturn {\n\t\tprefix,\n\t\tpostName,\n\t\tsuffix,\n\t};\n}\n\n/**\n * Returns whether the post is locked.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Is locked.\n */\nexport function isPostLocked( state ) {\n\treturn state.postLock.isLocked;\n}\n\n/**\n * Returns whether post saving is locked.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Is locked.\n */\nexport function isPostSavingLocked( state ) {\n\treturn Object.keys( state.postSavingLock ).length > 0;\n}\n\n/**\n * Returns whether post autosaving is locked.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Is locked.\n */\nexport function isPostAutosavingLocked( state ) {\n\treturn Object.keys( state.postAutosavingLock ).length > 0;\n}\n\n/**\n * Returns whether the edition of the post has been taken over.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Is post lock takeover.\n */\nexport function isPostLockTakeover( state ) {\n\treturn state.postLock.isTakeover;\n}\n\n/**\n * Returns details about the post lock user.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} A user object.\n */\nexport function getPostLockUser( state ) {\n\treturn state.postLock.user;\n}\n\n/**\n * Returns the active post lock.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} The lock object.\n */\nexport function getActivePostLock( state ) {\n\treturn state.postLock.activePostLock;\n}\n\n/**\n * Returns whether or not the user has the unfiltered_html capability.\n *\n * @param {Object} state Editor state.\n *\n * @return {boolean} Whether the user can or can't post unfiltered HTML.\n */\nexport function canUserUseUnfilteredHTML( state ) {\n\treturn Boolean(\n\t\tgetCurrentPost( state )._links?.hasOwnProperty(\n\t\t\t'wp:action-unfiltered-html'\n\t\t)\n\t);\n}\n\n/**\n * Returns whether the pre-publish panel should be shown\n * or skipped when the user clicks the \"publish\" button.\n *\n * @return {boolean} Whether the pre-publish panel should be shown or not.\n */\nexport const isPublishSidebarEnabled = createRegistrySelector(\n\t( select ) => () =>\n\t\t!! select( preferencesStore ).get(\n\t\t\t'core/edit-post',\n\t\t\t'isPublishSidebarEnabled'\n\t\t)\n);\n\n/**\n * Return the current block list.\n *\n * @param {Object} state\n * @return {Array} Block list.\n */\nexport const getEditorBlocks = createSelector(\n\t( state ) => {\n\t\treturn (\n\t\t\tgetEditedPostAttribute( state, 'blocks' ) ||\n\t\t\tparse( getEditedPostContent( state ) )\n\t\t);\n\t},\n\t( state ) => [\n\t\tgetEditedPostAttribute( state, 'blocks' ),\n\t\tgetEditedPostContent( state ),\n\t]\n);\n\n/**\n * Returns true if the given panel was programmatically removed, or false otherwise.\n * All panels are not removed by default.\n *\n * @param {Object} state     Global application state.\n * @param {string} panelName A string that identifies the panel.\n *\n * @return {boolean} Whether or not the panel is removed.\n */\nexport function isEditorPanelRemoved( state, panelName ) {\n\treturn state.removedPanels.includes( panelName );\n}\n\n/**\n * Returns true if the given panel is enabled, or false otherwise. Panels are\n * enabled by default.\n *\n * @param {Object} state     Global application state.\n * @param {string} panelName A string that identifies the panel.\n *\n * @return {boolean} Whether or not the panel is enabled.\n */\nexport const isEditorPanelEnabled = createRegistrySelector(\n\t( select ) => ( state, panelName ) => {\n\t\t// For backward compatibility, we check edit-post\n\t\t// even though now this is in \"editor\" package.\n\t\tconst inactivePanels = select( preferencesStore ).get(\n\t\t\t'core',\n\t\t\t'inactivePanels'\n\t\t);\n\t\treturn (\n\t\t\t! isEditorPanelRemoved( state, panelName ) &&\n\t\t\t! inactivePanels?.includes( panelName )\n\t\t);\n\t}\n);\n\n/**\n * Returns true if the given panel is open, or false otherwise. Panels are\n * closed by default.\n *\n * @param {Object} state     Global application state.\n * @param {string} panelName A string that identifies the panel.\n *\n * @return {boolean} Whether or not the panel is open.\n */\nexport const isEditorPanelOpened = createRegistrySelector(\n\t( select ) => ( state, panelName ) => {\n\t\t// For backward compatibility, we check edit-post\n\t\t// even though now this is in \"editor\" package.\n\t\tconst openPanels = select( preferencesStore ).get(\n\t\t\t'core',\n\t\t\t'openPanels'\n\t\t);\n\t\treturn !! openPanels?.includes( panelName );\n\t}\n);\n\n/**\n * A block selection object.\n *\n * @typedef {Object} WPBlockSelection\n *\n * @property {string} clientId     A block client ID.\n * @property {string} attributeKey A block attribute key.\n * @property {number} offset       An attribute value offset, based on the rich\n *                                 text value. See `wp.richText.create`.\n */\n\n/**\n * Returns the current selection start.\n *\n * @param {Object} state\n * @return {WPBlockSelection} The selection start.\n *\n * @deprecated since Gutenberg 10.0.0.\n */\nexport function getEditorSelectionStart( state ) {\n\tdeprecated( \"select('core/editor').getEditorSelectionStart\", {\n\t\tsince: '5.8',\n\t\talternative: \"select('core/editor').getEditorSelection\",\n\t} );\n\treturn getEditedPostAttribute( state, 'selection' )?.selectionStart;\n}\n\n/**\n * Returns the current selection end.\n *\n * @param {Object} state\n * @return {WPBlockSelection} The selection end.\n *\n * @deprecated since Gutenberg 10.0.0.\n */\nexport function getEditorSelectionEnd( state ) {\n\tdeprecated( \"select('core/editor').getEditorSelectionStart\", {\n\t\tsince: '5.8',\n\t\talternative: \"select('core/editor').getEditorSelection\",\n\t} );\n\treturn getEditedPostAttribute( state, 'selection' )?.selectionEnd;\n}\n\n/**\n * Returns the current selection.\n *\n * @param {Object} state\n * @return {WPBlockSelection} The selection end.\n */\nexport function getEditorSelection( state ) {\n\treturn getEditedPostAttribute( state, 'selection' );\n}\n\n/**\n * Is the editor ready\n *\n * @param {Object} state\n * @return {boolean} is Ready.\n */\nexport function __unstableIsEditorReady( state ) {\n\treturn !! state.postId;\n}\n\n/**\n * Returns the post editor settings.\n *\n * @param {Object} state Editor state.\n *\n * @return {Object} The editor settings object.\n */\nexport function getEditorSettings( state ) {\n\treturn state.editorSettings;\n}\n\n/**\n * Returns the post editor's rendering mode.\n *\n * @param {Object} state Editor state.\n *\n * @return {string} Rendering mode.\n */\nexport function getRenderingMode( state ) {\n\treturn state.renderingMode;\n}\n\n/**\n * Returns the current editing canvas device type.\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Device type.\n */\nexport function getDeviceType( state ) {\n\treturn state.deviceType;\n}\n\n/**\n * Returns true if the list view is opened.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the list view is opened.\n */\nexport function isListViewOpened( state ) {\n\treturn state.listViewPanel;\n}\n\n/**\n * Returns true if the inserter is opened.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the inserter is opened.\n */\nexport function isInserterOpened( state ) {\n\treturn !! state.blockInserterPanel;\n}\n\n/**\n * Returns the current editing mode.\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Editing mode.\n */\nexport const getEditorMode = createRegistrySelector(\n\t( select ) => () =>\n\t\tselect( preferencesStore ).get( 'core', 'editorMode' ) ?? 'visual'\n);\n\n/*\n * Backward compatibility\n */\n\n/**\n * Returns state object prior to a specified optimist transaction ID, or `null`\n * if the transaction corresponding to the given ID cannot be found.\n *\n * @deprecated since Gutenberg 9.7.0.\n */\nexport function getStateBeforeOptimisticTransaction() {\n\tdeprecated( \"select('core/editor').getStateBeforeOptimisticTransaction\", {\n\t\tsince: '5.7',\n\t\thint: 'No state history is kept on this store anymore',\n\t} );\n\n\treturn null;\n}\n/**\n * Returns true if an optimistic transaction is pending commit, for which the\n * before state satisfies the given predicate function.\n *\n * @deprecated since Gutenberg 9.7.0.\n */\nexport function inSomeHistory() {\n\tdeprecated( \"select('core/editor').inSomeHistory\", {\n\t\tsince: '5.7',\n\t\thint: 'No state history is kept on this store anymore',\n\t} );\n\treturn false;\n}\n\nfunction getBlockEditorSelector( name ) {\n\treturn createRegistrySelector( ( select ) => ( state, ...args ) => {\n\t\tdeprecated( \"`wp.data.select( 'core/editor' ).\" + name + '`', {\n\t\t\tsince: '5.3',\n\t\t\talternative: \"`wp.data.select( 'core/block-editor' ).\" + name + '`',\n\t\t\tversion: '6.2',\n\t\t} );\n\n\t\treturn select( blockEditorStore )[ name ]( ...args );\n\t} );\n}\n\n/**\n * @see getBlockName in core/block-editor store.\n */\nexport const getBlockName = getBlockEditorSelector( 'getBlockName' );\n\n/**\n * @see isBlockValid in core/block-editor store.\n */\nexport const isBlockValid = getBlockEditorSelector( 'isBlockValid' );\n\n/**\n * @see getBlockAttributes in core/block-editor store.\n */\nexport const getBlockAttributes =\n\tgetBlockEditorSelector( 'getBlockAttributes' );\n\n/**\n * @see getBlock in core/block-editor store.\n */\nexport const getBlock = getBlockEditorSelector( 'getBlock' );\n\n/**\n * @see getBlocks in core/block-editor store.\n */\nexport const getBlocks = getBlockEditorSelector( 'getBlocks' );\n\n/**\n * @see getClientIdsOfDescendants in core/block-editor store.\n */\nexport const getClientIdsOfDescendants = getBlockEditorSelector(\n\t'getClientIdsOfDescendants'\n);\n\n/**\n * @see getClientIdsWithDescendants in core/block-editor store.\n */\nexport const getClientIdsWithDescendants = getBlockEditorSelector(\n\t'getClientIdsWithDescendants'\n);\n\n/**\n * @see getGlobalBlockCount in core/block-editor store.\n */\nexport const getGlobalBlockCount = getBlockEditorSelector(\n\t'getGlobalBlockCount'\n);\n\n/**\n * @see getBlocksByClientId in core/block-editor store.\n */\nexport const getBlocksByClientId = getBlockEditorSelector(\n\t'getBlocksByClientId'\n);\n\n/**\n * @see getBlockCount in core/block-editor store.\n */\nexport const getBlockCount = getBlockEditorSelector( 'getBlockCount' );\n\n/**\n * @see getBlockSelectionStart in core/block-editor store.\n */\nexport const getBlockSelectionStart = getBlockEditorSelector(\n\t'getBlockSelectionStart'\n);\n\n/**\n * @see getBlockSelectionEnd in core/block-editor store.\n */\nexport const getBlockSelectionEnd = getBlockEditorSelector(\n\t'getBlockSelectionEnd'\n);\n\n/**\n * @see getSelectedBlockCount in core/block-editor store.\n */\nexport const getSelectedBlockCount = getBlockEditorSelector(\n\t'getSelectedBlockCount'\n);\n\n/**\n * @see hasSelectedBlock in core/block-editor store.\n */\nexport const hasSelectedBlock = getBlockEditorSelector( 'hasSelectedBlock' );\n\n/**\n * @see getSelectedBlockClientId in core/block-editor store.\n */\nexport const getSelectedBlockClientId = getBlockEditorSelector(\n\t'getSelectedBlockClientId'\n);\n\n/**\n * @see getSelectedBlock in core/block-editor store.\n */\nexport const getSelectedBlock = getBlockEditorSelector( 'getSelectedBlock' );\n\n/**\n * @see getBlockRootClientId in core/block-editor store.\n */\nexport const getBlockRootClientId = getBlockEditorSelector(\n\t'getBlockRootClientId'\n);\n\n/**\n * @see getBlockHierarchyRootClientId in core/block-editor store.\n */\nexport const getBlockHierarchyRootClientId = getBlockEditorSelector(\n\t'getBlockHierarchyRootClientId'\n);\n\n/**\n * @see getAdjacentBlockClientId in core/block-editor store.\n */\nexport const getAdjacentBlockClientId = getBlockEditorSelector(\n\t'getAdjacentBlockClientId'\n);\n\n/**\n * @see getPreviousBlockClientId in core/block-editor store.\n */\nexport const getPreviousBlockClientId = getBlockEditorSelector(\n\t'getPreviousBlockClientId'\n);\n\n/**\n * @see getNextBlockClientId in core/block-editor store.\n */\nexport const getNextBlockClientId = getBlockEditorSelector(\n\t'getNextBlockClientId'\n);\n\n/**\n * @see getSelectedBlocksInitialCaretPosition in core/block-editor store.\n */\nexport const getSelectedBlocksInitialCaretPosition = getBlockEditorSelector(\n\t'getSelectedBlocksInitialCaretPosition'\n);\n\n/**\n * @see getMultiSelectedBlockClientIds in core/block-editor store.\n */\nexport const getMultiSelectedBlockClientIds = getBlockEditorSelector(\n\t'getMultiSelectedBlockClientIds'\n);\n\n/**\n * @see getMultiSelectedBlocks in core/block-editor store.\n */\nexport const getMultiSelectedBlocks = getBlockEditorSelector(\n\t'getMultiSelectedBlocks'\n);\n\n/**\n * @see getFirstMultiSelectedBlockClientId in core/block-editor store.\n */\nexport const getFirstMultiSelectedBlockClientId = getBlockEditorSelector(\n\t'getFirstMultiSelectedBlockClientId'\n);\n\n/**\n * @see getLastMultiSelectedBlockClientId in core/block-editor store.\n */\nexport const getLastMultiSelectedBlockClientId = getBlockEditorSelector(\n\t'getLastMultiSelectedBlockClientId'\n);\n\n/**\n * @see isFirstMultiSelectedBlock in core/block-editor store.\n */\nexport const isFirstMultiSelectedBlock = getBlockEditorSelector(\n\t'isFirstMultiSelectedBlock'\n);\n\n/**\n * @see isBlockMultiSelected in core/block-editor store.\n */\nexport const isBlockMultiSelected = getBlockEditorSelector(\n\t'isBlockMultiSelected'\n);\n\n/**\n * @see isAncestorMultiSelected in core/block-editor store.\n */\nexport const isAncestorMultiSelected = getBlockEditorSelector(\n\t'isAncestorMultiSelected'\n);\n\n/**\n * @see getMultiSelectedBlocksStartClientId in core/block-editor store.\n */\nexport const getMultiSelectedBlocksStartClientId = getBlockEditorSelector(\n\t'getMultiSelectedBlocksStartClientId'\n);\n\n/**\n * @see getMultiSelectedBlocksEndClientId in core/block-editor store.\n */\nexport const getMultiSelectedBlocksEndClientId = getBlockEditorSelector(\n\t'getMultiSelectedBlocksEndClientId'\n);\n\n/**\n * @see getBlockOrder in core/block-editor store.\n */\nexport const getBlockOrder = getBlockEditorSelector( 'getBlockOrder' );\n\n/**\n * @see getBlockIndex in core/block-editor store.\n */\nexport const getBlockIndex = getBlockEditorSelector( 'getBlockIndex' );\n\n/**\n * @see isBlockSelected in core/block-editor store.\n */\nexport const isBlockSelected = getBlockEditorSelector( 'isBlockSelected' );\n\n/**\n * @see hasSelectedInnerBlock in core/block-editor store.\n */\nexport const hasSelectedInnerBlock = getBlockEditorSelector(\n\t'hasSelectedInnerBlock'\n);\n\n/**\n * @see isBlockWithinSelection in core/block-editor store.\n */\nexport const isBlockWithinSelection = getBlockEditorSelector(\n\t'isBlockWithinSelection'\n);\n\n/**\n * @see hasMultiSelection in core/block-editor store.\n */\nexport const hasMultiSelection = getBlockEditorSelector( 'hasMultiSelection' );\n\n/**\n * @see isMultiSelecting in core/block-editor store.\n */\nexport const isMultiSelecting = getBlockEditorSelector( 'isMultiSelecting' );\n\n/**\n * @see isSelectionEnabled in core/block-editor store.\n */\nexport const isSelectionEnabled =\n\tgetBlockEditorSelector( 'isSelectionEnabled' );\n\n/**\n * @see getBlockMode in core/block-editor store.\n */\nexport const getBlockMode = getBlockEditorSelector( 'getBlockMode' );\n\n/**\n * @see isTyping in core/block-editor store.\n */\nexport const isTyping = getBlockEditorSelector( 'isTyping' );\n\n/**\n * @see isCaretWithinFormattedText in core/block-editor store.\n */\nexport const isCaretWithinFormattedText = getBlockEditorSelector(\n\t'isCaretWithinFormattedText'\n);\n\n/**\n * @see getBlockInsertionPoint in core/block-editor store.\n */\nexport const getBlockInsertionPoint = getBlockEditorSelector(\n\t'getBlockInsertionPoint'\n);\n\n/**\n * @see isBlockInsertionPointVisible in core/block-editor store.\n */\nexport const isBlockInsertionPointVisible = getBlockEditorSelector(\n\t'isBlockInsertionPointVisible'\n);\n\n/**\n * @see isValidTemplate in core/block-editor store.\n */\nexport const isValidTemplate = getBlockEditorSelector( 'isValidTemplate' );\n\n/**\n * @see getTemplate in core/block-editor store.\n */\nexport const getTemplate = getBlockEditorSelector( 'getTemplate' );\n\n/**\n * @see getTemplateLock in core/block-editor store.\n */\nexport const getTemplateLock = getBlockEditorSelector( 'getTemplateLock' );\n\n/**\n * @see canInsertBlockType in core/block-editor store.\n */\nexport const canInsertBlockType =\n\tgetBlockEditorSelector( 'canInsertBlockType' );\n\n/**\n * @see getInserterItems in core/block-editor store.\n */\nexport const getInserterItems = getBlockEditorSelector( 'getInserterItems' );\n\n/**\n * @see hasInserterItems in core/block-editor store.\n */\nexport const hasInserterItems = getBlockEditorSelector( 'hasInserterItems' );\n\n/**\n * @see getBlockListSettings in core/block-editor store.\n */\nexport const getBlockListSettings = getBlockEditorSelector(\n\t'getBlockListSettings'\n);\n\n/**\n * Returns the default template types.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} The template types.\n */\nexport function __experimentalGetDefaultTemplateTypes( state ) {\n\treturn getEditorSettings( state )?.defaultTemplateTypes;\n}\n\n/**\n * Returns the default template part areas.\n *\n * @param {Object} state Global application state.\n *\n * @return {Array} The template part areas.\n */\nexport const __experimentalGetDefaultTemplatePartAreas = createSelector(\n\t( state ) => {\n\t\tconst areas =\n\t\t\tgetEditorSettings( state )?.defaultTemplatePartAreas || [];\n\t\treturn areas?.map( ( item ) => {\n\t\t\treturn { ...item, icon: getTemplatePartIcon( item.icon ) };\n\t\t} );\n\t},\n\t( state ) => [ getEditorSettings( state )?.defaultTemplatePartAreas ]\n);\n\n/**\n * Returns a default template type searched by slug.\n *\n * @param {Object} state Global application state.\n * @param {string} slug  The template type slug.\n *\n * @return {Object} The template type.\n */\nexport const __experimentalGetDefaultTemplateType = createSelector(\n\t( state, slug ) => {\n\t\tconst templateTypes = __experimentalGetDefaultTemplateTypes( state );\n\t\tif ( ! templateTypes ) {\n\t\t\treturn EMPTY_OBJECT;\n\t\t}\n\n\t\treturn (\n\t\t\tObject.values( templateTypes ).find(\n\t\t\t\t( type ) => type.slug === slug\n\t\t\t) ?? EMPTY_OBJECT\n\t\t);\n\t},\n\t( state, slug ) => [ __experimentalGetDefaultTemplateTypes( state ), slug ]\n);\n\n/**\n * Given a template entity, return information about it which is ready to be\n * rendered, such as the title, description, and icon.\n *\n * @param {Object} state    Global application state.\n * @param {Object} template The template for which we need information.\n * @return {Object} Information about the template, including title, description, and icon.\n */\nexport function __experimentalGetTemplateInfo( state, template ) {\n\tif ( ! template ) {\n\t\treturn EMPTY_OBJECT;\n\t}\n\n\tconst { description, slug, title, area } = template;\n\tconst { title: defaultTitle, description: defaultDescription } =\n\t\t__experimentalGetDefaultTemplateType( state, slug );\n\n\tconst templateTitle = typeof title === 'string' ? title : title?.rendered;\n\tconst templateDescription =\n\t\ttypeof description === 'string' ? description : description?.raw;\n\tconst templateIcon =\n\t\t__experimentalGetDefaultTemplatePartAreas( state ).find(\n\t\t\t( item ) => area === item.area\n\t\t)?.icon || layout;\n\n\treturn {\n\t\ttitle:\n\t\t\ttemplateTitle && templateTitle !== slug\n\t\t\t\t? templateTitle\n\t\t\t\t: defaultTitle || slug,\n\t\tdescription: templateDescription || defaultDescription,\n\t\ticon: templateIcon,\n\t};\n}\n\n/**\n * Returns a post type label depending on the current post.\n *\n * @param {Object} state Global application state.\n *\n * @return {string|undefined} The post type label if available, otherwise undefined.\n */\nexport const getPostTypeLabel = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst currentPostType = getCurrentPostType( state );\n\t\tconst postType = select( coreStore ).getPostType( currentPostType );\n\t\t// Disable reason: Post type labels object is shaped like this.\n\t\t// eslint-disable-next-line camelcase\n\t\treturn postType?.labels?.singular_name;\n\t}\n);\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"a11y\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"notices\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","/**\n * Function returning a sessionStorage key to set or retrieve a given post's\n * automatic session backup.\n *\n * Keys are crucially prefixed with 'wp-autosave-' so that wp-login.php's\n * `loggedout` handler can clear sessionStorage of any user-private content.\n *\n * @see https://github.com/WordPress/wordpress-develop/blob/6dad32d2aed47e6c0cf2aee8410645f6d7aba6bd/src/wp-login.php#L103\n *\n * @param {string}  postId    Post ID.\n * @param {boolean} isPostNew Whether post new.\n *\n * @return {string} sessionStorage key\n */\nfunction postKey( postId, isPostNew ) {\n\treturn `wp-autosave-block-editor-post-${\n\t\tisPostNew ? 'auto-draft' : postId\n\t}`;\n}\n\nexport function localAutosaveGet( postId, isPostNew ) {\n\treturn window.sessionStorage.getItem( postKey( postId, isPostNew ) );\n}\n\nexport function localAutosaveSet( postId, isPostNew, title, content, excerpt ) {\n\twindow.sessionStorage.setItem(\n\t\tpostKey( postId, isPostNew ),\n\t\tJSON.stringify( {\n\t\t\tpost_title: title,\n\t\t\tcontent,\n\t\t\texcerpt,\n\t\t} )\n\t);\n}\n\nexport function localAutosaveClear( postId, isPostNew ) {\n\twindow.sessionStorage.removeItem( postKey( postId, isPostNew ) );\n}\n","/**\n * WordPress dependencies\n */\nimport { speak } from '@wordpress/a11y';\nimport apiFetch from '@wordpress/api-fetch';\nimport deprecated from '@wordpress/deprecated';\nimport {\n\tparse,\n\tsynchronizeBlocksWithTemplate,\n\t__unstableSerializeAndClean,\n} from '@wordpress/blocks';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { applyFilters } from '@wordpress/hooks';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { TRASH_POST_NOTICE_ID } from './constants';\nimport { localAutosaveSet } from './local-autosave';\nimport {\n\tgetNotificationArgumentsForSaveSuccess,\n\tgetNotificationArgumentsForSaveFail,\n\tgetNotificationArgumentsForTrashFail,\n} from './utils/notice-builder';\n\n/**\n * Returns an action generator used in signalling that editor has initialized with\n * the specified post object and editor settings.\n *\n * @param {Object} post     Post object.\n * @param {Object} edits    Initial edited attributes object.\n * @param {Array?} template Block Template.\n */\nexport const setupEditor =\n\t( post, edits, template ) =>\n\t( { dispatch } ) => {\n\t\tdispatch.setEditedPost( post.type, post.id );\n\t\t// Apply a template for new posts only, if exists.\n\t\tconst isNewPost = post.status === 'auto-draft';\n\t\tif ( isNewPost && template ) {\n\t\t\t// In order to ensure maximum of a single parse during setup, edits are\n\t\t\t// included as part of editor setup action. Assume edited content as\n\t\t\t// canonical if provided, falling back to post.\n\t\t\tlet content;\n\t\t\tif ( 'content' in edits ) {\n\t\t\t\tcontent = edits.content;\n\t\t\t} else {\n\t\t\t\tcontent = post.content.raw;\n\t\t\t}\n\t\t\tlet blocks = parse( content );\n\t\t\tblocks = synchronizeBlocksWithTemplate( blocks, template );\n\t\t\tdispatch.resetEditorBlocks( blocks, {\n\t\t\t\t__unstableShouldCreateUndoLevel: false,\n\t\t\t} );\n\t\t}\n\t\tif (\n\t\t\tedits &&\n\t\t\tObject.values( edits ).some(\n\t\t\t\t( [ key, edit ] ) =>\n\t\t\t\t\tedit !== ( post[ key ]?.raw ?? post[ key ] )\n\t\t\t)\n\t\t) {\n\t\t\tdispatch.editPost( edits );\n\t\t}\n\t};\n\n/**\n * Returns an action object signalling that the editor is being destroyed and\n * that any necessary state or side-effect cleanup should occur.\n *\n * @deprecated\n *\n * @return {Object} Action object.\n */\nexport function __experimentalTearDownEditor() {\n\tdeprecated(\n\t\t\"wp.data.dispatch( 'core/editor' ).__experimentalTearDownEditor\",\n\t\t{\n\t\t\tsince: '6.5',\n\t\t}\n\t);\n\treturn { type: 'DO_NOTHING' };\n}\n\n/**\n * Returns an action object used in signalling that the latest version of the\n * post has been received, either by initialization or save.\n *\n * @deprecated Since WordPress 6.0.\n */\nexport function resetPost() {\n\tdeprecated( \"wp.data.dispatch( 'core/editor' ).resetPost\", {\n\t\tsince: '6.0',\n\t\tversion: '6.3',\n\t\talternative: 'Initialize the editor with the setupEditorState action',\n\t} );\n\treturn { type: 'DO_NOTHING' };\n}\n\n/**\n * Returns an action object used in signalling that a patch of updates for the\n * latest version of the post have been received.\n *\n * @return {Object} Action object.\n * @deprecated since Gutenberg 9.7.0.\n */\nexport function updatePost() {\n\tdeprecated( \"wp.data.dispatch( 'core/editor' ).updatePost\", {\n\t\tsince: '5.7',\n\t\talternative: 'Use the core entities store instead',\n\t} );\n\treturn {\n\t\ttype: 'DO_NOTHING',\n\t};\n}\n\n/**\n * Setup the editor state.\n *\n * @deprecated\n *\n * @param {Object} post Post object.\n */\nexport function setupEditorState( post ) {\n\tdeprecated( \"wp.data.dispatch( 'core/editor' ).setupEditorState\", {\n\t\tsince: '6.5',\n\t\talternative: \"wp.data.dispatch( 'core/editor' ).setEditedPost\",\n\t} );\n\treturn setEditedPost( post.type, post.id );\n}\n\n/**\n * Returns an action that sets the current post Type and post ID.\n *\n * @param {string} postType Post Type.\n * @param {string} postId   Post ID.\n *\n * @return {Object} Action object.\n */\nexport function setEditedPost( postType, postId ) {\n\treturn {\n\t\ttype: 'SET_EDITED_POST',\n\t\tpostType,\n\t\tpostId,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that attributes of the post have\n * been edited.\n *\n * @param {Object} edits   Post attributes to edit.\n * @param {Object} options Options for the edit.\n */\nexport const editPost =\n\t( edits, options ) =>\n\t( { select, registry } ) => {\n\t\tconst { id, type } = select.getCurrentPost();\n\t\tregistry\n\t\t\t.dispatch( coreStore )\n\t\t\t.editEntityRecord( 'postType', type, id, edits, options );\n\t};\n\n/**\n * Action for saving the current post in the editor.\n *\n * @param {Object} options\n */\nexport const savePost =\n\t( options = {} ) =>\n\tasync ( { select, dispatch, registry } ) => {\n\t\tif ( ! select.isEditedPostSaveable() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst content = select.getEditedPostContent();\n\n\t\tif ( ! options.isAutosave ) {\n\t\t\tdispatch.editPost( { content }, { undoIgnore: true } );\n\t\t}\n\n\t\tconst previousRecord = select.getCurrentPost();\n\t\tconst edits = {\n\t\t\tid: previousRecord.id,\n\t\t\t...registry\n\t\t\t\t.select( coreStore )\n\t\t\t\t.getEntityRecordNonTransientEdits(\n\t\t\t\t\t'postType',\n\t\t\t\t\tpreviousRecord.type,\n\t\t\t\t\tpreviousRecord.id\n\t\t\t\t),\n\t\t\tcontent,\n\t\t};\n\t\tdispatch( { type: 'REQUEST_POST_UPDATE_START', options } );\n\t\tawait registry\n\t\t\t.dispatch( coreStore )\n\t\t\t.saveEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tpreviousRecord.type,\n\t\t\t\tedits,\n\t\t\t\toptions\n\t\t\t);\n\n\t\tlet error = registry\n\t\t\t.select( coreStore )\n\t\t\t.getLastEntitySaveError(\n\t\t\t\t'postType',\n\t\t\t\tpreviousRecord.type,\n\t\t\t\tpreviousRecord.id\n\t\t\t);\n\n\t\tif ( ! error ) {\n\t\t\tawait applyFilters(\n\t\t\t\t'editor.__unstableSavePost',\n\t\t\t\tPromise.resolve(),\n\t\t\t\toptions\n\t\t\t).catch( ( err ) => {\n\t\t\t\terror = err;\n\t\t\t} );\n\t\t}\n\t\tdispatch( { type: 'REQUEST_POST_UPDATE_FINISH', options } );\n\n\t\tif ( error ) {\n\t\t\tconst args = getNotificationArgumentsForSaveFail( {\n\t\t\t\tpost: previousRecord,\n\t\t\t\tedits,\n\t\t\t\terror,\n\t\t\t} );\n\t\t\tif ( args.length ) {\n\t\t\t\tregistry.dispatch( noticesStore ).createErrorNotice( ...args );\n\t\t\t}\n\t\t} else {\n\t\t\tconst updatedRecord = select.getCurrentPost();\n\t\t\tconst args = getNotificationArgumentsForSaveSuccess( {\n\t\t\t\tpreviousPost: previousRecord,\n\t\t\t\tpost: updatedRecord,\n\t\t\t\tpostType: await registry\n\t\t\t\t\t.resolveSelect( coreStore )\n\t\t\t\t\t.getPostType( updatedRecord.type ),\n\t\t\t\toptions,\n\t\t\t} );\n\t\t\tif ( args.length ) {\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t\t.createSuccessNotice( ...args );\n\t\t\t}\n\t\t\t// Make sure that any edits after saving create an undo level and are\n\t\t\t// considered for change detection.\n\t\t\tif ( ! options.isAutosave ) {\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( blockEditorStore )\n\t\t\t\t\t.__unstableMarkLastChangeAsPersistent();\n\t\t\t}\n\t\t}\n\t};\n\n/**\n * Action for refreshing the current post.\n *\n * @deprecated Since WordPress 6.0.\n */\nexport function refreshPost() {\n\tdeprecated( \"wp.data.dispatch( 'core/editor' ).refreshPost\", {\n\t\tsince: '6.0',\n\t\tversion: '6.3',\n\t\talternative: 'Use the core entities store instead',\n\t} );\n\treturn { type: 'DO_NOTHING' };\n}\n\n/**\n * Action for trashing the current post in the editor.\n */\nexport const trashPost =\n\t() =>\n\tasync ( { select, dispatch, registry } ) => {\n\t\tconst postTypeSlug = select.getCurrentPostType();\n\t\tconst postType = await registry\n\t\t\t.resolveSelect( coreStore )\n\t\t\t.getPostType( postTypeSlug );\n\t\tregistry.dispatch( noticesStore ).removeNotice( TRASH_POST_NOTICE_ID );\n\t\tconst { rest_base: restBase, rest_namespace: restNamespace = 'wp/v2' } =\n\t\t\tpostType;\n\t\tdispatch( { type: 'REQUEST_POST_DELETE_START' } );\n\t\ttry {\n\t\t\tconst post = select.getCurrentPost();\n\t\t\tawait apiFetch( {\n\t\t\t\tpath: `/${ restNamespace }/${ restBase }/${ post.id }`,\n\t\t\t\tmethod: 'DELETE',\n\t\t\t} );\n\n\t\t\tawait dispatch.savePost();\n\t\t} catch ( error ) {\n\t\t\tregistry\n\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t.createErrorNotice(\n\t\t\t\t\t...getNotificationArgumentsForTrashFail( { error } )\n\t\t\t\t);\n\t\t}\n\t\tdispatch( { type: 'REQUEST_POST_DELETE_FINISH' } );\n\t};\n\n/**\n * Action that autosaves the current post.  This\n * includes server-side autosaving (default) and client-side (a.k.a. local)\n * autosaving (e.g. on the Web, the post might be committed to Session\n * Storage).\n *\n * @param {Object?} options Extra flags to identify the autosave.\n */\nexport const autosave =\n\t( { local = false, ...options } = {} ) =>\n\tasync ( { select, dispatch } ) => {\n\t\tconst post = select.getCurrentPost();\n\n\t\t// Currently template autosaving is not supported.\n\t\tif ( post.type === 'wp_template' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( local ) {\n\t\t\tconst isPostNew = select.isEditedPostNew();\n\t\t\tconst title = select.getEditedPostAttribute( 'title' );\n\t\t\tconst content = select.getEditedPostAttribute( 'content' );\n\t\t\tconst excerpt = select.getEditedPostAttribute( 'excerpt' );\n\t\t\tlocalAutosaveSet( post.id, isPostNew, title, content, excerpt );\n\t\t} else {\n\t\t\tawait dispatch.savePost( { isAutosave: true, ...options } );\n\t\t}\n\t};\n\nexport const __unstableSaveForPreview =\n\t( { forceIsAutosaveable } = {} ) =>\n\tasync ( { select, dispatch } ) => {\n\t\tif (\n\t\t\t( forceIsAutosaveable || select.isEditedPostAutosaveable() ) &&\n\t\t\t! select.isPostLocked()\n\t\t) {\n\t\t\tconst isDraft = [ 'draft', 'auto-draft' ].includes(\n\t\t\t\tselect.getEditedPostAttribute( 'status' )\n\t\t\t);\n\t\t\tif ( isDraft ) {\n\t\t\t\tawait dispatch.savePost( { isPreview: true } );\n\t\t\t} else {\n\t\t\t\tawait dispatch.autosave( { isPreview: true } );\n\t\t\t}\n\t\t}\n\n\t\treturn select.getEditedPostPreviewLink();\n\t};\n\n/**\n * Action that restores last popped state in undo history.\n */\nexport const redo =\n\t() =>\n\t( { registry } ) => {\n\t\tregistry.dispatch( coreStore ).redo();\n\t};\n\n/**\n * Action that pops a record from undo history and undoes the edit.\n */\nexport const undo =\n\t() =>\n\t( { registry } ) => {\n\t\tregistry.dispatch( coreStore ).undo();\n\t};\n\n/**\n * Action that creates an undo history record.\n *\n * @deprecated Since WordPress 6.0\n */\nexport function createUndoLevel() {\n\tdeprecated( \"wp.data.dispatch( 'core/editor' ).createUndoLevel\", {\n\t\tsince: '6.0',\n\t\tversion: '6.3',\n\t\talternative: 'Use the core entities store instead',\n\t} );\n\treturn { type: 'DO_NOTHING' };\n}\n\n/**\n * Action that locks the editor.\n *\n * @param {Object} lock Details about the post lock status, user, and nonce.\n * @return {Object} Action object.\n */\nexport function updatePostLock( lock ) {\n\treturn {\n\t\ttype: 'UPDATE_POST_LOCK',\n\t\tlock,\n\t};\n}\n\n/**\n * Enable the publish sidebar.\n */\nexport const enablePublishSidebar =\n\t() =>\n\t( { registry } ) => {\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( 'core/edit-post', 'isPublishSidebarEnabled', true );\n\t};\n\n/**\n * Disables the publish sidebar.\n */\nexport const disablePublishSidebar =\n\t() =>\n\t( { registry } ) => {\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( 'core/edit-post', 'isPublishSidebarEnabled', false );\n\t};\n\n/**\n * Action that locks post saving.\n *\n * @param {string} lockName The lock name.\n *\n * @example\n * ```\n * const { subscribe } = wp.data;\n *\n * const initialPostStatus = wp.data.select( 'core/editor' ).getEditedPostAttribute( 'status' );\n *\n * // Only allow publishing posts that are set to a future date.\n * if ( 'publish' !== initialPostStatus ) {\n *\n * \t// Track locking.\n * \tlet locked = false;\n *\n * \t// Watch for the publish event.\n * \tlet unssubscribe = subscribe( () => {\n * \t\tconst currentPostStatus = wp.data.select( 'core/editor' ).getEditedPostAttribute( 'status' );\n * \t\tif ( 'publish' !== currentPostStatus ) {\n *\n * \t\t\t// Compare the post date to the current date, lock the post if the date isn't in the future.\n * \t\t\tconst postDate = new Date( wp.data.select( 'core/editor' ).getEditedPostAttribute( 'date' ) );\n * \t\t\tconst currentDate = new Date();\n * \t\t\tif ( postDate.getTime() <= currentDate.getTime() ) {\n * \t\t\t\tif ( ! locked ) {\n * \t\t\t\t\tlocked = true;\n * \t\t\t\t\twp.data.dispatch( 'core/editor' ).lockPostSaving( 'futurelock' );\n * \t\t\t\t}\n * \t\t\t} else {\n * \t\t\t\tif ( locked ) {\n * \t\t\t\t\tlocked = false;\n * \t\t\t\t\twp.data.dispatch( 'core/editor' ).unlockPostSaving( 'futurelock' );\n * \t\t\t\t}\n * \t\t\t}\n * \t\t}\n * \t} );\n * }\n * ```\n *\n * @return {Object} Action object\n */\nexport function lockPostSaving( lockName ) {\n\treturn {\n\t\ttype: 'LOCK_POST_SAVING',\n\t\tlockName,\n\t};\n}\n\n/**\n * Action that unlocks post saving.\n *\n * @param {string} lockName The lock name.\n *\n * @example\n * ```\n * // Unlock post saving with the lock key `mylock`:\n * wp.data.dispatch( 'core/editor' ).unlockPostSaving( 'mylock' );\n * ```\n *\n * @return {Object} Action object\n */\nexport function unlockPostSaving( lockName ) {\n\treturn {\n\t\ttype: 'UNLOCK_POST_SAVING',\n\t\tlockName,\n\t};\n}\n\n/**\n * Action that locks post autosaving.\n *\n * @param {string} lockName The lock name.\n *\n * @example\n * ```\n * // Lock post autosaving with the lock key `mylock`:\n * wp.data.dispatch( 'core/editor' ).lockPostAutosaving( 'mylock' );\n * ```\n *\n * @return {Object} Action object\n */\nexport function lockPostAutosaving( lockName ) {\n\treturn {\n\t\ttype: 'LOCK_POST_AUTOSAVING',\n\t\tlockName,\n\t};\n}\n\n/**\n * Action that unlocks post autosaving.\n *\n * @param {string} lockName The lock name.\n *\n * @example\n * ```\n * // Unlock post saving with the lock key `mylock`:\n * wp.data.dispatch( 'core/editor' ).unlockPostAutosaving( 'mylock' );\n * ```\n *\n * @return {Object} Action object\n */\nexport function unlockPostAutosaving( lockName ) {\n\treturn {\n\t\ttype: 'UNLOCK_POST_AUTOSAVING',\n\t\tlockName,\n\t};\n}\n\n/**\n * Returns an action object used to signal that the blocks have been updated.\n *\n * @param {Array}   blocks  Block Array.\n * @param {?Object} options Optional options.\n */\nexport const resetEditorBlocks =\n\t( blocks, options = {} ) =>\n\t( { select, dispatch, registry } ) => {\n\t\tconst { __unstableShouldCreateUndoLevel, selection } = options;\n\t\tconst edits = { blocks, selection };\n\n\t\tif ( __unstableShouldCreateUndoLevel !== false ) {\n\t\t\tconst { id, type } = select.getCurrentPost();\n\t\t\tconst noChange =\n\t\t\t\tregistry\n\t\t\t\t\t.select( coreStore )\n\t\t\t\t\t.getEditedEntityRecord( 'postType', type, id ).blocks ===\n\t\t\t\tedits.blocks;\n\t\t\tif ( noChange ) {\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( coreStore )\n\t\t\t\t\t.__unstableCreateUndoLevel( 'postType', type, id );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// We create a new function here on every persistent edit\n\t\t\t// to make sure the edit makes the post dirty and creates\n\t\t\t// a new undo level.\n\t\t\tedits.content = ( { blocks: blocksForSerialization = [] } ) =>\n\t\t\t\t__unstableSerializeAndClean( blocksForSerialization );\n\t\t}\n\n\t\tdispatch.editPost( edits );\n\t};\n\n/*\n * Returns an action object used in signalling that the post editor settings have been updated.\n *\n * @param {Object} settings Updated settings\n *\n * @return {Object} Action object\n */\nexport function updateEditorSettings( settings ) {\n\treturn {\n\t\ttype: 'UPDATE_EDITOR_SETTINGS',\n\t\tsettings,\n\t};\n}\n\n/**\n * Returns an action used to set the rendering mode of the post editor. We support multiple rendering modes:\n *\n * -   `all`: This is the default mode. It renders the post editor with all the features available. If a template is provided, it's preferred over the post.\n * -   `post-only`: This mode extracts the post blocks from the template and renders only those. The idea is to allow the user to edit the post/page in isolation without the wrapping template.\n * -   `template-locked`: This mode renders both the template and the post blocks but the template blocks are locked and can't be edited. The post blocks are editable.\n *\n * @param {string} mode Mode (one of 'post-only' or 'template-locked').\n */\nexport const setRenderingMode =\n\t( mode ) =>\n\t( { dispatch, registry, select } ) => {\n\t\tif ( select.__unstableIsEditorReady() ) {\n\t\t\t// We clear the block selection but we also need to clear the selection from the core store.\n\t\t\tregistry.dispatch( blockEditorStore ).clearSelectedBlock();\n\t\t\tdispatch.editPost( { selection: undefined }, { undoIgnore: true } );\n\t\t}\n\n\t\tdispatch( {\n\t\t\ttype: 'SET_RENDERING_MODE',\n\t\t\tmode,\n\t\t} );\n\t};\n\n/**\n * Action that changes the width of the editing canvas.\n *\n * @param {string} deviceType\n *\n * @return {Object} Action object.\n */\nexport function setDeviceType( deviceType ) {\n\treturn {\n\t\ttype: 'SET_DEVICE_TYPE',\n\t\tdeviceType,\n\t};\n}\n\n/**\n * Returns an action object used to enable or disable a panel in the editor.\n *\n * @param {string} panelName A string that identifies the panel to enable or disable.\n *\n * @return {Object} Action object.\n */\nexport const toggleEditorPanelEnabled =\n\t( panelName ) =>\n\t( { registry } ) => {\n\t\tconst inactivePanels =\n\t\t\tregistry\n\t\t\t\t.select( preferencesStore )\n\t\t\t\t.get( 'core', 'inactivePanels' ) ?? [];\n\n\t\tconst isPanelInactive = !! inactivePanels?.includes( panelName );\n\n\t\t// If the panel is inactive, remove it to enable it, else add it to\n\t\t// make it inactive.\n\t\tlet updatedInactivePanels;\n\t\tif ( isPanelInactive ) {\n\t\t\tupdatedInactivePanels = inactivePanels.filter(\n\t\t\t\t( invactivePanelName ) => invactivePanelName !== panelName\n\t\t\t);\n\t\t} else {\n\t\t\tupdatedInactivePanels = [ ...inactivePanels, panelName ];\n\t\t}\n\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( 'core', 'inactivePanels', updatedInactivePanels );\n\t};\n\n/**\n * Opens a closed panel and closes an open panel.\n *\n * @param {string} panelName A string that identifies the panel to open or close.\n */\nexport const toggleEditorPanelOpened =\n\t( panelName ) =>\n\t( { registry } ) => {\n\t\tconst openPanels =\n\t\t\tregistry.select( preferencesStore ).get( 'core', 'openPanels' ) ??\n\t\t\t[];\n\n\t\tconst isPanelOpen = !! openPanels?.includes( panelName );\n\n\t\t// If the panel is open, remove it to close it, else add it to\n\t\t// make it open.\n\t\tlet updatedOpenPanels;\n\t\tif ( isPanelOpen ) {\n\t\t\tupdatedOpenPanels = openPanels.filter(\n\t\t\t\t( openPanelName ) => openPanelName !== panelName\n\t\t\t);\n\t\t} else {\n\t\t\tupdatedOpenPanels = [ ...openPanels, panelName ];\n\t\t}\n\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( 'core', 'openPanels', updatedOpenPanels );\n\t};\n\n/**\n * Returns an action object used to remove a panel from the editor.\n *\n * @param {string} panelName A string that identifies the panel to remove.\n *\n * @return {Object} Action object.\n */\nexport function removeEditorPanel( panelName ) {\n\treturn {\n\t\ttype: 'REMOVE_PANEL',\n\t\tpanelName,\n\t};\n}\n\n/**\n * Returns an action object used to open/close the inserter.\n *\n * @param {boolean|Object} value                Whether the inserter should be\n *                                              opened (true) or closed (false).\n *                                              To specify an insertion point,\n *                                              use an object.\n * @param {string}         value.rootClientId   The root client ID to insert at.\n * @param {number}         value.insertionIndex The index to insert at.\n *\n * @return {Object} Action object.\n */\nexport function setIsInserterOpened( value ) {\n\treturn {\n\t\ttype: 'SET_IS_INSERTER_OPENED',\n\t\tvalue,\n\t};\n}\n\n/**\n * Returns an action object used to open/close the list view.\n *\n * @param {boolean} isOpen A boolean representing whether the list view should be opened or closed.\n * @return {Object} Action object.\n */\nexport function setIsListViewOpened( isOpen ) {\n\treturn {\n\t\ttype: 'SET_IS_LIST_VIEW_OPENED',\n\t\tisOpen,\n\t};\n}\n\n/**\n * Action that toggles Distraction free mode.\n * Distraction free mode expects there are no sidebars, as due to the\n * z-index values set, you can't close sidebars.\n */\nexport const toggleDistractionFree =\n\t() =>\n\t( { dispatch, registry } ) => {\n\t\tconst isDistractionFree = registry\n\t\t\t.select( preferencesStore )\n\t\t\t.get( 'core', 'distractionFree' );\n\t\tif ( isDistractionFree ) {\n\t\t\tregistry\n\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t.set( 'core', 'fixedToolbar', false );\n\t\t}\n\t\tif ( ! isDistractionFree ) {\n\t\t\tregistry.batch( () => {\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t\t.set( 'core', 'fixedToolbar', true );\n\t\t\t\tdispatch.setIsInserterOpened( false );\n\t\t\t\tdispatch.setIsListViewOpened( false );\n\t\t\t} );\n\t\t}\n\t\tregistry.batch( () => {\n\t\t\tregistry\n\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t.set( 'core', 'distractionFree', ! isDistractionFree );\n\t\t\tregistry\n\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t.createInfoNotice(\n\t\t\t\t\tisDistractionFree\n\t\t\t\t\t\t? __( 'Distraction free off.' )\n\t\t\t\t\t\t: __( 'Distraction free on.' ),\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'core/editor/distraction-free-mode/notice',\n\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: __( 'Undo' ),\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tregistry.batch( () => {\n\t\t\t\t\t\t\t\t\t\tregistry\n\t\t\t\t\t\t\t\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t\t\t\t\t\t\t\t.set(\n\t\t\t\t\t\t\t\t\t\t\t\t'core',\n\t\t\t\t\t\t\t\t\t\t\t\t'fixedToolbar',\n\t\t\t\t\t\t\t\t\t\t\t\tisDistractionFree ? true : false\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tregistry\n\t\t\t\t\t\t\t\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t\t\t\t\t\t\t\t.toggle(\n\t\t\t\t\t\t\t\t\t\t\t\t'core',\n\t\t\t\t\t\t\t\t\t\t\t\t'distractionFree'\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t} );\n\t};\n\n/**\n * Triggers an action used to switch editor mode.\n *\n * @param {string} mode The editor mode.\n */\nexport const switchEditorMode =\n\t( mode ) =>\n\t( { dispatch, registry } ) => {\n\t\tregistry.dispatch( preferencesStore ).set( 'core', 'editorMode', mode );\n\n\t\t// Unselect blocks when we switch to a non visual mode.\n\t\tif ( mode !== 'visual' ) {\n\t\t\tregistry.dispatch( blockEditorStore ).clearSelectedBlock();\n\t\t}\n\n\t\tif ( mode === 'visual' ) {\n\t\t\tspeak( __( 'Visual editor selected' ), 'assertive' );\n\t\t} else if ( mode === 'text' ) {\n\t\t\tconst isDistractionFree = registry\n\t\t\t\t.select( preferencesStore )\n\t\t\t\t.get( 'core', 'distractionFree' );\n\t\t\tif ( isDistractionFree ) {\n\t\t\t\tdispatch.toggleDistractionFree();\n\t\t\t}\n\t\t\tspeak( __( 'Code editor selected' ), 'assertive' );\n\t\t}\n\t};\n\n/**\n * Backward compatibility\n */\n\nconst getBlockEditorAction =\n\t( name ) =>\n\t( ...args ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"`wp.data.dispatch( 'core/editor' ).\" + name + '`', {\n\t\t\tsince: '5.3',\n\t\t\talternative:\n\t\t\t\t\"`wp.data.dispatch( 'core/block-editor' ).\" + name + '`',\n\t\t\tversion: '6.2',\n\t\t} );\n\t\tregistry.dispatch( blockEditorStore )[ name ]( ...args );\n\t};\n\n/**\n * @see resetBlocks in core/block-editor store.\n */\nexport const resetBlocks = getBlockEditorAction( 'resetBlocks' );\n\n/**\n * @see receiveBlocks in core/block-editor store.\n */\nexport const receiveBlocks = getBlockEditorAction( 'receiveBlocks' );\n\n/**\n * @see updateBlock in core/block-editor store.\n */\nexport const updateBlock = getBlockEditorAction( 'updateBlock' );\n\n/**\n * @see updateBlockAttributes in core/block-editor store.\n */\nexport const updateBlockAttributes = getBlockEditorAction(\n\t'updateBlockAttributes'\n);\n\n/**\n * @see selectBlock in core/block-editor store.\n */\nexport const selectBlock = getBlockEditorAction( 'selectBlock' );\n\n/**\n * @see startMultiSelect in core/block-editor store.\n */\nexport const startMultiSelect = getBlockEditorAction( 'startMultiSelect' );\n\n/**\n * @see stopMultiSelect in core/block-editor store.\n */\nexport const stopMultiSelect = getBlockEditorAction( 'stopMultiSelect' );\n\n/**\n * @see multiSelect in core/block-editor store.\n */\nexport const multiSelect = getBlockEditorAction( 'multiSelect' );\n\n/**\n * @see clearSelectedBlock in core/block-editor store.\n */\nexport const clearSelectedBlock = getBlockEditorAction( 'clearSelectedBlock' );\n\n/**\n * @see toggleSelection in core/block-editor store.\n */\nexport const toggleSelection = getBlockEditorAction( 'toggleSelection' );\n\n/**\n * @see replaceBlocks in core/block-editor store.\n */\nexport const replaceBlocks = getBlockEditorAction( 'replaceBlocks' );\n\n/**\n * @see replaceBlock in core/block-editor store.\n */\nexport const replaceBlock = getBlockEditorAction( 'replaceBlock' );\n\n/**\n * @see moveBlocksDown in core/block-editor store.\n */\nexport const moveBlocksDown = getBlockEditorAction( 'moveBlocksDown' );\n\n/**\n * @see moveBlocksUp in core/block-editor store.\n */\nexport const moveBlocksUp = getBlockEditorAction( 'moveBlocksUp' );\n\n/**\n * @see moveBlockToPosition in core/block-editor store.\n */\nexport const moveBlockToPosition = getBlockEditorAction(\n\t'moveBlockToPosition'\n);\n\n/**\n * @see insertBlock in core/block-editor store.\n */\nexport const insertBlock = getBlockEditorAction( 'insertBlock' );\n\n/**\n * @see insertBlocks in core/block-editor store.\n */\nexport const insertBlocks = getBlockEditorAction( 'insertBlocks' );\n\n/**\n * @see showInsertionPoint in core/block-editor store.\n */\nexport const showInsertionPoint = getBlockEditorAction( 'showInsertionPoint' );\n\n/**\n * @see hideInsertionPoint in core/block-editor store.\n */\nexport const hideInsertionPoint = getBlockEditorAction( 'hideInsertionPoint' );\n\n/**\n * @see setTemplateValidity in core/block-editor store.\n */\nexport const setTemplateValidity = getBlockEditorAction(\n\t'setTemplateValidity'\n);\n\n/**\n * @see synchronizeTemplate in core/block-editor store.\n */\nexport const synchronizeTemplate = getBlockEditorAction(\n\t'synchronizeTemplate'\n);\n\n/**\n * @see mergeBlocks in core/block-editor store.\n */\nexport const mergeBlocks = getBlockEditorAction( 'mergeBlocks' );\n\n/**\n * @see removeBlocks in core/block-editor store.\n */\nexport const removeBlocks = getBlockEditorAction( 'removeBlocks' );\n\n/**\n * @see removeBlock in core/block-editor store.\n */\nexport const removeBlock = getBlockEditorAction( 'removeBlock' );\n\n/**\n * @see toggleBlockMode in core/block-editor store.\n */\nexport const toggleBlockMode = getBlockEditorAction( 'toggleBlockMode' );\n\n/**\n * @see startTyping in core/block-editor store.\n */\nexport const startTyping = getBlockEditorAction( 'startTyping' );\n\n/**\n * @see stopTyping in core/block-editor store.\n */\nexport const stopTyping = getBlockEditorAction( 'stopTyping' );\n\n/**\n * @see enterFormattedText in core/block-editor store.\n */\nexport const enterFormattedText = getBlockEditorAction( 'enterFormattedText' );\n\n/**\n * @see exitFormattedText in core/block-editor store.\n */\nexport const exitFormattedText = getBlockEditorAction( 'exitFormattedText' );\n\n/**\n * @see insertDefaultBlock in core/block-editor store.\n */\nexport const insertDefaultBlock = getBlockEditorAction( 'insertDefaultBlock' );\n\n/**\n * @see updateBlockListSettings in core/block-editor store.\n */\nexport const updateBlockListSettings = getBlockEditorAction(\n\t'updateBlockListSettings'\n);\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { SAVE_POST_NOTICE_ID, TRASH_POST_NOTICE_ID } from '../constants';\n\n/**\n * Builds the arguments for a success notification dispatch.\n *\n * @param {Object} data Incoming data to build the arguments from.\n *\n * @return {Array} Arguments for dispatch. An empty array signals no\n *                 notification should be sent.\n */\nexport function getNotificationArgumentsForSaveSuccess( data ) {\n\tconst { previousPost, post, postType } = data;\n\t// Autosaves are neither shown a notice nor redirected.\n\tif ( data.options?.isAutosave ) {\n\t\treturn [];\n\t}\n\n\tconst publishStatus = [ 'publish', 'private', 'future' ];\n\tconst isPublished = publishStatus.includes( previousPost.status );\n\tconst willPublish = publishStatus.includes( post.status );\n\tconst willTrash =\n\t\tpost.status === 'trash' && previousPost.status !== 'trash';\n\n\tlet noticeMessage;\n\tlet shouldShowLink = postType?.viewable ?? false;\n\tlet isDraft;\n\n\t// Always should a notice, which will be spoken for accessibility.\n\tif ( willTrash ) {\n\t\tnoticeMessage = postType.labels.item_trashed;\n\t\tshouldShowLink = false;\n\t} else if ( ! isPublished && ! willPublish ) {\n\t\t// If saving a non-published post, don't show notice.\n\t\tnoticeMessage = __( 'Draft saved.' );\n\t\tisDraft = true;\n\t} else if ( isPublished && ! willPublish ) {\n\t\t// If undoing publish status, show specific notice.\n\t\tnoticeMessage = postType.labels.item_reverted_to_draft;\n\t\tshouldShowLink = false;\n\t} else if ( ! isPublished && willPublish ) {\n\t\t// If publishing or scheduling a post, show the corresponding\n\t\t// publish message.\n\t\tnoticeMessage = {\n\t\t\tpublish: postType.labels.item_published,\n\t\t\tprivate: postType.labels.item_published_privately,\n\t\t\tfuture: postType.labels.item_scheduled,\n\t\t}[ post.status ];\n\t} else {\n\t\t// Generic fallback notice.\n\t\tnoticeMessage = postType.labels.item_updated;\n\t}\n\n\tconst actions = [];\n\tif ( shouldShowLink ) {\n\t\tactions.push( {\n\t\t\tlabel: isDraft ? __( 'View Preview' ) : postType.labels.view_item,\n\t\t\turl: post.link,\n\t\t} );\n\t}\n\treturn [\n\t\tnoticeMessage,\n\t\t{\n\t\t\tid: SAVE_POST_NOTICE_ID,\n\t\t\ttype: 'snackbar',\n\t\t\tactions,\n\t\t},\n\t];\n}\n\n/**\n * Builds the fail notification arguments for dispatch.\n *\n * @param {Object} data Incoming data to build the arguments with.\n *\n * @return {Array} Arguments for dispatch. An empty array signals no\n *                 notification should be sent.\n */\nexport function getNotificationArgumentsForSaveFail( data ) {\n\tconst { post, edits, error } = data;\n\tif ( error && 'rest_autosave_no_changes' === error.code ) {\n\t\t// Autosave requested a new autosave, but there were no changes. This shouldn't\n\t\t// result in an error notice for the user.\n\t\treturn [];\n\t}\n\n\tconst publishStatus = [ 'publish', 'private', 'future' ];\n\tconst isPublished = publishStatus.indexOf( post.status ) !== -1;\n\t// If the post was being published, we show the corresponding publish error message\n\t// Unless we publish an \"updating failed\" message.\n\tconst messages = {\n\t\tpublish: __( 'Publishing failed.' ),\n\t\tprivate: __( 'Publishing failed.' ),\n\t\tfuture: __( 'Scheduling failed.' ),\n\t};\n\tlet noticeMessage =\n\t\t! isPublished && publishStatus.indexOf( edits.status ) !== -1\n\t\t\t? messages[ edits.status ]\n\t\t\t: __( 'Updating failed.' );\n\n\t// Check if message string contains HTML. Notice text is currently only\n\t// supported as plaintext, and stripping the tags may muddle the meaning.\n\tif ( error.message && ! /<\\/?[^>]*>/.test( error.message ) ) {\n\t\tnoticeMessage = [ noticeMessage, error.message ].join( ' ' );\n\t}\n\treturn [\n\t\tnoticeMessage,\n\t\t{\n\t\t\tid: SAVE_POST_NOTICE_ID,\n\t\t},\n\t];\n}\n\n/**\n * Builds the trash fail notification arguments for dispatch.\n *\n * @param {Object} data\n *\n * @return {Array} Arguments for dispatch.\n */\nexport function getNotificationArgumentsForTrashFail( data ) {\n\treturn [\n\t\tdata.error.message && data.error.code !== 'unknown_error'\n\t\t\t? data.error.message\n\t\t\t: __( 'Trashing failed' ),\n\t\t{\n\t\t\tid: TRASH_POST_NOTICE_ID,\n\t\t},\n\t];\n}\n","/**\n * WordPress dependencies\n */\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __ } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Returns an action object used to set which template is currently being used/edited.\n *\n * @param {string} id Template Id.\n *\n * @return {Object} Action object.\n */\nexport function setCurrentTemplateId( id ) {\n\treturn {\n\t\ttype: 'SET_CURRENT_TEMPLATE_ID',\n\t\tid,\n\t};\n}\n\n/**\n * Create a block based template.\n *\n * @param {Object?} template Template to create and assign.\n */\nexport const createTemplate =\n\t( template ) =>\n\tasync ( { select, dispatch, registry } ) => {\n\t\tconst savedTemplate = await registry\n\t\t\t.dispatch( coreStore )\n\t\t\t.saveEntityRecord( 'postType', 'wp_template', template );\n\t\tregistry\n\t\t\t.dispatch( coreStore )\n\t\t\t.editEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tselect.getCurrentPostType(),\n\t\t\t\tselect.getCurrentPostId(),\n\t\t\t\t{\n\t\t\t\t\ttemplate: savedTemplate.slug,\n\t\t\t\t}\n\t\t\t);\n\t\tregistry\n\t\t\t.dispatch( noticesStore )\n\t\t\t.createSuccessNotice(\n\t\t\t\t__( \"Custom template created. You're in template mode now.\" ),\n\t\t\t\t{\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: __( 'Go back' ),\n\t\t\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\t\t\tdispatch.setRenderingMode(\n\t\t\t\t\t\t\t\t\tselect.getEditorSettings()\n\t\t\t\t\t\t\t\t\t\t.defaultRenderingMode\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}\n\t\t\t);\n\t\treturn savedTemplate;\n\t};\n\n/**\n * Update the provided block types to be visible.\n *\n * @param {string[]} blockNames Names of block types to show.\n */\nexport const showBlockTypes =\n\t( blockNames ) =>\n\t( { registry } ) => {\n\t\tconst existingBlockNames =\n\t\t\tregistry\n\t\t\t\t.select( preferencesStore )\n\t\t\t\t.get( 'core', 'hiddenBlockTypes' ) ?? [];\n\n\t\tconst newBlockNames = existingBlockNames.filter(\n\t\t\t( type ) =>\n\t\t\t\t! (\n\t\t\t\t\tArray.isArray( blockNames ) ? blockNames : [ blockNames ]\n\t\t\t\t).includes( type )\n\t\t);\n\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( 'core', 'hiddenBlockTypes', newBlockNames );\n\t};\n\n/**\n * Update the provided block types to be hidden.\n *\n * @param {string[]} blockNames Names of block types to hide.\n */\nexport const hideBlockTypes =\n\t( blockNames ) =>\n\t( { registry } ) => {\n\t\tconst existingBlockNames =\n\t\t\tregistry\n\t\t\t\t.select( preferencesStore )\n\t\t\t\t.get( 'core', 'hiddenBlockTypes' ) ?? [];\n\n\t\tconst mergedBlockNames = new Set( [\n\t\t\t...existingBlockNames,\n\t\t\t...( Array.isArray( blockNames ) ? blockNames : [ blockNames ] ),\n\t\t] );\n\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( 'core', 'hiddenBlockTypes', [ ...mergedBlockNames ] );\n\t};\n","/**\n * WordPress dependencies\n */\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { createRegistrySelector } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { getRenderingMode } from './selectors';\n\nconst EMPTY_INSERTION_POINT = {\n\trootClientId: undefined,\n\tinsertionIndex: undefined,\n\tfilterValue: undefined,\n};\n\n/**\n * Get the insertion point for the inserter.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} The root client ID, index to insert at and starting filter value.\n */\nexport const getInsertionPoint = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tif ( typeof state.blockInserterPanel === 'object' ) {\n\t\t\treturn state.blockInserterPanel;\n\t\t}\n\n\t\tif ( getRenderingMode( state ) === 'template-locked' ) {\n\t\t\tconst [ postContentClientId ] =\n\t\t\t\tselect( blockEditorStore ).getBlocksByName(\n\t\t\t\t\t'core/post-content'\n\t\t\t\t);\n\t\t\tif ( postContentClientId ) {\n\t\t\t\treturn {\n\t\t\t\t\trootClientId: postContentClientId,\n\t\t\t\t\tinsertionIndex: undefined,\n\t\t\t\t\tfilterValue: undefined,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn EMPTY_INSERTION_POINT;\n\t}\n);\n\nexport function getListViewToggleRef( state ) {\n\treturn state.listViewToggleRef;\n}\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as privateActions from './private-actions';\nimport * as privateSelectors from './private-selectors';\nimport { STORE_NAME } from './constants';\nimport { unlock } from '../lock-unlock';\n\n/**\n * Post editor data store configuration.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#registerStore\n *\n * @type {Object}\n */\nexport const storeConfig = {\n\treducer,\n\tselectors,\n\tactions,\n};\n\n/**\n * Store definition for the editor namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\t...storeConfig,\n} );\n\nregister( store );\nunlock( store ).registerPrivateActions( privateActions );\nunlock( store ).registerPrivateSelectors( privateSelectors );\n","/**\n * WordPress dependencies\n */\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../store';\n\nexport default {\n\tname: 'core/post-meta',\n\tlabel: _x( 'Post Meta', 'block bindings source' ),\n\tuseSource( props, sourceAttributes ) {\n\t\tconst { getCurrentPostType } = useSelect( editorStore );\n\t\tconst { context } = props;\n\t\tconst { key: metaKey } = sourceAttributes;\n\t\tconst postType = context.postType\n\t\t\t? context.postType\n\t\t\t: getCurrentPostType();\n\n\t\tconst [ meta, setMeta ] = useEntityProp(\n\t\t\t'postType',\n\t\t\tcontext.postType,\n\t\t\t'meta',\n\t\t\tcontext.postId\n\t\t);\n\n\t\tif ( postType === 'wp_template' ) {\n\t\t\treturn { placeholder: metaKey };\n\t\t}\n\t\tconst metaValue = meta[ metaKey ];\n\t\tconst updateMetaValue = ( newValue ) => {\n\t\t\tsetMeta( { ...meta, [ metaKey ]: newValue } );\n\t\t};\n\n\t\treturn {\n\t\t\tplaceholder: metaKey,\n\t\t\tvalue: metaValue,\n\t\t\tupdateValue: updateMetaValue,\n\t\t};\n\t},\n};\n","/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { dispatch } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { unlock } from '../lock-unlock';\nimport patternOverrides from './pattern-overrides';\nimport postMeta from './post-meta';\n\nconst { registerBlockBindingsSource } = unlock( dispatch( blocksStore ) );\nregisterBlockBindingsSource( postMeta );\n\nif ( process.env.IS_GUTENBERG_PLUGIN ) {\n\tregisterBlockBindingsSource( patternOverrides );\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/** @typedef {import('@wordpress/components').WPCompleter} WPCompleter */\n\nexport function getUserLabel( user ) {\n\tconst avatar =\n\t\tuser.avatar_urls && user.avatar_urls[ 24 ] ? (\n\t\t\t<img\n\t\t\t\tclassName=\"editor-autocompleters__user-avatar\"\n\t\t\t\talt=\"\"\n\t\t\t\tsrc={ user.avatar_urls[ 24 ] }\n\t\t\t/>\n\t\t) : (\n\t\t\t<span className=\"editor-autocompleters__no-avatar\"></span>\n\t\t);\n\n\treturn (\n\t\t<>\n\t\t\t{ avatar }\n\t\t\t<span className=\"editor-autocompleters__user-name\">\n\t\t\t\t{ user.name }\n\t\t\t</span>\n\t\t\t<span className=\"editor-autocompleters__user-slug\">\n\t\t\t\t{ user.slug }\n\t\t\t</span>\n\t\t</>\n\t);\n}\n\n/**\n * A user mentions completer.\n *\n * @type {WPCompleter}\n */\nexport default {\n\tname: 'users',\n\tclassName: 'editor-autocompleters__user',\n\ttriggerPrefix: '@',\n\n\tuseItems( filterValue ) {\n\t\tconst users = useSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst { getUsers } = select( coreStore );\n\t\t\t\treturn getUsers( {\n\t\t\t\t\tcontext: 'view',\n\t\t\t\t\tsearch: encodeURIComponent( filterValue ),\n\t\t\t\t} );\n\t\t\t},\n\t\t\t[ filterValue ]\n\t\t);\n\n\t\tconst options = useMemo(\n\t\t\t() =>\n\t\t\t\tusers\n\t\t\t\t\t? users.map( ( user ) => ( {\n\t\t\t\t\t\t\tkey: `user-${ user.slug }`,\n\t\t\t\t\t\t\tvalue: user,\n\t\t\t\t\t\t\tlabel: getUserLabel( user ),\n\t\t\t\t\t  } ) )\n\t\t\t\t\t: [],\n\t\t\t[ users ]\n\t\t);\n\n\t\treturn [ options ];\n\t},\n\n\tgetOptionCompletion( user ) {\n\t\treturn `@${ user.slug }`;\n\t},\n};\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { addFilter } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../store';\n\n/** @typedef {import('@wordpress/compose').WPHigherOrderComponent} WPHigherOrderComponent */\n/** @typedef {import('@wordpress/blocks').WPBlockSettings} WPBlockSettings */\n\n/**\n * Object whose keys are the names of block attributes, where each value\n * represents the meta key to which the block attribute is intended to save.\n *\n * @see https://developer.wordpress.org/reference/functions/register_meta/\n *\n * @typedef {Object<string,string>} WPMetaAttributeMapping\n */\n\n/**\n * Given a mapping of attribute names (meta source attributes) to their\n * associated meta key, returns a higher order component that overrides its\n * `attributes` and `setAttributes` props to sync any changes with the edited\n * post's meta keys.\n *\n * @param {WPMetaAttributeMapping} metaAttributes Meta attribute mapping.\n *\n * @return {WPHigherOrderComponent} Higher-order component.\n */\nconst createWithMetaAttributeSource = ( metaAttributes ) =>\n\tcreateHigherOrderComponent(\n\t\t( BlockEdit ) =>\n\t\t\t( { attributes, setAttributes, ...props } ) => {\n\t\t\t\tconst postType = useSelect(\n\t\t\t\t\t( select ) => select( editorStore ).getCurrentPostType(),\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t\tconst [ meta, setMeta ] = useEntityProp(\n\t\t\t\t\t'postType',\n\t\t\t\t\tpostType,\n\t\t\t\t\t'meta'\n\t\t\t\t);\n\n\t\t\t\tconst mergedAttributes = useMemo(\n\t\t\t\t\t() => ( {\n\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t...Object.fromEntries(\n\t\t\t\t\t\t\tObject.entries( metaAttributes ).map(\n\t\t\t\t\t\t\t\t( [ attributeKey, metaKey ] ) => [\n\t\t\t\t\t\t\t\t\tattributeKey,\n\t\t\t\t\t\t\t\t\tmeta[ metaKey ],\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t} ),\n\t\t\t\t\t[ attributes, meta ]\n\t\t\t\t);\n\n\t\t\t\treturn (\n\t\t\t\t\t<BlockEdit\n\t\t\t\t\t\tattributes={ mergedAttributes }\n\t\t\t\t\t\tsetAttributes={ ( nextAttributes ) => {\n\t\t\t\t\t\t\tconst nextMeta = Object.fromEntries(\n\t\t\t\t\t\t\t\tObject.entries( nextAttributes ?? {} )\n\t\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t\t// Filter to intersection of keys between the updated\n\t\t\t\t\t\t\t\t\t\t// attributes and those with an associated meta key.\n\t\t\t\t\t\t\t\t\t\t( [ key ] ) => key in metaAttributes\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.map( ( [ attributeKey, value ] ) => [\n\t\t\t\t\t\t\t\t\t\t// Rename the keys to the expected meta key name.\n\t\t\t\t\t\t\t\t\t\tmetaAttributes[ attributeKey ],\n\t\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\t] )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( Object.entries( nextMeta ).length ) {\n\t\t\t\t\t\t\t\tsetMeta( nextMeta );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsetAttributes( nextAttributes );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t},\n\t\t'withMetaAttributeSource'\n\t);\n\n/**\n * Filters a registered block's settings to enhance a block's `edit` component\n * to upgrade meta-sourced attributes to use the post's meta entity property.\n *\n * @param {WPBlockSettings} settings Registered block settings.\n *\n * @return {WPBlockSettings} Filtered block settings.\n */\nfunction shimAttributeSource( settings ) {\n\t/** @type {WPMetaAttributeMapping} */\n\tconst metaAttributes = Object.fromEntries(\n\t\tObject.entries( settings.attributes ?? {} )\n\t\t\t.filter( ( [ , { source } ] ) => source === 'meta' )\n\t\t\t.map( ( [ attributeKey, { meta } ] ) => [ attributeKey, meta ] )\n\t);\n\tif ( Object.entries( metaAttributes ).length ) {\n\t\tsettings.edit = createWithMetaAttributeSource( metaAttributes )(\n\t\t\tsettings.edit\n\t\t);\n\t}\n\n\treturn settings;\n}\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/editor/custom-sources-backwards-compatibility/shim-attribute-source',\n\tshimAttributeSource\n);\n","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport { userAutocompleter } from '../components';\n\nfunction setDefaultCompleters( completers = [] ) {\n\t// Provide copies so filters may directly modify them.\n\tcompleters.push( { ...userAutocompleter } );\n\n\treturn completers;\n}\n\naddFilter(\n\t'editor.Autocomplete.completers',\n\t'editor/autocompleters/set-default-completers',\n\tsetDefaultCompleters\n);\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"patterns\"];","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { privateApis as patternsPrivateApis } from '@wordpress/patterns';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { useBlockEditingMode } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../store';\nimport { unlock } from '../lock-unlock';\n\nconst {\n\tuseSetPatternBindings,\n\tResetOverridesControl,\n\tPATTERN_TYPES,\n\tPARTIAL_SYNCING_SUPPORTED_BLOCKS,\n} = unlock( patternsPrivateApis );\n\n/**\n * Override the default edit UI to include a new block inspector control for\n * assigning a partial syncing controls to supported blocks in the pattern editor.\n * Currently, only the `core/paragraph` block is supported.\n *\n * @param {Component} BlockEdit Original component.\n *\n * @return {Component} Wrapped component.\n */\nconst withPatternOverrideControls = createHigherOrderComponent(\n\t( BlockEdit ) => ( props ) => {\n\t\tconst isSupportedBlock = Object.keys(\n\t\t\tPARTIAL_SYNCING_SUPPORTED_BLOCKS\n\t\t).includes( props.name );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockEdit { ...props } />\n\t\t\t\t{ isSupportedBlock && <BindingUpdater { ...props } /> }\n\t\t\t\t{ props.isSelected && isSupportedBlock && (\n\t\t\t\t\t<ControlsWithStoreSubscription { ...props } />\n\t\t\t\t) }\n\t\t\t</>\n\t\t);\n\t}\n);\n\nfunction BindingUpdater( props ) {\n\tconst postType = useSelect(\n\t\t( select ) => select( editorStore ).getCurrentPostType(),\n\t\t[]\n\t);\n\tuseSetPatternBindings( props, postType );\n\treturn null;\n}\n\n// Split into a separate component to avoid a store subscription\n// on every block.\nfunction ControlsWithStoreSubscription( props ) {\n\tconst blockEditingMode = useBlockEditingMode();\n\tconst isEditingPattern = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getCurrentPostType() === PATTERN_TYPES.user,\n\t\t[]\n\t);\n\n\tconst bindings = props.attributes.metadata?.bindings;\n\tconst hasPatternBindings =\n\t\t!! bindings &&\n\t\tObject.values( bindings ).some(\n\t\t\t( binding ) => binding.source === 'core/pattern-overrides'\n\t\t);\n\n\tconst shouldShowResetOverridesControl =\n\t\t! isEditingPattern &&\n\t\t!! props.attributes.metadata?.name &&\n\t\tblockEditingMode !== 'disabled' &&\n\t\thasPatternBindings;\n\n\treturn (\n\t\t<>\n\t\t\t{ shouldShowResetOverridesControl && (\n\t\t\t\t<ResetOverridesControl { ...props } />\n\t\t\t) }\n\t\t</>\n\t);\n}\n\naddFilter(\n\t'editor.BlockEdit',\n\t'core/editor/with-pattern-override-controls',\n\twithPatternOverrideControls\n);\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keyboardShortcuts\"];","/**\n * WordPress dependencies\n */\nimport { useShortcut } from '@wordpress/keyboard-shortcuts';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function EditorKeyboardShortcuts() {\n\tconst isModeToggleDisabled = useSelect( ( select ) => {\n\t\tconst { richEditingEnabled, codeEditingEnabled } =\n\t\t\tselect( editorStore ).getEditorSettings();\n\t\treturn ! richEditingEnabled || ! codeEditingEnabled;\n\t}, [] );\n\tconst {\n\t\tredo,\n\t\tundo,\n\t\tsavePost,\n\t\tsetIsListViewOpened,\n\t\tswitchEditorMode,\n\t\ttoggleDistractionFree,\n\t} = useDispatch( editorStore );\n\tconst {\n\t\tisEditedPostDirty,\n\t\tisPostSavingLocked,\n\t\tisListViewOpened,\n\t\tgetEditorMode,\n\t} = useSelect( editorStore );\n\n\tuseShortcut(\n\t\t'core/editor/toggle-mode',\n\t\t() => {\n\t\t\tswitchEditorMode(\n\t\t\t\tgetEditorMode() === 'visual' ? 'text' : 'visual'\n\t\t\t);\n\t\t},\n\t\t{\n\t\t\tisDisabled: isModeToggleDisabled,\n\t\t}\n\t);\n\n\tuseShortcut( 'core/editor/toggle-distraction-free', () => {\n\t\ttoggleDistractionFree();\n\t} );\n\n\tuseShortcut( 'core/editor/undo', ( event ) => {\n\t\tundo();\n\t\tevent.preventDefault();\n\t} );\n\n\tuseShortcut( 'core/editor/redo', ( event ) => {\n\t\tredo();\n\t\tevent.preventDefault();\n\t} );\n\n\tuseShortcut( 'core/editor/save', ( event ) => {\n\t\tevent.preventDefault();\n\n\t\t/**\n\t\t * Do not save the post if post saving is locked.\n\t\t */\n\t\tif ( isPostSavingLocked() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: This should be handled in the `savePost` effect in\n\t\t// considering `isSaveable`. See note on `isEditedPostSaveable`\n\t\t// selector about dirtiness and meta-boxes.\n\t\t//\n\t\t// See: `isEditedPostSaveable`\n\t\tif ( ! isEditedPostDirty() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsavePost();\n\t} );\n\n\t// Only opens the list view. Other functionality for this shortcut happens in the rendered sidebar.\n\tuseShortcut( 'core/editor/toggle-list-view', ( event ) => {\n\t\tif ( ! isListViewOpened() ) {\n\t\t\tevent.preventDefault();\n\t\t\tsetIsListViewOpened( true );\n\t\t}\n\t} );\n\n\treturn null;\n}\n","/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * AutosaveMonitor invokes `props.autosave()` within at most `interval` seconds after an unsaved change is detected.\n *\n * The logic is straightforward: a check is performed every `props.interval` seconds. If any changes are detected, `props.autosave()` is called.\n * The time between the change and the autosave varies but is no larger than `props.interval` seconds. Refer to the code below for more details, such as\n * the specific way of detecting changes.\n *\n * There are two caveats:\n * * If `props.isAutosaveable` happens to be false at a time of checking for changes, the check is retried every second.\n * * The timer may be disabled by setting `props.disableIntervalChecks` to `true`. In that mode, any change will immediately trigger `props.autosave()`.\n */\nexport class AutosaveMonitor extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.needsAutosave = !! ( props.isDirty && props.isAutosaveable );\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( ! this.props.disableIntervalChecks ) {\n\t\t\tthis.setAutosaveTimer();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.disableIntervalChecks ) {\n\t\t\tif ( this.props.editsReference !== prevProps.editsReference ) {\n\t\t\t\tthis.props.autosave();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.interval !== prevProps.interval ) {\n\t\t\tclearTimeout( this.timerId );\n\t\t\tthis.setAutosaveTimer();\n\t\t}\n\n\t\tif ( ! this.props.isDirty ) {\n\t\t\tthis.needsAutosave = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.isAutosaving && ! prevProps.isAutosaving ) {\n\t\t\tthis.needsAutosave = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.editsReference !== prevProps.editsReference ) {\n\t\t\tthis.needsAutosave = true;\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout( this.timerId );\n\t}\n\n\tsetAutosaveTimer( timeout = this.props.interval * 1000 ) {\n\t\tthis.timerId = setTimeout( () => {\n\t\t\tthis.autosaveTimerHandler();\n\t\t}, timeout );\n\t}\n\n\tautosaveTimerHandler() {\n\t\tif ( ! this.props.isAutosaveable ) {\n\t\t\tthis.setAutosaveTimer( 1000 );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.needsAutosave ) {\n\t\t\tthis.needsAutosave = false;\n\t\t\tthis.props.autosave();\n\t\t}\n\n\t\tthis.setAutosaveTimer();\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, ownProps ) => {\n\t\tconst { getReferenceByDistinctEdits } = select( coreStore );\n\n\t\tconst {\n\t\t\tisEditedPostDirty,\n\t\t\tisEditedPostAutosaveable,\n\t\t\tisAutosavingPost,\n\t\t\tgetEditorSettings,\n\t\t} = select( editorStore );\n\n\t\tconst { interval = getEditorSettings().autosaveInterval } = ownProps;\n\n\t\treturn {\n\t\t\teditsReference: getReferenceByDistinctEdits(),\n\t\t\tisDirty: isEditedPostDirty(),\n\t\t\tisAutosaveable: isEditedPostAutosaveable(),\n\t\t\tisAutosaving: isAutosavingPost(),\n\t\t\tinterval,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => ( {\n\t\tautosave() {\n\t\t\tconst { autosave = dispatch( editorStore ).autosave } = ownProps;\n\t\t\tautosave();\n\t\t},\n\t} ) ),\n] )( AutosaveMonitor );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst symbol = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-1 1.4l-5.6 5.6c-.1.1-.3.1-.4 0l-5.6-5.6c-.1-.1-.1-.3 0-.4l5.6-5.6s.1-.1.2-.1.1 0 .2.1l5.6 5.6c.1.1.1.3 0 .4zm-16.6-.4L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\" />\n\t</SVG>\n);\n\nexport default symbol;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst navigation = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M12 4c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm0 14.5c-3.6 0-6.5-2.9-6.5-6.5S8.4 5.5 12 5.5s6.5 2.9 6.5 6.5-2.9 6.5-6.5 6.5zM9 16l4.5-3L15 8.4l-4.5 3L9 16z\" />\n\t</SVG>\n);\n\nexport default navigation;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst page = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M15.5 7.5h-7V9h7V7.5Zm-7 3.5h7v1.5h-7V11Zm7 3.5h-7V16h7v-1.5Z\" />\n\t\t<Path d=\"M17 4H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM7 5.5h10a.5.5 0 0 1 .5.5v12a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5V6a.5.5 0 0 1 .5-.5Z\" />\n\t</SVG>\n);\n\nexport default page;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst chevronRightSmall = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M10.8622 8.04053L14.2805 12.0286L10.8622 16.0167L9.72327 15.0405L12.3049 12.0286L9.72327 9.01672L10.8622 8.04053Z\" />\n\t</SVG>\n);\n\nexport default chevronRightSmall;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst chevronLeftSmall = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"m13.1 16-3.4-4 3.4-4 1.1 1-2.6 3 2.6 3-1.1 1z\" />\n\t</SVG>\n);\n\nexport default chevronLeftSmall;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keycodes\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"commands\"];","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, isRTL, sprintf } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tButton,\n\t__experimentalText as Text,\n\t__unstableMotion as motion,\n\t__unstableAnimatePresence as AnimatePresence,\n} from '@wordpress/components';\nimport { BlockIcon } from '@wordpress/block-editor';\nimport {\n\tchevronLeftSmall,\n\tchevronRightSmall,\n\tpage as pageIcon,\n\tnavigation as navigationIcon,\n\tsymbol,\n} from '@wordpress/icons';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as commandsStore } from '@wordpress/commands';\nimport { useRef, useEffect } from '@wordpress/element';\nimport { useReducedMotion } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nconst TYPE_LABELS = {\n\t// translators: 1: Pattern title.\n\twp_pattern: __( 'Editing pattern: %s' ),\n\t// translators: 1: Navigation menu title.\n\twp_navigation: __( 'Editing navigation menu: %s' ),\n\t// translators: 1: Template title.\n\twp_template: __( 'Editing template: %s' ),\n\t// translators: 1: Template part title.\n\twp_template_part: __( 'Editing template part: %s' ),\n};\n\nconst ICONS = {\n\twp_block: symbol,\n\twp_navigation: navigationIcon,\n};\n\nconst TEMPLATE_POST_TYPES = [ 'wp_template', 'wp_template_part' ];\n\nconst GLOBAL_POST_TYPES = [\n\t...TEMPLATE_POST_TYPES,\n\t'wp_block',\n\t'wp_navigation',\n];\n\nconst MotionButton = motion( Button );\n\nexport default function DocumentBar() {\n\tconst {\n\t\tpostType,\n\t\tdocument,\n\t\tisResolving,\n\t\ttemplateIcon,\n\t\ttemplateTitle,\n\t\tonNavigateToPreviousEntityRecord,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetCurrentPostType,\n\t\t\tgetCurrentPostId,\n\t\t\tgetEditorSettings,\n\t\t\t__experimentalGetTemplateInfo: getTemplateInfo,\n\t\t} = select( editorStore );\n\t\tconst { getEditedEntityRecord, isResolving: isResolvingSelector } =\n\t\t\tselect( coreStore );\n\t\tconst _postType = getCurrentPostType();\n\t\tconst _postId = getCurrentPostId();\n\t\tconst _document = getEditedEntityRecord(\n\t\t\t'postType',\n\t\t\t_postType,\n\t\t\t_postId\n\t\t);\n\t\tconst _templateInfo = getTemplateInfo( _document );\n\t\treturn {\n\t\t\tpostType: _postType,\n\t\t\tdocument: _document,\n\t\t\tisResolving: isResolvingSelector(\n\t\t\t\t'getEditedEntityRecord',\n\t\t\t\t'postType',\n\t\t\t\t_postType,\n\t\t\t\t_postId\n\t\t\t),\n\t\t\ttemplateIcon: _templateInfo.icon,\n\t\t\ttemplateTitle: _templateInfo.title,\n\t\t\tonNavigateToPreviousEntityRecord:\n\t\t\t\tgetEditorSettings().onNavigateToPreviousEntityRecord,\n\t\t};\n\t}, [] );\n\n\tconst { open: openCommandCenter } = useDispatch( commandsStore );\n\tconst isReducedMotion = useReducedMotion();\n\n\tconst isNotFound = ! document && ! isResolving;\n\tconst icon = ICONS[ postType ] ?? pageIcon;\n\tconst isTemplate = TEMPLATE_POST_TYPES.includes( postType );\n\tconst isGlobalEntity = GLOBAL_POST_TYPES.includes( postType );\n\tconst hasBackButton = !! onNavigateToPreviousEntityRecord;\n\tconst title = isTemplate ? templateTitle : document.title;\n\n\tconst mounted = useRef( false );\n\tuseEffect( () => {\n\t\tmounted.current = true;\n\t}, [] );\n\n\treturn (\n\t\t<div\n\t\t\tclassName={ classnames( 'editor-document-bar', {\n\t\t\t\t'has-back-button': hasBackButton,\n\t\t\t\t'is-global': isGlobalEntity,\n\t\t\t} ) }\n\t\t>\n\t\t\t<AnimatePresence>\n\t\t\t\t{ hasBackButton && (\n\t\t\t\t\t<MotionButton\n\t\t\t\t\t\tclassName=\"editor-document-bar__back\"\n\t\t\t\t\t\ticon={ isRTL() ? chevronRightSmall : chevronLeftSmall }\n\t\t\t\t\t\tonClick={ ( event ) => {\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\tonNavigateToPreviousEntityRecord();\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\tinitial={\n\t\t\t\t\t\t\tmounted.current\n\t\t\t\t\t\t\t\t? { opacity: 0, transform: 'translateX(15%)' }\n\t\t\t\t\t\t\t\t: false // Don't show entry animation when DocumentBar mounts.\n\t\t\t\t\t\t}\n\t\t\t\t\t\tanimate={ { opacity: 1, transform: 'translateX(0%)' } }\n\t\t\t\t\t\texit={ { opacity: 0, transform: 'translateX(15%)' } }\n\t\t\t\t\t\ttransition={\n\t\t\t\t\t\t\tisReducedMotion ? { duration: 0 } : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Back' ) }\n\t\t\t\t\t</MotionButton>\n\t\t\t\t) }\n\t\t\t</AnimatePresence>\n\t\t\t{ isNotFound ? (\n\t\t\t\t<Text>{ __( 'Document not found' ) }</Text>\n\t\t\t) : (\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"editor-document-bar__command\"\n\t\t\t\t\tonClick={ () => openCommandCenter() }\n\t\t\t\t\tsize=\"compact\"\n\t\t\t\t>\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tclassName=\"editor-document-bar__title\"\n\t\t\t\t\t\t// Force entry animation when the back button is added or removed.\n\t\t\t\t\t\tkey={ hasBackButton }\n\t\t\t\t\t\tinitial={\n\t\t\t\t\t\t\tmounted.current\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\t\t\t\ttransform: hasBackButton\n\t\t\t\t\t\t\t\t\t\t\t? 'translateX(15%)'\n\t\t\t\t\t\t\t\t\t\t\t: 'translateX(-15%)',\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: false // Don't show entry animation when DocumentBar mounts.\n\t\t\t\t\t\t}\n\t\t\t\t\t\tanimate={ {\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\ttransform: 'translateX(0%)',\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ttransition={\n\t\t\t\t\t\t\tisReducedMotion ? { duration: 0 } : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockIcon icon={ isTemplate ? templateIcon : icon } />\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tsize=\"body\"\n\t\t\t\t\t\t\tas=\"h1\"\n\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\tTYPE_LABELS[ postType ]\n\t\t\t\t\t\t\t\t\t? // eslint-disable-next-line @wordpress/valid-sprintf\n\t\t\t\t\t\t\t\t\t  sprintf( TYPE_LABELS[ postType ], title )\n\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ title }\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</motion.div>\n\t\t\t\t\t<span className=\"editor-document-bar__shortcut\">\n\t\t\t\t\t\t{ displayShortcut.primary( 'k' ) }\n\t\t\t\t\t</span>\n\t\t\t\t</Button>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"richText\"];","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\nconst TableOfContentsItem = ( {\n\tchildren,\n\tisValid,\n\tlevel,\n\thref,\n\tonSelect,\n} ) => (\n\t<li\n\t\tclassName={ classnames(\n\t\t\t'document-outline__item',\n\t\t\t`is-${ level.toLowerCase() }`,\n\t\t\t{\n\t\t\t\t'is-invalid': ! isValid,\n\t\t\t}\n\t\t) }\n\t>\n\t\t<a\n\t\t\thref={ href }\n\t\t\tclassName=\"document-outline__button\"\n\t\t\tonClick={ onSelect }\n\t\t>\n\t\t\t<span\n\t\t\t\tclassName=\"document-outline__emdash\"\n\t\t\t\taria-hidden=\"true\"\n\t\t\t></span>\n\t\t\t<strong className=\"document-outline__level\">{ level }</strong>\n\t\t\t<span className=\"document-outline__item-content\">{ children }</span>\n\t\t</a>\n\t</li>\n);\n\nexport default TableOfContentsItem;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { create, getTextContent } from '@wordpress/rich-text';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { Path, SVG, Line, Rect } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport DocumentOutlineItem from './item';\nimport { store as editorStore } from '../../store';\n\n/**\n * Module constants\n */\nconst emptyHeadingContent = <em>{ __( '(Empty heading)' ) }</em>;\nconst incorrectLevelContent = [\n\t<br key=\"incorrect-break\" />,\n\t<em key=\"incorrect-message\">{ __( '(Incorrect heading level)' ) }</em>,\n];\nconst singleH1Headings = [\n\t<br key=\"incorrect-break-h1\" />,\n\t<em key=\"incorrect-message-h1\">\n\t\t{ __( '(Your theme may already use a H1 for the post title)' ) }\n\t</em>,\n];\nconst multipleH1Headings = [\n\t<br key=\"incorrect-break-multiple-h1\" />,\n\t<em key=\"incorrect-message-multiple-h1\">\n\t\t{ __( '(Multiple H1 headings are not recommended)' ) }\n\t</em>,\n];\nfunction EmptyOutlineIllustration() {\n\treturn (\n\t\t<SVG\n\t\t\twidth=\"138\"\n\t\t\theight=\"148\"\n\t\t\tviewBox=\"0 0 138 148\"\n\t\t\tfill=\"none\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t>\n\t\t\t<Rect width=\"138\" height=\"148\" rx=\"4\" fill=\"#F0F6FC\" />\n\t\t\t<Line x1=\"44\" y1=\"28\" x2=\"24\" y2=\"28\" stroke=\"#DDDDDD\" />\n\t\t\t<Rect x=\"48\" y=\"16\" width=\"27\" height=\"23\" rx=\"4\" fill=\"#DDDDDD\" />\n\t\t\t<Path\n\t\t\t\td=\"M54.7585 32V23.2727H56.6037V26.8736H60.3494V23.2727H62.1903V32H60.3494V28.3949H56.6037V32H54.7585ZM67.4574 23.2727V32H65.6122V25.0241H65.5611L63.5625 26.277V24.6406L65.723 23.2727H67.4574Z\"\n\t\t\t\tfill=\"black\"\n\t\t\t/>\n\t\t\t<Line x1=\"55\" y1=\"59\" x2=\"24\" y2=\"59\" stroke=\"#DDDDDD\" />\n\t\t\t<Rect x=\"59\" y=\"47\" width=\"29\" height=\"23\" rx=\"4\" fill=\"#DDDDDD\" />\n\t\t\t<Path\n\t\t\t\td=\"M65.7585 63V54.2727H67.6037V57.8736H71.3494V54.2727H73.1903V63H71.3494V59.3949H67.6037V63H65.7585ZM74.6605 63V61.6705L77.767 58.794C78.0313 58.5384 78.2528 58.3082 78.4318 58.1037C78.6136 57.8991 78.7514 57.6989 78.8452 57.5028C78.9389 57.304 78.9858 57.0895 78.9858 56.8594C78.9858 56.6037 78.9276 56.3835 78.8111 56.1989C78.6946 56.0114 78.5355 55.8679 78.3338 55.7685C78.1321 55.6662 77.9034 55.6151 77.6477 55.6151C77.3807 55.6151 77.1477 55.669 76.9489 55.777C76.75 55.8849 76.5966 56.0398 76.4886 56.2415C76.3807 56.4432 76.3267 56.6832 76.3267 56.9616H74.5753C74.5753 56.3906 74.7045 55.8949 74.9631 55.4744C75.2216 55.054 75.5838 54.7287 76.0497 54.4986C76.5156 54.2685 77.0526 54.1534 77.6605 54.1534C78.2855 54.1534 78.8295 54.2642 79.2926 54.4858C79.7585 54.7045 80.1207 55.0085 80.3793 55.3977C80.6378 55.7869 80.767 56.233 80.767 56.7358C80.767 57.0653 80.7017 57.3906 80.571 57.7116C80.4432 58.0327 80.2145 58.3892 79.8849 58.7812C79.5554 59.1705 79.0909 59.6378 78.4915 60.1832L77.2173 61.4318V61.4915H80.8821V63H74.6605Z\"\n\t\t\t\tfill=\"black\"\n\t\t\t/>\n\t\t\t<Line x1=\"80\" y1=\"90\" x2=\"24\" y2=\"90\" stroke=\"#DDDDDD\" />\n\t\t\t<Rect x=\"84\" y=\"78\" width=\"30\" height=\"23\" rx=\"4\" fill=\"#F0B849\" />\n\t\t\t<Path\n\t\t\t\td=\"M90.7585 94V85.2727H92.6037V88.8736H96.3494V85.2727H98.1903V94H96.3494V90.3949H92.6037V94H90.7585ZM99.5284 92.4659V91.0128L103.172 85.2727H104.425V87.2841H103.683L101.386 90.919V90.9872H106.564V92.4659H99.5284ZM103.717 94V92.0227L103.751 91.3793V85.2727H105.482V94H103.717Z\"\n\t\t\t\tfill=\"black\"\n\t\t\t/>\n\t\t\t<Line x1=\"66\" y1=\"121\" x2=\"24\" y2=\"121\" stroke=\"#DDDDDD\" />\n\t\t\t<Rect x=\"70\" y=\"109\" width=\"29\" height=\"23\" rx=\"4\" fill=\"#DDDDDD\" />\n\t\t\t<Path\n\t\t\t\td=\"M76.7585 125V116.273H78.6037V119.874H82.3494V116.273H84.1903V125H82.3494V121.395H78.6037V125H76.7585ZM88.8864 125.119C88.25 125.119 87.6832 125.01 87.1861 124.791C86.6918 124.57 86.3011 124.266 86.0142 123.879C85.7301 123.49 85.5838 123.041 85.5753 122.533H87.4332C87.4446 122.746 87.5142 122.933 87.642 123.095C87.7727 123.254 87.946 123.378 88.1619 123.466C88.3778 123.554 88.6207 123.598 88.8906 123.598C89.1719 123.598 89.4205 123.548 89.6364 123.449C89.8523 123.349 90.0213 123.212 90.1435 123.036C90.2656 122.859 90.3267 122.656 90.3267 122.426C90.3267 122.193 90.2614 121.987 90.1307 121.808C90.0028 121.626 89.8182 121.484 89.5767 121.382C89.3381 121.28 89.054 121.229 88.7244 121.229H87.9105V119.874H88.7244C89.0028 119.874 89.2486 119.825 89.4616 119.729C89.6776 119.632 89.8452 119.499 89.9645 119.328C90.0838 119.155 90.1435 118.953 90.1435 118.723C90.1435 118.504 90.0909 118.312 89.9858 118.148C89.8835 117.98 89.7386 117.849 89.5511 117.756C89.3665 117.662 89.1506 117.615 88.9034 117.615C88.6534 117.615 88.4247 117.661 88.2173 117.751C88.0099 117.839 87.8438 117.966 87.7188 118.131C87.5938 118.295 87.527 118.489 87.5185 118.71H85.75C85.7585 118.207 85.902 117.764 86.1804 117.381C86.4588 116.997 86.8338 116.697 87.3054 116.482C87.7798 116.263 88.3153 116.153 88.9119 116.153C89.5142 116.153 90.0412 116.263 90.4929 116.482C90.9446 116.7 91.2955 116.996 91.5455 117.368C91.7983 117.737 91.9233 118.152 91.9205 118.612C91.9233 119.101 91.7713 119.509 91.4645 119.835C91.1605 120.162 90.7642 120.369 90.2756 120.457V120.526C90.9176 120.608 91.4063 120.831 91.7415 121.195C92.0795 121.555 92.2472 122.007 92.2443 122.55C92.2472 123.047 92.1037 123.489 91.8139 123.875C91.527 124.261 91.1307 124.565 90.625 124.787C90.1193 125.009 89.5398 125.119 88.8864 125.119Z\"\n\t\t\t\tfill=\"black\"\n\t\t\t/>\n\t\t</SVG>\n\t);\n}\n\n/**\n * Returns an array of heading blocks enhanced with the following properties:\n * level   - An integer with the heading level.\n * isEmpty - Flag indicating if the heading has no content.\n *\n * @param {?Array} blocks An array of blocks.\n *\n * @return {Array} An array of heading blocks enhanced with the properties described above.\n */\nconst computeOutlineHeadings = ( blocks = [] ) => {\n\treturn blocks.flatMap( ( block = {} ) => {\n\t\tif ( block.name === 'core/heading' ) {\n\t\t\treturn {\n\t\t\t\t...block,\n\t\t\t\tlevel: block.attributes.level,\n\t\t\t\tisEmpty: isEmptyHeading( block ),\n\t\t\t};\n\t\t}\n\t\treturn computeOutlineHeadings( block.innerBlocks );\n\t} );\n};\n\nconst isEmptyHeading = ( heading ) =>\n\t! heading.attributes.content ||\n\theading.attributes.content.trim().length === 0;\n\nexport default function DocumentOutline( {\n\tonSelect,\n\tisTitleSupported,\n\thasOutlineItemsDisabled,\n} ) {\n\tconst { selectBlock } = useDispatch( blockEditorStore );\n\tconst { blocks, title } = useSelect( ( select ) => {\n\t\tconst { getBlocks } = select( blockEditorStore );\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\n\t\treturn {\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tblocks: getBlocks(),\n\t\t\tisTitleSupported: postType?.supports?.title ?? false,\n\t\t};\n\t} );\n\n\tconst headings = computeOutlineHeadings( blocks );\n\tif ( headings.length < 1 ) {\n\t\treturn (\n\t\t\t<div className=\"editor-document-outline has-no-headings\">\n\t\t\t\t<EmptyOutlineIllustration />\n\t\t\t\t<p>\n\t\t\t\t\t{ __(\n\t\t\t\t\t\t'Navigate the structure of your document and address issues like empty or incorrect heading levels.'\n\t\t\t\t\t) }\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tlet prevHeadingLevel = 1;\n\n\t// Not great but it's the simplest way to locate the title right now.\n\tconst titleNode = document.querySelector( '.editor-post-title__input' );\n\tconst hasTitle = isTitleSupported && title && titleNode;\n\tconst countByLevel = headings.reduce(\n\t\t( acc, heading ) => ( {\n\t\t\t...acc,\n\t\t\t[ heading.level ]: ( acc[ heading.level ] || 0 ) + 1,\n\t\t} ),\n\t\t{}\n\t);\n\tconst hasMultipleH1 = countByLevel[ 1 ] > 1;\n\n\treturn (\n\t\t<div className=\"document-outline\">\n\t\t\t<ul>\n\t\t\t\t{ hasTitle && (\n\t\t\t\t\t<DocumentOutlineItem\n\t\t\t\t\t\tlevel={ __( 'Title' ) }\n\t\t\t\t\t\tisValid\n\t\t\t\t\t\tonSelect={ onSelect }\n\t\t\t\t\t\thref={ `#${ titleNode.id }` }\n\t\t\t\t\t\tisDisabled={ hasOutlineItemsDisabled }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ title }\n\t\t\t\t\t</DocumentOutlineItem>\n\t\t\t\t) }\n\t\t\t\t{ headings.map( ( item, index ) => {\n\t\t\t\t\t// Headings remain the same, go up by one, or down by any amount.\n\t\t\t\t\t// Otherwise there are missing levels.\n\t\t\t\t\tconst isIncorrectLevel = item.level > prevHeadingLevel + 1;\n\n\t\t\t\t\tconst isValid =\n\t\t\t\t\t\t! item.isEmpty &&\n\t\t\t\t\t\t! isIncorrectLevel &&\n\t\t\t\t\t\t!! item.level &&\n\t\t\t\t\t\t( item.level !== 1 ||\n\t\t\t\t\t\t\t( ! hasMultipleH1 && ! hasTitle ) );\n\t\t\t\t\tprevHeadingLevel = item.level;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<DocumentOutlineItem\n\t\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\t\tlevel={ `H${ item.level }` }\n\t\t\t\t\t\t\tisValid={ isValid }\n\t\t\t\t\t\t\tisDisabled={ hasOutlineItemsDisabled }\n\t\t\t\t\t\t\thref={ `#block-${ item.clientId }` }\n\t\t\t\t\t\t\tonSelect={ () => {\n\t\t\t\t\t\t\t\tselectBlock( item.clientId );\n\t\t\t\t\t\t\t\tonSelect?.();\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ item.isEmpty\n\t\t\t\t\t\t\t\t? emptyHeadingContent\n\t\t\t\t\t\t\t\t: getTextContent(\n\t\t\t\t\t\t\t\t\t\tcreate( {\n\t\t\t\t\t\t\t\t\t\t\thtml: item.attributes.content,\n\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t  ) }\n\t\t\t\t\t\t\t{ isIncorrectLevel && incorrectLevelContent }\n\t\t\t\t\t\t\t{ item.level === 1 &&\n\t\t\t\t\t\t\t\thasMultipleH1 &&\n\t\t\t\t\t\t\t\tmultipleH1Headings }\n\t\t\t\t\t\t\t{ hasTitle &&\n\t\t\t\t\t\t\t\titem.level === 1 &&\n\t\t\t\t\t\t\t\t! hasMultipleH1 &&\n\t\t\t\t\t\t\t\tsingleH1Headings }\n\t\t\t\t\t\t</DocumentOutlineItem>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\nexport default function DocumentOutlineCheck( { children } ) {\n\tconst hasHeadings = useSelect( ( select ) => {\n\t\tconst { getGlobalBlockCount } = select( blockEditorStore );\n\n\t\treturn getGlobalBlockCount( 'core/heading' ) > 0;\n\t} );\n\n\tif ( hasHeadings ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { BlockEditorKeyboardShortcuts } from '@wordpress/block-editor';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { isAppleOS } from '@wordpress/keycodes';\n\nfunction EditorKeyboardShortcutsRegister() {\n\t// Registering the shortcuts.\n\tconst { registerShortcut } = useDispatch( keyboardShortcutsStore );\n\tuseEffect( () => {\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/toggle-mode',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Switch between visual editor and code editor.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'secondary',\n\t\t\t\tcharacter: 'm',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/save',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Save your changes.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primary',\n\t\t\t\tcharacter: 's',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/undo',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Undo your last changes.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primary',\n\t\t\t\tcharacter: 'z',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/redo',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Redo your last undo.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primaryShift',\n\t\t\t\tcharacter: 'z',\n\t\t\t},\n\t\t\t// Disable on Apple OS because it conflicts with the browser's\n\t\t\t// history shortcut. It's a fine alias for both Windows and Linux.\n\t\t\t// Since there's no conflict for Ctrl+Shift+Z on both Windows and\n\t\t\t// Linux, we keep it as the default for consistency.\n\t\t\taliases: isAppleOS()\n\t\t\t\t? []\n\t\t\t\t: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmodifier: 'primary',\n\t\t\t\t\t\t\tcharacter: 'y',\n\t\t\t\t\t\t},\n\t\t\t\t  ],\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/toggle-list-view',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Open the block list view.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'access',\n\t\t\t\tcharacter: 'o',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/toggle-distraction-free',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Toggle distraction free mode.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primaryShift',\n\t\t\t\tcharacter: '\\\\',\n\t\t\t},\n\t\t} );\n\t}, [ registerShortcut ] );\n\n\treturn <BlockEditorKeyboardShortcuts.Register />;\n}\n\nexport default EditorKeyboardShortcutsRegister;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst redo = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M15.6 6.5l-1.1 1 2.9 3.3H8c-.9 0-1.7.3-2.3.9-1.4 1.5-1.4 4.2-1.4 5.6v.2h1.5v-.3c0-1.1 0-3.5 1-4.5.3-.3.7-.5 1.3-.5h9.2L14.5 15l1.1 1.1 4.6-4.6-4.6-5z\" />\n\t</SVG>\n);\n\nexport default redo;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst undo = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18.3 11.7c-.6-.6-1.4-.9-2.3-.9H6.7l2.9-3.3-1.1-1-4.5 5L8.5 16l1-1-2.7-2.7H16c.5 0 .9.2 1.3.5 1 1 1 3.4 1 4.5v.3h1.5v-.2c0-1.5 0-4.3-1.5-5.7z\" />\n\t</SVG>\n);\n\nexport default undo;\n","/**\n * WordPress dependencies\n */\nimport { __, isRTL } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { displayShortcut, isAppleOS } from '@wordpress/keycodes';\nimport { redo as redoIcon, undo as undoIcon } from '@wordpress/icons';\nimport { forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction EditorHistoryRedo( props, ref ) {\n\tconst shortcut = isAppleOS()\n\t\t? displayShortcut.primaryShift( 'z' )\n\t\t: displayShortcut.primary( 'y' );\n\n\tconst hasRedo = useSelect(\n\t\t( select ) => select( editorStore ).hasEditorRedo(),\n\t\t[]\n\t);\n\tconst { redo } = useDispatch( editorStore );\n\treturn (\n\t\t<Button\n\t\t\t{ ...props }\n\t\t\tref={ ref }\n\t\t\ticon={ ! isRTL() ? redoIcon : undoIcon }\n\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\tlabel={ __( 'Redo' ) }\n\t\t\tshortcut={ shortcut }\n\t\t\t// If there are no redo levels we don't want to actually disable this\n\t\t\t// button, because it will remove focus for keyboard users.\n\t\t\t// See: https://github.com/WordPress/gutenberg/issues/3486\n\t\t\taria-disabled={ ! hasRedo }\n\t\t\tonClick={ hasRedo ? redo : undefined }\n\t\t\tclassName=\"editor-history__redo\"\n\t\t/>\n\t);\n}\n\nexport default forwardRef( EditorHistoryRedo );\n","/**\n * WordPress dependencies\n */\nimport { __, isRTL } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { undo as undoIcon, redo as redoIcon } from '@wordpress/icons';\nimport { forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction EditorHistoryUndo( props, ref ) {\n\tconst hasUndo = useSelect(\n\t\t( select ) => select( editorStore ).hasEditorUndo(),\n\t\t[]\n\t);\n\tconst { undo } = useDispatch( editorStore );\n\treturn (\n\t\t<Button\n\t\t\t{ ...props }\n\t\t\tref={ ref }\n\t\t\ticon={ ! isRTL() ? undoIcon : redoIcon }\n\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\tlabel={ __( 'Undo' ) }\n\t\t\tshortcut={ displayShortcut.primary( 'z' ) }\n\t\t\t// If there are no undo levels we don't want to actually disable this\n\t\t\t// button, because it will remove focus for keyboard users.\n\t\t\t// See: https://github.com/WordPress/gutenberg/issues/3486\n\t\t\taria-disabled={ ! hasUndo }\n\t\t\tonClick={ hasUndo ? undo : undefined }\n\t\t\tclassName=\"editor-history__undo\"\n\t\t/>\n\t);\n}\n\nexport default forwardRef( EditorHistoryUndo );\n","/**\n * WordPress dependencies\n */\nimport { Notice } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\nfunction TemplateValidationNotice( { isValid, ...props } ) {\n\tif ( isValid ) {\n\t\treturn null;\n\t}\n\n\tconst confirmSynchronization = () => {\n\t\tif (\n\t\t\t// eslint-disable-next-line no-alert\n\t\t\twindow.confirm(\n\t\t\t\t__(\n\t\t\t\t\t'Resetting the template may result in loss of content, do you want to continue?'\n\t\t\t\t)\n\t\t\t)\n\t\t) {\n\t\t\tprops.synchronizeTemplate();\n\t\t}\n\t};\n\n\treturn (\n\t\t<Notice\n\t\t\tclassName=\"editor-template-validation-notice\"\n\t\t\tisDismissible={ false }\n\t\t\tstatus=\"warning\"\n\t\t\tactions={ [\n\t\t\t\t{\n\t\t\t\t\tlabel: __( 'Keep it as is' ),\n\t\t\t\t\tonClick: props.resetTemplateValidity,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __( 'Reset the template' ),\n\t\t\t\t\tonClick: confirmSynchronization,\n\t\t\t\t},\n\t\t\t] }\n\t\t>\n\t\t\t{ __(\n\t\t\t\t'The content of your post doesn’t match the template assigned to your post type.'\n\t\t\t) }\n\t\t</Notice>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => ( {\n\t\tisValid: select( blockEditorStore ).isValidTemplate(),\n\t} ) ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { setTemplateValidity, synchronizeTemplate } =\n\t\t\tdispatch( blockEditorStore );\n\t\treturn {\n\t\t\tresetTemplateValidity: () => setTemplateValidity( true ),\n\t\t\tsynchronizeTemplate,\n\t\t};\n\t} ),\n] )( TemplateValidationNotice );\n","/**\n * WordPress dependencies\n */\nimport { NoticeList } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport TemplateValidationNotice from '../template-validation-notice';\n\nexport function EditorNotices() {\n\tconst { notices } = useSelect(\n\t\t( select ) => ( {\n\t\t\tnotices: select( noticesStore ).getNotices(),\n\t\t} ),\n\t\t[]\n\t);\n\tconst { removeNotice } = useDispatch( noticesStore );\n\tconst dismissibleNotices = notices.filter(\n\t\t( { isDismissible, type } ) => isDismissible && type === 'default'\n\t);\n\tconst nonDismissibleNotices = notices.filter(\n\t\t( { isDismissible, type } ) => ! isDismissible && type === 'default'\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<NoticeList\n\t\t\t\tnotices={ nonDismissibleNotices }\n\t\t\t\tclassName=\"components-editor-notices__pinned\"\n\t\t\t/>\n\t\t\t<NoticeList\n\t\t\t\tnotices={ dismissibleNotices }\n\t\t\t\tclassName=\"components-editor-notices__dismissible\"\n\t\t\t\tonRemove={ removeNotice }\n\t\t\t>\n\t\t\t\t<TemplateValidationNotice />\n\t\t\t</NoticeList>\n\t\t</>\n\t);\n}\n\nexport default EditorNotices;\n","/**\n * WordPress dependencies\n */\nimport { SnackbarList } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\n// Last three notices. Slices from the tail end of the list.\nconst MAX_VISIBLE_NOTICES = -3;\n\nexport default function EditorSnackbars() {\n\tconst notices = useSelect(\n\t\t( select ) => select( noticesStore ).getNotices(),\n\t\t[]\n\t);\n\tconst { removeNotice } = useDispatch( noticesStore );\n\tconst snackbarNotices = notices\n\t\t.filter( ( { type } ) => type === 'snackbar' )\n\t\t.slice( MAX_VISIBLE_NOTICES );\n\n\treturn (\n\t\t<SnackbarList\n\t\t\tnotices={ snackbarNotices }\n\t\t\tclassName=\"components-editor-notices__snackbar\"\n\t\t\tonRemove={ removeNotice }\n\t\t/>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"htmlEntities\"];","/**\n * WordPress dependencies\n */\nimport { CheckboxControl, PanelRow } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function EntityRecordItem( { record, checked, onChange } ) {\n\tconst { name, kind, title, key } = record;\n\n\t// Handle templates that might use default descriptive titles.\n\tconst entityRecordTitle = useSelect(\n\t\t( select ) => {\n\t\t\tif ( 'postType' !== kind || 'wp_template' !== name ) {\n\t\t\t\treturn title;\n\t\t\t}\n\n\t\t\tconst template = select( coreStore ).getEditedEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\tkey\n\t\t\t);\n\t\t\treturn select( editorStore ).__experimentalGetTemplateInfo(\n\t\t\t\ttemplate\n\t\t\t).title;\n\t\t},\n\t\t[ name, kind, title, key ]\n\t);\n\n\treturn (\n\t\t<PanelRow>\n\t\t\t<CheckboxControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={\n\t\t\t\t\tdecodeEntities( entityRecordTitle ) || __( 'Untitled' )\n\t\t\t\t}\n\t\t\t\tchecked={ checked }\n\t\t\t\tonChange={ onChange }\n\t\t\t/>\n\t\t</PanelRow>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { PanelBody, PanelRow } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { privateApis as blockEditorPrivateApis } from '@wordpress/block-editor';\nimport { useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport EntityRecordItem from './entity-record-item';\nimport { unlock } from '../../lock-unlock';\n\nconst { getGlobalStylesChanges, GlobalStylesContext } = unlock(\n\tblockEditorPrivateApis\n);\n\nfunction getEntityDescription( entity, count ) {\n\tswitch ( entity ) {\n\t\tcase 'site':\n\t\t\treturn 1 === count\n\t\t\t\t? __( 'This change will affect your whole site.' )\n\t\t\t\t: __( 'These changes will affect your whole site.' );\n\t\tcase 'wp_template':\n\t\t\treturn __(\n\t\t\t\t'This change will affect pages and posts that use this template.'\n\t\t\t);\n\t\tcase 'page':\n\t\tcase 'post':\n\t\t\treturn __( 'The following has been modified.' );\n\t}\n}\n\nfunction GlobalStylesDescription( { record } ) {\n\tconst { user: currentEditorGlobalStyles } =\n\t\tuseContext( GlobalStylesContext );\n\tconst savedRecord = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getEntityRecord(\n\t\t\t\trecord.kind,\n\t\t\t\trecord.name,\n\t\t\t\trecord.key\n\t\t\t),\n\t\t[ record.kind, record.name, record.key ]\n\t);\n\n\tconst globalStylesChanges = getGlobalStylesChanges(\n\t\tcurrentEditorGlobalStyles,\n\t\tsavedRecord,\n\t\t{\n\t\t\tmaxResults: 10,\n\t\t}\n\t);\n\treturn globalStylesChanges.length ? (\n\t\t<ul className=\"entities-saved-states__changes\">\n\t\t\t{ globalStylesChanges.map( ( change ) => (\n\t\t\t\t<li key={ change }>{ change }</li>\n\t\t\t) ) }\n\t\t</ul>\n\t) : null;\n}\n\nfunction EntityDescription( { record, count } ) {\n\tif ( 'globalStyles' === record?.name ) {\n\t\treturn null;\n\t}\n\tconst description = getEntityDescription( record?.name, count );\n\treturn description ? <PanelRow>{ description }</PanelRow> : null;\n}\n\nexport default function EntityTypeList( {\n\tlist,\n\tunselectedEntities,\n\tsetUnselectedEntities,\n} ) {\n\tconst count = list.length;\n\tconst firstRecord = list[ 0 ];\n\tconst entityConfig = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getEntityConfig(\n\t\t\t\tfirstRecord.kind,\n\t\t\t\tfirstRecord.name\n\t\t\t),\n\t\t[ firstRecord.kind, firstRecord.name ]\n\t);\n\n\tlet entityLabel = entityConfig.label;\n\tif ( firstRecord?.name === 'wp_template_part' ) {\n\t\tentityLabel =\n\t\t\t1 === count ? __( 'Template Part' ) : __( 'Template Parts' );\n\t}\n\n\treturn (\n\t\t<PanelBody title={ entityLabel } initialOpen>\n\t\t\t<EntityDescription record={ firstRecord } count={ count } />\n\t\t\t{ list.map( ( record ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<EntityRecordItem\n\t\t\t\t\t\tkey={ record.key || record.property }\n\t\t\t\t\t\trecord={ record }\n\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t! unselectedEntities.some(\n\t\t\t\t\t\t\t\t( elt ) =>\n\t\t\t\t\t\t\t\t\telt.kind === record.kind &&\n\t\t\t\t\t\t\t\t\telt.name === record.name &&\n\t\t\t\t\t\t\t\t\telt.key === record.key &&\n\t\t\t\t\t\t\t\t\telt.property === record.property\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\tsetUnselectedEntities( record, value )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t\t{ 'globalStyles' === firstRecord?.name && (\n\t\t\t\t<GlobalStylesDescription record={ firstRecord } />\n\t\t\t) }\n\t\t</PanelBody>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useMemo, useState } from '@wordpress/element';\n\nexport const useIsDirty = () => {\n\tconst { editedEntities, siteEdits, siteEntityConfig } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\t__experimentalGetDirtyEntityRecords,\n\t\t\t\tgetEntityRecordEdits,\n\t\t\t\tgetEntityConfig,\n\t\t\t} = select( coreStore );\n\n\t\t\treturn {\n\t\t\t\teditedEntities: __experimentalGetDirtyEntityRecords(),\n\t\t\t\tsiteEdits: getEntityRecordEdits( 'root', 'site' ),\n\t\t\t\tsiteEntityConfig: getEntityConfig( 'root', 'site' ),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tconst dirtyEntityRecords = useMemo( () => {\n\t\t// Remove site object and decouple into its edited pieces.\n\t\tconst editedEntitiesWithoutSite = editedEntities.filter(\n\t\t\t( record ) => ! ( record.kind === 'root' && record.name === 'site' )\n\t\t);\n\n\t\tconst siteEntityLabels = siteEntityConfig?.meta?.labels ?? {};\n\t\tconst editedSiteEntities = [];\n\t\tfor ( const property in siteEdits ) {\n\t\t\teditedSiteEntities.push( {\n\t\t\t\tkind: 'root',\n\t\t\t\tname: 'site',\n\t\t\t\ttitle: siteEntityLabels[ property ] || property,\n\t\t\t\tproperty,\n\t\t\t} );\n\t\t}\n\n\t\treturn [ ...editedEntitiesWithoutSite, ...editedSiteEntities ];\n\t}, [ editedEntities, siteEdits, siteEntityConfig ] );\n\n\t// Unchecked entities to be ignored by save function.\n\tconst [ unselectedEntities, _setUnselectedEntities ] = useState( [] );\n\n\tconst setUnselectedEntities = (\n\t\t{ kind, name, key, property },\n\t\tchecked\n\t) => {\n\t\tif ( checked ) {\n\t\t\t_setUnselectedEntities(\n\t\t\t\tunselectedEntities.filter(\n\t\t\t\t\t( elt ) =>\n\t\t\t\t\t\telt.kind !== kind ||\n\t\t\t\t\t\telt.name !== name ||\n\t\t\t\t\t\telt.key !== key ||\n\t\t\t\t\t\telt.property !== property\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\t_setUnselectedEntities( [\n\t\t\t\t...unselectedEntities,\n\t\t\t\t{ kind, name, key, property },\n\t\t\t] );\n\t\t}\n\t};\n\n\tconst isDirty = dirtyEntityRecords.length - unselectedEntities.length > 0;\n\n\treturn {\n\t\tdirtyEntityRecords,\n\t\tisDirty,\n\t\tsetUnselectedEntities,\n\t\tunselectedEntities,\n\t};\n};\n","/**\n * WordPress dependencies\n */\nimport { Button, Flex, FlexItem } from '@wordpress/components';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tuseCallback,\n\tuseRef,\n\tcreateInterpolateElement,\n} from '@wordpress/element';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport {\n\t__experimentalUseDialog as useDialog,\n\tuseInstanceId,\n} from '@wordpress/compose';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport EntityTypeList from './entity-type-list';\nimport { useIsDirty } from './hooks/use-is-dirty';\n\nconst PUBLISH_ON_SAVE_ENTITIES = [\n\t{\n\t\tkind: 'postType',\n\t\tname: 'wp_navigation',\n\t},\n];\n\nfunction identity( values ) {\n\treturn values;\n}\n\nexport default function EntitiesSavedStates( {\n\tclose,\n\trenderDialog = undefined,\n} ) {\n\tconst isDirtyProps = useIsDirty();\n\treturn (\n\t\t<EntitiesSavedStatesExtensible\n\t\t\tclose={ close }\n\t\t\trenderDialog={ renderDialog }\n\t\t\t{ ...isDirtyProps }\n\t\t/>\n\t);\n}\n\nexport function EntitiesSavedStatesExtensible( {\n\tadditionalPrompt = undefined,\n\tclose,\n\tonSave = identity,\n\tsaveEnabled: saveEnabledProp = undefined,\n\tsaveLabel = __( 'Save' ),\n\trenderDialog = undefined,\n\n\tdirtyEntityRecords,\n\tisDirty,\n\tsetUnselectedEntities,\n\tunselectedEntities,\n} ) {\n\tconst saveButtonRef = useRef();\n\tconst {\n\t\teditEntityRecord,\n\t\tsaveEditedEntityRecord,\n\t\t__experimentalSaveSpecifiedEntityEdits: saveSpecifiedEntityEdits,\n\t} = useDispatch( coreStore );\n\n\tconst { __unstableMarkLastChangeAsPersistent } =\n\t\tuseDispatch( blockEditorStore );\n\n\tconst { createSuccessNotice, createErrorNotice, removeNotice } =\n\t\tuseDispatch( noticesStore );\n\n\t// To group entities by type.\n\tconst partitionedSavables = dirtyEntityRecords.reduce( ( acc, record ) => {\n\t\tconst { name } = record;\n\t\tif ( ! acc[ name ] ) {\n\t\t\tacc[ name ] = [];\n\t\t}\n\t\tacc[ name ].push( record );\n\t\treturn acc;\n\t}, {} );\n\n\t// Sort entity groups.\n\tconst {\n\t\tsite: siteSavables,\n\t\twp_template: templateSavables,\n\t\twp_template_part: templatePartSavables,\n\t\t...contentSavables\n\t} = partitionedSavables;\n\tconst sortedPartitionedSavables = [\n\t\tsiteSavables,\n\t\ttemplateSavables,\n\t\ttemplatePartSavables,\n\t\t...Object.values( contentSavables ),\n\t].filter( Array.isArray );\n\n\tconst saveEnabled = saveEnabledProp ?? isDirty;\n\n\tconst { homeUrl } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetUnstableBase, // Site index.\n\t\t} = select( coreStore );\n\t\treturn {\n\t\t\thomeUrl: getUnstableBase()?.home,\n\t\t};\n\t}, [] );\n\n\tconst saveCheckedEntities = () => {\n\t\tconst saveNoticeId = 'site-editor-save-success';\n\t\tremoveNotice( saveNoticeId );\n\t\tconst entitiesToSave = dirtyEntityRecords.filter(\n\t\t\t( { kind, name, key, property } ) => {\n\t\t\t\treturn ! unselectedEntities.some(\n\t\t\t\t\t( elt ) =>\n\t\t\t\t\t\telt.kind === kind &&\n\t\t\t\t\t\telt.name === name &&\n\t\t\t\t\t\telt.key === key &&\n\t\t\t\t\t\telt.property === property\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tclose( entitiesToSave );\n\n\t\tconst siteItemsToSave = [];\n\t\tconst pendingSavedRecords = [];\n\t\tentitiesToSave.forEach( ( { kind, name, key, property } ) => {\n\t\t\tif ( 'root' === kind && 'site' === name ) {\n\t\t\t\tsiteItemsToSave.push( property );\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tPUBLISH_ON_SAVE_ENTITIES.some(\n\t\t\t\t\t\t( typeToPublish ) =>\n\t\t\t\t\t\t\ttypeToPublish.kind === kind &&\n\t\t\t\t\t\t\ttypeToPublish.name === name\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\teditEntityRecord( kind, name, key, { status: 'publish' } );\n\t\t\t\t}\n\n\t\t\t\tpendingSavedRecords.push(\n\t\t\t\t\tsaveEditedEntityRecord( kind, name, key )\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\t\tif ( siteItemsToSave.length ) {\n\t\t\tpendingSavedRecords.push(\n\t\t\t\tsaveSpecifiedEntityEdits(\n\t\t\t\t\t'root',\n\t\t\t\t\t'site',\n\t\t\t\t\tundefined,\n\t\t\t\t\tsiteItemsToSave\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t__unstableMarkLastChangeAsPersistent();\n\n\t\tPromise.all( pendingSavedRecords )\n\t\t\t.then( ( values ) => {\n\t\t\t\treturn onSave( values );\n\t\t\t} )\n\t\t\t.then( ( values ) => {\n\t\t\t\tif (\n\t\t\t\t\tvalues.some( ( value ) => typeof value === 'undefined' )\n\t\t\t\t) {\n\t\t\t\t\tcreateErrorNotice( __( 'Saving failed.' ) );\n\t\t\t\t} else {\n\t\t\t\t\tcreateSuccessNotice( __( 'Site updated.' ), {\n\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\tid: saveNoticeId,\n\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: __( 'View site' ),\n\t\t\t\t\t\t\t\turl: homeUrl,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.catch( ( error ) =>\n\t\t\t\tcreateErrorNotice( `${ __( 'Saving failed.' ) } ${ error }` )\n\t\t\t);\n\t};\n\n\t// Explicitly define this with no argument passed.  Using `close` on\n\t// its own will use the event object in place of the expected saved entities.\n\tconst dismissPanel = useCallback( () => close(), [ close ] );\n\n\tconst [ saveDialogRef, saveDialogProps ] = useDialog( {\n\t\tonClose: () => dismissPanel(),\n\t} );\n\tconst dialogLabel = useInstanceId( EntitiesSavedStatesExtensible, 'label' );\n\tconst dialogDescription = useInstanceId(\n\t\tEntitiesSavedStatesExtensible,\n\t\t'description'\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tref={ saveDialogRef }\n\t\t\t{ ...saveDialogProps }\n\t\t\tclassName=\"entities-saved-states__panel\"\n\t\t\trole={ renderDialog ? 'dialog' : undefined }\n\t\t\taria-labelledby={ renderDialog ? dialogLabel : undefined }\n\t\t\taria-describedby={ renderDialog ? dialogDescription : undefined }\n\t\t>\n\t\t\t<Flex className=\"entities-saved-states__panel-header\" gap={ 2 }>\n\t\t\t\t<FlexItem\n\t\t\t\t\tisBlock\n\t\t\t\t\tas={ Button }\n\t\t\t\t\tref={ saveButtonRef }\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tdisabled={ ! saveEnabled }\n\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t\tonClick={ saveCheckedEntities }\n\t\t\t\t\tclassName=\"editor-entities-saved-states__save-button\"\n\t\t\t\t>\n\t\t\t\t\t{ saveLabel }\n\t\t\t\t</FlexItem>\n\t\t\t\t<FlexItem\n\t\t\t\t\tisBlock\n\t\t\t\t\tas={ Button }\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tonClick={ dismissPanel }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t</FlexItem>\n\t\t\t</Flex>\n\n\t\t\t<div className=\"entities-saved-states__text-prompt\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"entities-saved-states__text-prompt--header-wrapper\"\n\t\t\t\t\tid={ renderDialog ? dialogLabel : undefined }\n\t\t\t\t>\n\t\t\t\t\t<strong className=\"entities-saved-states__text-prompt--header\">\n\t\t\t\t\t\t{ __( 'Are you ready to save?' ) }\n\t\t\t\t\t</strong>\n\t\t\t\t\t{ additionalPrompt }\n\t\t\t\t</div>\n\t\t\t\t<p id={ renderDialog ? dialogDescription : undefined }>\n\t\t\t\t\t{ isDirty\n\t\t\t\t\t\t? createInterpolateElement(\n\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t/* translators: %d: number of site changes waiting to be saved. */\n\t\t\t\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t\t\t\t'There is <strong>%d site change</strong> waiting to be saved.',\n\t\t\t\t\t\t\t\t\t\t'There are <strong>%d site changes</strong> waiting to be saved.',\n\t\t\t\t\t\t\t\t\t\tsortedPartitionedSavables.length\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tsortedPartitionedSavables.length\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{ strong: <strong /> }\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: __( 'Select the items you want to save.' ) }\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t{ sortedPartitionedSavables.map( ( list ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<EntityTypeList\n\t\t\t\t\t\tkey={ list[ 0 ].name }\n\t\t\t\t\t\tlist={ list }\n\t\t\t\t\t\tunselectedEntities={ unselectedEntities }\n\t\t\t\t\t\tsetUnselectedEntities={ setUnselectedEntities }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { select } from '@wordpress/data';\nimport { Warning } from '@wordpress/block-editor';\nimport { useCopyToClipboard } from '@wordpress/compose';\nimport { doAction } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction getContent() {\n\ttry {\n\t\t// While `select` in a component is generally discouraged, it is\n\t\t// used here because it (a) reduces the chance of data loss in the\n\t\t// case of additional errors by performing a direct retrieval and\n\t\t// (b) avoids the performance cost associated with unnecessary\n\t\t// content serialization throughout the lifetime of a non-erroring\n\t\t// application.\n\t\treturn select( editorStore ).getEditedPostContent();\n\t} catch ( error ) {}\n}\n\nfunction CopyButton( { text, children } ) {\n\tconst ref = useCopyToClipboard( text );\n\treturn (\n\t\t<Button variant=\"secondary\" ref={ ref }>\n\t\t\t{ children }\n\t\t</Button>\n\t);\n}\n\nclass ErrorBoundary extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.state = {\n\t\t\terror: null,\n\t\t};\n\t}\n\n\tcomponentDidCatch( error ) {\n\t\tdoAction( 'editor.ErrorBoundary.errorLogged', error );\n\t}\n\n\tstatic getDerivedStateFromError( error ) {\n\t\treturn { error };\n\t}\n\n\trender() {\n\t\tconst { error } = this.state;\n\t\tif ( ! error ) {\n\t\t\treturn this.props.children;\n\t\t}\n\n\t\tconst actions = [\n\t\t\t<CopyButton key=\"copy-post\" text={ getContent }>\n\t\t\t\t{ __( 'Copy Post Text' ) }\n\t\t\t</CopyButton>,\n\t\t\t<CopyButton key=\"copy-error\" text={ error.stack }>\n\t\t\t\t{ __( 'Copy Error' ) }\n\t\t\t</CopyButton>,\n\t\t];\n\n\t\treturn (\n\t\t\t<Warning className=\"editor-error-boundary\" actions={ actions }>\n\t\t\t\t{ __( 'The editor has encountered an unexpected error.' ) }\n\t\t\t</Warning>\n\t\t);\n\t}\n}\n\nexport default ErrorBoundary;\n","/**\n * WordPress dependencies\n */\nimport { useCallback, useEffect, useRef } from '@wordpress/element';\nimport { ifCondition, usePrevious } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { parse } from '@wordpress/blocks';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport AutosaveMonitor from '../autosave-monitor';\nimport {\n\tlocalAutosaveGet,\n\tlocalAutosaveClear,\n} from '../../store/local-autosave';\nimport { store as editorStore } from '../../store';\n\nconst requestIdleCallback = window.requestIdleCallback\n\t? window.requestIdleCallback\n\t: window.requestAnimationFrame;\n\nlet hasStorageSupport;\n\n/**\n * Function which returns true if the current environment supports browser\n * sessionStorage, or false otherwise. The result of this function is cached and\n * reused in subsequent invocations.\n */\nconst hasSessionStorageSupport = () => {\n\tif ( hasStorageSupport !== undefined ) {\n\t\treturn hasStorageSupport;\n\t}\n\n\ttry {\n\t\t// Private Browsing in Safari 10 and earlier will throw an error when\n\t\t// attempting to set into sessionStorage. The test here is intentional in\n\t\t// causing a thrown error as condition bailing from local autosave.\n\t\twindow.sessionStorage.setItem( '__wpEditorTestSessionStorage', '' );\n\t\twindow.sessionStorage.removeItem( '__wpEditorTestSessionStorage' );\n\t\thasStorageSupport = true;\n\t} catch {\n\t\thasStorageSupport = false;\n\t}\n\n\treturn hasStorageSupport;\n};\n\n/**\n * Custom hook which manages the creation of a notice prompting the user to\n * restore a local autosave, if one exists.\n */\nfunction useAutosaveNotice() {\n\tconst { postId, isEditedPostNew, hasRemoteAutosave } = useSelect(\n\t\t( select ) => ( {\n\t\t\tpostId: select( editorStore ).getCurrentPostId(),\n\t\t\tisEditedPostNew: select( editorStore ).isEditedPostNew(),\n\t\t\thasRemoteAutosave:\n\t\t\t\t!! select( editorStore ).getEditorSettings().autosave,\n\t\t} ),\n\t\t[]\n\t);\n\tconst { getEditedPostAttribute } = useSelect( editorStore );\n\n\tconst { createWarningNotice, removeNotice } = useDispatch( noticesStore );\n\tconst { editPost, resetEditorBlocks } = useDispatch( editorStore );\n\n\tuseEffect( () => {\n\t\tlet localAutosave = localAutosaveGet( postId, isEditedPostNew );\n\t\tif ( ! localAutosave ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tlocalAutosave = JSON.parse( localAutosave );\n\t\t} catch {\n\t\t\t// Not usable if it can't be parsed.\n\t\t\treturn;\n\t\t}\n\n\t\tconst { post_title: title, content, excerpt } = localAutosave;\n\t\tconst edits = { title, content, excerpt };\n\n\t\t{\n\t\t\t// Only display a notice if there is a difference between what has been\n\t\t\t// saved and that which is stored in sessionStorage.\n\t\t\tconst hasDifference = Object.keys( edits ).some( ( key ) => {\n\t\t\t\treturn edits[ key ] !== getEditedPostAttribute( key );\n\t\t\t} );\n\n\t\t\tif ( ! hasDifference ) {\n\t\t\t\t// If there is no difference, it can be safely ejected from storage.\n\t\t\t\tlocalAutosaveClear( postId, isEditedPostNew );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif ( hasRemoteAutosave ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = 'wpEditorAutosaveRestore';\n\n\t\tcreateWarningNotice(\n\t\t\t__(\n\t\t\t\t'The backup of this post in your browser is different from the version below.'\n\t\t\t),\n\t\t\t{\n\t\t\t\tid,\n\t\t\t\tactions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __( 'Restore the backup' ),\n\t\t\t\t\t\tonClick() {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\tcontent: editsContent,\n\t\t\t\t\t\t\t\t...editsWithoutContent\n\t\t\t\t\t\t\t} = edits;\n\t\t\t\t\t\t\teditPost( editsWithoutContent );\n\t\t\t\t\t\t\tresetEditorBlocks( parse( edits.content ) );\n\t\t\t\t\t\t\tremoveNotice( id );\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\t);\n\t}, [ isEditedPostNew, postId ] );\n}\n\n/**\n * Custom hook which ejects a local autosave after a successful save occurs.\n */\nfunction useAutosavePurge() {\n\tconst { postId, isEditedPostNew, isDirty, isAutosaving, didError } =\n\t\tuseSelect(\n\t\t\t( select ) => ( {\n\t\t\t\tpostId: select( editorStore ).getCurrentPostId(),\n\t\t\t\tisEditedPostNew: select( editorStore ).isEditedPostNew(),\n\t\t\t\tisDirty: select( editorStore ).isEditedPostDirty(),\n\t\t\t\tisAutosaving: select( editorStore ).isAutosavingPost(),\n\t\t\t\tdidError: select( editorStore ).didPostSaveRequestFail(),\n\t\t\t} ),\n\t\t\t[]\n\t\t);\n\n\tconst lastIsDirty = useRef( isDirty );\n\tconst lastIsAutosaving = useRef( isAutosaving );\n\n\tuseEffect( () => {\n\t\tif (\n\t\t\t! didError &&\n\t\t\t( ( lastIsAutosaving.current && ! isAutosaving ) ||\n\t\t\t\t( lastIsDirty.current && ! isDirty ) )\n\t\t) {\n\t\t\tlocalAutosaveClear( postId, isEditedPostNew );\n\t\t}\n\n\t\tlastIsDirty.current = isDirty;\n\t\tlastIsAutosaving.current = isAutosaving;\n\t}, [ isDirty, isAutosaving, didError ] );\n\n\t// Once the isEditedPostNew changes from true to false, let's clear the auto-draft autosave.\n\tconst wasEditedPostNew = usePrevious( isEditedPostNew );\n\tconst prevPostId = usePrevious( postId );\n\tuseEffect( () => {\n\t\tif ( prevPostId === postId && wasEditedPostNew && ! isEditedPostNew ) {\n\t\t\tlocalAutosaveClear( postId, true );\n\t\t}\n\t}, [ isEditedPostNew, postId ] );\n}\n\nfunction LocalAutosaveMonitor() {\n\tconst { autosave } = useDispatch( editorStore );\n\tconst deferredAutosave = useCallback( () => {\n\t\trequestIdleCallback( () => autosave( { local: true } ) );\n\t}, [] );\n\tuseAutosaveNotice();\n\tuseAutosavePurge();\n\n\tconst localAutosaveInterval = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditorSettings().localAutosaveInterval,\n\t\t[]\n\t);\n\n\treturn (\n\t\t<AutosaveMonitor\n\t\t\tinterval={ localAutosaveInterval }\n\t\t\tautosave={ deferredAutosave }\n\t\t/>\n\t);\n}\n\nexport default ifCondition( hasSessionStorageSupport )( LocalAutosaveMonitor );\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport function PageAttributesCheck( { children } ) {\n\tconst supportsPageAttributes = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\n\t\treturn !! postType?.supports?.[ 'page-attributes' ];\n\t}, [] );\n\n\t// Only render fields if post type supports page attributes or available templates exist.\n\tif ( ! supportsPageAttributes ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n\nexport default PageAttributesCheck;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * A component which renders its own children only if the current editor post\n * type supports one of the given `supportKeys` prop.\n *\n * @param {Object}            props             Props.\n * @param {Element}           props.children    Children to be rendered if post\n *                                              type supports.\n * @param {(string|string[])} props.supportKeys String or string array of keys\n *                                              to test.\n *\n * @return {Component} The component to be rendered.\n */\nfunction PostTypeSupportCheck( { children, supportKeys } ) {\n\tconst postType = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\treturn getPostType( getEditedPostAttribute( 'type' ) );\n\t}, [] );\n\tlet isSupported = true;\n\tif ( postType ) {\n\t\tisSupported = (\n\t\t\tArray.isArray( supportKeys ) ? supportKeys : [ supportKeys ]\n\t\t).some( ( key ) => !! postType.supports[ key ] );\n\t}\n\n\tif ( ! isSupported ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n\nexport default PostTypeSupportCheck;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tFlex,\n\tFlexBlock,\n\t__experimentalNumberControl as NumberControl,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport { store as editorStore } from '../../store';\n\nfunction PageAttributesOrder() {\n\tconst order = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'menu_order' ) ?? 0,\n\t\t[]\n\t);\n\tconst { editPost } = useDispatch( editorStore );\n\tconst [ orderInput, setOrderInput ] = useState( null );\n\n\tconst setUpdatedOrder = ( value ) => {\n\t\tsetOrderInput( value );\n\t\tconst newOrder = Number( value );\n\t\tif ( Number.isInteger( newOrder ) && value.trim?.() !== '' ) {\n\t\t\teditPost( { menu_order: newOrder } );\n\t\t}\n\t};\n\n\tconst value = orderInput ?? order;\n\n\treturn (\n\t\t<Flex>\n\t\t\t<FlexBlock>\n\t\t\t\t<NumberControl\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\tlabel={ __( 'Order' ) }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tonChange={ setUpdatedOrder }\n\t\t\t\t\tlabelPosition=\"side\"\n\t\t\t\t\tonBlur={ () => {\n\t\t\t\t\t\tsetOrderInput( null );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</FlexBlock>\n\t\t</Flex>\n\t);\n}\n\nexport default function PageAttributesOrderWithChecks() {\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"page-attributes\">\n\t\t\t<PageAttributesOrder />\n\t\t</PostTypeSupportCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Returns terms in a tree form.\n *\n * @param {Array} flatTerms Array of terms in flat format.\n *\n * @return {Array} Array of terms in tree format.\n */\nexport function buildTermsTree( flatTerms ) {\n\tconst flatTermsWithParentAndChildren = flatTerms.map( ( term ) => {\n\t\treturn {\n\t\t\tchildren: [],\n\t\t\tparent: null,\n\t\t\t...term,\n\t\t};\n\t} );\n\n\t// All terms should have a `parent` because we're about to index them by it.\n\tif (\n\t\tflatTermsWithParentAndChildren.some( ( { parent } ) => parent === null )\n\t) {\n\t\treturn flatTermsWithParentAndChildren;\n\t}\n\n\tconst termsByParent = flatTermsWithParentAndChildren.reduce(\n\t\t( acc, term ) => {\n\t\t\tconst { parent } = term;\n\t\t\tif ( ! acc[ parent ] ) {\n\t\t\t\tacc[ parent ] = [];\n\t\t\t}\n\t\t\tacc[ parent ].push( term );\n\t\t\treturn acc;\n\t\t},\n\t\t{}\n\t);\n\n\tconst fillWithChildren = ( terms ) => {\n\t\treturn terms.map( ( term ) => {\n\t\t\tconst children = termsByParent[ term.id ];\n\t\t\treturn {\n\t\t\t\t...term,\n\t\t\t\tchildren:\n\t\t\t\t\tchildren && children.length\n\t\t\t\t\t\t? fillWithChildren( children )\n\t\t\t\t\t\t: [],\n\t\t\t};\n\t\t} );\n\t};\n\n\treturn fillWithChildren( termsByParent[ '0' ] || [] );\n}\n\nexport const unescapeString = ( arg ) => {\n\treturn decodeEntities( arg );\n};\n\n/**\n * Returns a term object with name unescaped.\n *\n * @param {Object} term The term object to unescape.\n *\n * @return {Object} Term object with name property unescaped.\n */\nexport const unescapeTerm = ( term ) => {\n\treturn {\n\t\t...term,\n\t\tname: unescapeString( term.name ),\n\t};\n};\n\n/**\n * Returns an array of term objects with names unescaped.\n * The unescape of each term is performed using the unescapeTerm function.\n *\n * @param {Object[]} terms Array of term objects to unescape.\n *\n * @return {Object[]} Array of term objects unescaped.\n */\nexport const unescapeTerms = ( terms ) => {\n\treturn ( terms ?? [] ).map( unescapeTerm );\n};\n","/**\n * External dependencies\n */\nimport removeAccents from 'remove-accents';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { ComboboxControl } from '@wordpress/components';\nimport { debounce } from '@wordpress/compose';\nimport { useState, useMemo } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { buildTermsTree } from '../../utils/terms';\nimport { store as editorStore } from '../../store';\n\nfunction getTitle( post ) {\n\treturn post?.title?.rendered\n\t\t? decodeEntities( post.title.rendered )\n\t\t: `#${ post.id } (${ __( 'no title' ) })`;\n}\n\nexport const getItemPriority = ( name, searchValue ) => {\n\tconst normalizedName = removeAccents( name || '' ).toLowerCase();\n\tconst normalizedSearch = removeAccents( searchValue || '' ).toLowerCase();\n\tif ( normalizedName === normalizedSearch ) {\n\t\treturn 0;\n\t}\n\n\tif ( normalizedName.startsWith( normalizedSearch ) ) {\n\t\treturn normalizedName.length;\n\t}\n\n\treturn Infinity;\n};\n\nexport function PageAttributesParent() {\n\tconst { editPost } = useDispatch( editorStore );\n\tconst [ fieldValue, setFieldValue ] = useState( false );\n\tconst { isHierarchical, parentPostId, parentPostTitle, pageItems } =\n\t\tuseSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst { getPostType, getEntityRecords, getEntityRecord } =\n\t\t\t\t\tselect( coreStore );\n\t\t\t\tconst { getCurrentPostId, getEditedPostAttribute } =\n\t\t\t\t\tselect( editorStore );\n\t\t\t\tconst postTypeSlug = getEditedPostAttribute( 'type' );\n\t\t\t\tconst pageId = getEditedPostAttribute( 'parent' );\n\t\t\t\tconst pType = getPostType( postTypeSlug );\n\t\t\t\tconst postId = getCurrentPostId();\n\t\t\t\tconst postIsHierarchical = pType?.hierarchical ?? false;\n\t\t\t\tconst query = {\n\t\t\t\t\tper_page: 100,\n\t\t\t\t\texclude: postId,\n\t\t\t\t\tparent_exclude: postId,\n\t\t\t\t\torderby: 'menu_order',\n\t\t\t\t\torder: 'asc',\n\t\t\t\t\t_fields: 'id,title,parent',\n\t\t\t\t};\n\n\t\t\t\t// Perform a search when the field is changed.\n\t\t\t\tif ( !! fieldValue ) {\n\t\t\t\t\tquery.search = fieldValue;\n\t\t\t\t}\n\n\t\t\t\tconst parentPost = pageId\n\t\t\t\t\t? getEntityRecord( 'postType', postTypeSlug, pageId )\n\t\t\t\t\t: null;\n\n\t\t\t\treturn {\n\t\t\t\t\tisHierarchical: postIsHierarchical,\n\t\t\t\t\tparentPostId: pageId,\n\t\t\t\t\tparentPostTitle: parentPost ? getTitle( parentPost ) : '',\n\t\t\t\t\tpageItems: postIsHierarchical\n\t\t\t\t\t\t? getEntityRecords( 'postType', postTypeSlug, query )\n\t\t\t\t\t\t: null,\n\t\t\t\t};\n\t\t\t},\n\t\t\t[ fieldValue ]\n\t\t);\n\n\tconst parentOptions = useMemo( () => {\n\t\tconst getOptionsFromTree = ( tree, level = 0 ) => {\n\t\t\tconst mappedNodes = tree.map( ( treeNode ) => [\n\t\t\t\t{\n\t\t\t\t\tvalue: treeNode.id,\n\t\t\t\t\tlabel:\n\t\t\t\t\t\t'— '.repeat( level ) + decodeEntities( treeNode.name ),\n\t\t\t\t\trawName: treeNode.name,\n\t\t\t\t},\n\t\t\t\t...getOptionsFromTree( treeNode.children || [], level + 1 ),\n\t\t\t] );\n\n\t\t\tconst sortedNodes = mappedNodes.sort( ( [ a ], [ b ] ) => {\n\t\t\t\tconst priorityA = getItemPriority( a.rawName, fieldValue );\n\t\t\t\tconst priorityB = getItemPriority( b.rawName, fieldValue );\n\t\t\t\treturn priorityA >= priorityB ? 1 : -1;\n\t\t\t} );\n\n\t\t\treturn sortedNodes.flat();\n\t\t};\n\n\t\tif ( ! pageItems ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet tree = pageItems.map( ( item ) => ( {\n\t\t\tid: item.id,\n\t\t\tparent: item.parent,\n\t\t\tname: getTitle( item ),\n\t\t} ) );\n\n\t\t// Only build a hierarchical tree when not searching.\n\t\tif ( ! fieldValue ) {\n\t\t\ttree = buildTermsTree( tree );\n\t\t}\n\n\t\tconst opts = getOptionsFromTree( tree );\n\n\t\t// Ensure the current parent is in the options list.\n\t\tconst optsHasParent = opts.find(\n\t\t\t( item ) => item.value === parentPostId\n\t\t);\n\t\tif ( parentPostTitle && ! optsHasParent ) {\n\t\t\topts.unshift( {\n\t\t\t\tvalue: parentPostId,\n\t\t\t\tlabel: parentPostTitle,\n\t\t\t} );\n\t\t}\n\t\treturn opts;\n\t}, [ pageItems, fieldValue, parentPostTitle, parentPostId ] );\n\n\tif ( ! isHierarchical ) {\n\t\treturn null;\n\t}\n\t/**\n\t * Handle user input.\n\t *\n\t * @param {string} inputValue The current value of the input field.\n\t */\n\tconst handleKeydown = ( inputValue ) => {\n\t\tsetFieldValue( inputValue );\n\t};\n\n\t/**\n\t * Handle author selection.\n\t *\n\t * @param {Object} selectedPostId The selected Author.\n\t */\n\tconst handleChange = ( selectedPostId ) => {\n\t\teditPost( { parent: selectedPostId } );\n\t};\n\n\treturn (\n\t\t<ComboboxControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\t__next40pxDefaultSize\n\t\t\tclassName=\"editor-page-attributes__parent\"\n\t\t\tlabel={ __( 'Parent' ) }\n\t\t\tvalue={ parentPostId }\n\t\t\toptions={ parentOptions }\n\t\t\tonFilterValueChange={ debounce( handleKeydown, 300 ) }\n\t\t\tonChange={ handleChange }\n\t\t/>\n\t);\n}\n\nexport default PageAttributesParent;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, PanelRow } from '@wordpress/components';\n\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PageAttributesCheck from './check';\nimport PageAttributesOrder from './order';\nimport PageAttributesParent from './parent';\n\nconst PANEL_NAME = 'page-attributes';\n\nexport function PageAttributesPanel() {\n\tconst { isEnabled, isOpened, postType } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetEditedPostAttribute,\n\t\t\tisEditorPanelEnabled,\n\t\t\tisEditorPanelOpened,\n\t\t} = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\treturn {\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\n\t\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\t};\n\t}, [] );\n\n\tconst { toggleEditorPanelOpened } = useDispatch( editorStore );\n\n\tif ( ! isEnabled || ! postType ) {\n\t\treturn null;\n\t}\n\n\tconst onTogglePanel = ( ...args ) =>\n\t\ttoggleEditorPanelOpened( PANEL_NAME, ...args );\n\n\treturn (\n\t\t<PageAttributesCheck>\n\t\t\t<PanelBody\n\t\t\t\ttitle={\n\t\t\t\t\tpostType?.labels?.attributes ?? __( 'Page attributes' )\n\t\t\t\t}\n\t\t\t\topened={ isOpened }\n\t\t\t\tonToggle={ onTogglePanel }\n\t\t\t>\n\t\t\t\t<PageAttributesParent />\n\t\t\t\t<PanelRow>\n\t\t\t\t\t<PageAttributesOrder />\n\t\t\t\t</PanelRow>\n\t\t\t</PanelBody>\n\t\t</PageAttributesCheck>\n\t);\n}\n\nexport default PageAttributesPanel;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst addTemplate = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M18.5 5.5V8H20V5.5H22.5V4H20V1.5H18.5V4H16V5.5H18.5ZM13.9624 4H6C4.89543 4 4 4.89543 4 6V18C4 19.1046 4.89543 20 6 20H18C19.1046 20 20 19.1046 20 18V10.0391H18.5V18C18.5 18.2761 18.2761 18.5 18 18.5H10L10 10.4917L16.4589 10.5139L16.4641 9.01389L5.5 8.97618V6C5.5 5.72386 5.72386 5.5 6 5.5H13.9624V4ZM5.5 10.4762V18C5.5 18.2761 5.72386 18.5 6 18.5H8.5L8.5 10.4865L5.5 10.4762Z\"\n\t\t/>\n\t</SVG>\n);\n\nexport default addTemplate;\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport { serialize, createBlock } from '@wordpress/blocks';\nimport {\n\tModal,\n\tTextControl,\n\tButton,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { cleanForSlug } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nconst DEFAULT_TITLE = __( 'Custom Template' );\n\nexport default function CreateNewTemplateModal( { onClose } ) {\n\tconst { defaultBlockTemplate, onNavigateToEntityRecord } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditorSettings, getCurrentTemplateId } =\n\t\t\t\tselect( editorStore );\n\t\t\treturn {\n\t\t\t\tdefaultBlockTemplate: getEditorSettings().defaultBlockTemplate,\n\t\t\t\tonNavigateToEntityRecord:\n\t\t\t\t\tgetEditorSettings().onNavigateToEntityRecord,\n\t\t\t\tgetTemplateId: getCurrentTemplateId,\n\t\t\t};\n\t\t}\n\t);\n\n\tconst { createTemplate } = unlock( useDispatch( editorStore ) );\n\n\tconst [ title, setTitle ] = useState( '' );\n\n\tconst [ isBusy, setIsBusy ] = useState( false );\n\n\tconst cancel = () => {\n\t\tsetTitle( '' );\n\t\tonClose();\n\t};\n\n\tconst submit = async ( event ) => {\n\t\tevent.preventDefault();\n\n\t\tif ( isBusy ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsBusy( true );\n\n\t\tconst newTemplateContent =\n\t\t\tdefaultBlockTemplate ??\n\t\t\tserialize( [\n\t\t\t\tcreateBlock(\n\t\t\t\t\t'core/group',\n\t\t\t\t\t{\n\t\t\t\t\t\ttagName: 'header',\n\t\t\t\t\t\tlayout: { inherit: true },\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateBlock( 'core/site-title' ),\n\t\t\t\t\t\tcreateBlock( 'core/site-tagline' ),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t\tcreateBlock( 'core/separator' ),\n\t\t\t\tcreateBlock(\n\t\t\t\t\t'core/group',\n\t\t\t\t\t{\n\t\t\t\t\t\ttagName: 'main',\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateBlock(\n\t\t\t\t\t\t\t'core/group',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlayout: { inherit: true },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[ createBlock( 'core/post-title' ) ]\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcreateBlock( 'core/post-content', {\n\t\t\t\t\t\t\tlayout: { inherit: true },\n\t\t\t\t\t\t} ),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t] );\n\n\t\tconst newTemplate = await createTemplate( {\n\t\t\tslug: cleanForSlug( title || DEFAULT_TITLE ),\n\t\t\tcontent: newTemplateContent,\n\t\t\ttitle: title || DEFAULT_TITLE,\n\t\t} );\n\n\t\tsetIsBusy( false );\n\t\tonNavigateToEntityRecord( {\n\t\t\tpostId: newTemplate.id,\n\t\t\tpostType: 'wp_template',\n\t\t} );\n\t\tcancel();\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ __( 'Create custom template' ) }\n\t\t\tonRequestClose={ cancel }\n\t\t>\n\t\t\t<form\n\t\t\t\tclassName=\"editor-post-template__create-form\"\n\t\t\t\tonSubmit={ submit }\n\t\t\t>\n\t\t\t\t<VStack spacing=\"3\">\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\t\tplaceholder={ DEFAULT_TITLE }\n\t\t\t\t\t\tdisabled={ isBusy }\n\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t'Describe the template, e.g. \"Post with sidebar\". A custom template can be manually applied to any post or page.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t<Button variant=\"tertiary\" onClick={ cancel }>\n\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tisBusy={ isBusy }\n\t\t\t\t\t\t\taria-disabled={ isBusy }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Create' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport function useEditedPostContext() {\n\treturn useSelect( ( select ) => {\n\t\tconst { getCurrentPostId, getCurrentPostType } = select( editorStore );\n\t\treturn {\n\t\t\tpostId: getCurrentPostId(),\n\t\t\tpostType: getCurrentPostType(),\n\t\t};\n\t}, [] );\n}\nexport function useAllowSwitchingTemplates() {\n\tconst { postType, postId } = useEditedPostContext();\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord, getEntityRecords } = select( coreStore );\n\t\t\tconst siteSettings = getEntityRecord( 'root', 'site' );\n\t\t\tconst templates = getEntityRecords( 'postType', 'wp_template', {\n\t\t\t\tper_page: -1,\n\t\t\t} );\n\t\t\tconst isPostsPage = +postId === siteSettings?.page_for_posts;\n\t\t\t// If current page is set front page or posts page, we also need\n\t\t\t// to check if the current theme has a template for it. If not\n\t\t\tconst isFrontPage =\n\t\t\t\tpostType === 'page' &&\n\t\t\t\t+postId === siteSettings?.page_on_front &&\n\t\t\t\ttemplates?.some( ( { slug } ) => slug === 'front-page' );\n\t\t\treturn ! isPostsPage && ! isFrontPage;\n\t\t},\n\t\t[ postId, postType ]\n\t);\n}\n\nfunction useTemplates( postType ) {\n\treturn useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getEntityRecords( 'postType', 'wp_template', {\n\t\t\t\tper_page: -1,\n\t\t\t\tpost_type: postType,\n\t\t\t} ),\n\t\t[ postType ]\n\t);\n}\n\nexport function useAvailableTemplates( postType ) {\n\tconst currentTemplateSlug = useCurrentTemplateSlug();\n\tconst allowSwitchingTemplate = useAllowSwitchingTemplates();\n\tconst templates = useTemplates( postType );\n\treturn useMemo(\n\t\t() =>\n\t\t\tallowSwitchingTemplate &&\n\t\t\ttemplates?.filter(\n\t\t\t\t( template ) =>\n\t\t\t\t\ttemplate.is_custom &&\n\t\t\t\t\ttemplate.slug !== currentTemplateSlug &&\n\t\t\t\t\t!! template.content.raw // Skip empty templates.\n\t\t\t),\n\t\t[ templates, currentTemplateSlug, allowSwitchingTemplate ]\n\t);\n}\n\nexport function useCurrentTemplateSlug() {\n\tconst { postType, postId } = useEditedPostContext();\n\tconst templates = useTemplates( postType );\n\tconst entityTemplate = useSelect(\n\t\t( select ) => {\n\t\t\tconst post = select( coreStore ).getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tpostType,\n\t\t\t\tpostId\n\t\t\t);\n\t\t\treturn post?.template;\n\t\t},\n\t\t[ postType, postId ]\n\t);\n\n\tif ( ! entityTemplate ) {\n\t\treturn;\n\t}\n\t// If a page has a `template` set and is not included in the list\n\t// of the theme's templates, do not return it, in order to resolve\n\t// to the current theme's default template.\n\treturn templates?.find( ( template ) => template.slug === entityTemplate )\n\t\t?.slug;\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { SelectControl, Dropdown, Button, Notice } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\nimport { useState, useMemo } from '@wordpress/element';\nimport { addTemplate } from '@wordpress/icons';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport CreateNewTemplateModal from './create-new-template-modal';\nimport { useAllowSwitchingTemplates } from './hooks';\n\nconst POPOVER_PROPS = {\n\tclassName: 'editor-post-template__dropdown',\n\tplacement: 'bottom-start',\n};\n\nfunction PostTemplateToggle( { isOpen, onClick } ) {\n\tconst templateTitle = useSelect( ( select ) => {\n\t\tconst templateSlug =\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'template' );\n\n\t\tconst { supportsTemplateMode, availableTemplates } =\n\t\t\tselect( editorStore ).getEditorSettings();\n\t\tif ( ! supportsTemplateMode && availableTemplates[ templateSlug ] ) {\n\t\t\treturn availableTemplates[ templateSlug ];\n\t\t}\n\t\tconst template =\n\t\t\tselect( coreStore ).canUser( 'create', 'templates' ) &&\n\t\t\tselect( editorStore ).getCurrentTemplateId();\n\t\treturn (\n\t\t\ttemplate?.title ||\n\t\t\ttemplate?.slug ||\n\t\t\tavailableTemplates?.[ templateSlug ]\n\t\t);\n\t}, [] );\n\n\treturn (\n\t\t<Button\n\t\t\t__next40pxDefaultSize\n\t\t\tclassName=\"edit-post-post-template__toggle\"\n\t\t\tvariant=\"tertiary\"\n\t\t\taria-expanded={ isOpen }\n\t\t\taria-label={ __( 'Template options' ) }\n\t\t\tonClick={ onClick }\n\t\t>\n\t\t\t{ templateTitle ?? __( 'Default template' ) }\n\t\t</Button>\n\t);\n}\n\nfunction PostTemplateDropdownContent( { onClose } ) {\n\tconst allowSwitchingTemplate = useAllowSwitchingTemplates();\n\tconst {\n\t\tavailableTemplates,\n\t\tfetchedTemplates,\n\t\tselectedTemplateSlug,\n\t\tcanCreate,\n\t\tcanEdit,\n\t\tcurrentTemplateId,\n\t\tonNavigateToEntityRecord,\n\t\tgetEditorSettings,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canUser, getEntityRecords } = select( coreStore );\n\t\t\tconst editorSettings = select( editorStore ).getEditorSettings();\n\t\t\tconst canCreateTemplates = canUser( 'create', 'templates' );\n\t\t\tconst _currentTemplateId =\n\t\t\t\tselect( editorStore ).getCurrentTemplateId();\n\t\t\treturn {\n\t\t\t\tavailableTemplates: editorSettings.availableTemplates,\n\t\t\t\tfetchedTemplates: canCreateTemplates\n\t\t\t\t\t? getEntityRecords( 'postType', 'wp_template', {\n\t\t\t\t\t\t\tpost_type:\n\t\t\t\t\t\t\t\tselect( editorStore ).getCurrentPostType(),\n\t\t\t\t\t\t\tper_page: -1,\n\t\t\t\t\t  } )\n\t\t\t\t\t: undefined,\n\t\t\t\tselectedTemplateSlug:\n\t\t\t\t\tselect( editorStore ).getEditedPostAttribute( 'template' ),\n\t\t\t\tcanCreate:\n\t\t\t\t\tallowSwitchingTemplate &&\n\t\t\t\t\tcanCreateTemplates &&\n\t\t\t\t\teditorSettings.supportsTemplateMode,\n\t\t\t\tcanEdit:\n\t\t\t\t\tallowSwitchingTemplate &&\n\t\t\t\t\tcanCreateTemplates &&\n\t\t\t\t\teditorSettings.supportsTemplateMode &&\n\t\t\t\t\t!! _currentTemplateId,\n\t\t\t\tcurrentTemplateId: _currentTemplateId,\n\t\t\t\tonNavigateToEntityRecord:\n\t\t\t\t\teditorSettings.onNavigateToEntityRecord,\n\t\t\t\tgetEditorSettings: select( editorStore ).getEditorSettings,\n\t\t\t};\n\t\t},\n\t\t[ allowSwitchingTemplate ]\n\t);\n\n\tconst options = useMemo(\n\t\t() =>\n\t\t\tObject.entries( {\n\t\t\t\t...availableTemplates,\n\t\t\t\t...Object.fromEntries(\n\t\t\t\t\t( fetchedTemplates ?? [] ).map( ( { slug, title } ) => [\n\t\t\t\t\t\tslug,\n\t\t\t\t\t\ttitle.rendered,\n\t\t\t\t\t] )\n\t\t\t\t),\n\t\t\t} ).map( ( [ slug, title ] ) => ( { value: slug, label: title } ) ),\n\t\t[ availableTemplates, fetchedTemplates ]\n\t);\n\n\tconst selectedOption =\n\t\toptions.find( ( option ) => option.value === selectedTemplateSlug ) ??\n\t\toptions.find( ( option ) => ! option.value ); // The default option has '' value.\n\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\tconst [ isCreateModalOpen, setIsCreateModalOpen ] = useState( false );\n\n\treturn (\n\t\t<div className=\"editor-post-template__classic-theme-dropdown\">\n\t\t\t<InspectorPopoverHeader\n\t\t\t\ttitle={ __( 'Template' ) }\n\t\t\t\thelp={ __(\n\t\t\t\t\t'Templates define the way content is displayed when viewing your site.'\n\t\t\t\t) }\n\t\t\t\tactions={\n\t\t\t\t\tcanCreate\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ticon: addTemplate,\n\t\t\t\t\t\t\t\t\tlabel: __( 'Add template' ),\n\t\t\t\t\t\t\t\t\tonClick: () => setIsCreateModalOpen( true ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: []\n\t\t\t\t}\n\t\t\t\tonClose={ onClose }\n\t\t\t/>\n\t\t\t{ ! allowSwitchingTemplate ? (\n\t\t\t\t<Notice status=\"warning\" isDismissible={ false }>\n\t\t\t\t\t{ __( 'The posts page template cannot be changed.' ) }\n\t\t\t\t</Notice>\n\t\t\t) : (\n\t\t\t\t<SelectControl\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\thideLabelFromVision\n\t\t\t\t\tlabel={ __( 'Template' ) }\n\t\t\t\t\tvalue={ selectedOption?.value ?? '' }\n\t\t\t\t\toptions={ options }\n\t\t\t\t\tonChange={ ( slug ) =>\n\t\t\t\t\t\teditPost( { template: slug || '' } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ canEdit && onNavigateToEntityRecord && (\n\t\t\t\t<p>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tonNavigateToEntityRecord( {\n\t\t\t\t\t\t\t\tpostId: currentTemplateId,\n\t\t\t\t\t\t\t\tpostType: 'wp_template',\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t'Editing template. Changes made here affect all posts and pages that use the template.'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: __( 'Go back' ),\n\t\t\t\t\t\t\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\t\t\t\t\t\t\tgetEditorSettings().onNavigateToPreviousEntityRecord(),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Edit template' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</p>\n\t\t\t) }\n\t\t\t{ isCreateModalOpen && (\n\t\t\t\t<CreateNewTemplateModal\n\t\t\t\t\tonClose={ () => setIsCreateModalOpen( false ) }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nfunction ClassicThemeControl() {\n\treturn (\n\t\t<Dropdown\n\t\t\tpopoverProps={ POPOVER_PROPS }\n\t\t\tfocusOnMount\n\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t<PostTemplateToggle isOpen={ isOpen } onClick={ onToggle } />\n\t\t\t) }\n\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t<PostTemplateDropdownContent onClose={ onClose } />\n\t\t\t) }\n\t\t/>\n\t);\n}\n\nexport default ClassicThemeControl;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","/**\n * WordPress dependencies\n */\nimport { compose, ifCondition } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { privateApis as preferencesPrivateApis } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nconst { PreferenceBaseOption } = unlock( preferencesPrivateApis );\n\nexport default compose(\n\twithSelect( ( select, { panelName } ) => {\n\t\tconst { isEditorPanelEnabled, isEditorPanelRemoved } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\tisRemoved: isEditorPanelRemoved( panelName ),\n\t\t\tisChecked: isEditorPanelEnabled( panelName ),\n\t\t};\n\t} ),\n\tifCondition( ( { isRemoved } ) => ! isRemoved ),\n\twithDispatch( ( dispatch, { panelName } ) => ( {\n\t\tonChange: () =>\n\t\t\tdispatch( editorStore ).toggleEditorPanelEnabled( panelName ),\n\t} ) )\n)( PreferenceBaseOption );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"warning\"];","/**\n * WordPress dependencies\n */\nimport { createSlotFill } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport EnablePanelOption from './enable-panel';\n\nconst { Fill, Slot } = createSlotFill(\n\t'EnablePluginDocumentSettingPanelOption'\n);\n\nconst EnablePluginDocumentSettingPanelOption = ( { label, panelName } ) => (\n\t<Fill>\n\t\t<EnablePanelOption label={ label } panelName={ panelName } />\n\t</Fill>\n);\n\nEnablePluginDocumentSettingPanelOption.Slot = Slot;\n\nexport default EnablePluginDocumentSettingPanelOption;\n","/**\n * WordPress dependencies\n */\nimport { createSlotFill, PanelBody } from '@wordpress/components';\nimport { usePluginContext } from '@wordpress/plugins';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport warning from '@wordpress/warning';\n\n/**\n * Internal dependencies\n */\nimport EnablePluginDocumentSettingPanelOption from '../preferences-modal/enable-plugin-document-setting-panel';\nimport { store as editorStore } from '../../store';\n\nconst { Fill, Slot } = createSlotFill( 'PluginDocumentSettingPanel' );\n\n/**\n * Renders items below the Status & Availability panel in the Document Sidebar.\n *\n * @param {Object}                props                                 Component properties.\n * @param {string}                props.name                            Required. A machine-friendly name for the panel.\n * @param {string}                [props.className]                     An optional class name added to the row.\n * @param {string}                [props.title]                         The title of the panel\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered when the sidebar is pinned to toolbar.\n * @param {Element}               props.children                        Children to be rendered\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var el = React.createElement;\n * var __ = wp.i18n.__;\n * var registerPlugin = wp.plugins.registerPlugin;\n * var PluginDocumentSettingPanel = wp.editor.PluginDocumentSettingPanel;\n *\n * function MyDocumentSettingPlugin() {\n * \treturn el(\n * \t\tPluginDocumentSettingPanel,\n * \t\t{\n * \t\t\tclassName: 'my-document-setting-plugin',\n * \t\t\ttitle: 'My Panel',\n * \t\t\tname: 'my-panel',\n * \t\t},\n * \t\t__( 'My Document Setting Panel' )\n * \t);\n * }\n *\n * registerPlugin( 'my-document-setting-plugin', {\n * \t\trender: MyDocumentSettingPlugin\n * } );\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { registerPlugin } from '@wordpress/plugins';\n * import { PluginDocumentSettingPanel } from '@wordpress/editor';\n *\n * const MyDocumentSettingTest = () => (\n * \t\t<PluginDocumentSettingPanel className=\"my-document-setting-plugin\" title=\"My Panel\" name=\"my-panel\">\n *\t\t\t<p>My Document Setting Panel</p>\n *\t\t</PluginDocumentSettingPanel>\n *\t);\n *\n *  registerPlugin( 'document-setting-test', { render: MyDocumentSettingTest } );\n * ```\n *\n * @return {Component} The component to be rendered.\n */\nconst PluginDocumentSettingPanel = ( {\n\tname,\n\tclassName,\n\ttitle,\n\ticon,\n\tchildren,\n} ) => {\n\tconst { name: pluginName } = usePluginContext();\n\tconst panelName = `${ pluginName }/${ name }`;\n\tconst { opened, isEnabled } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { isEditorPanelOpened, isEditorPanelEnabled } =\n\t\t\t\tselect( editorStore );\n\n\t\t\treturn {\n\t\t\t\topened: isEditorPanelOpened( panelName ),\n\t\t\t\tisEnabled: isEditorPanelEnabled( panelName ),\n\t\t\t};\n\t\t},\n\t\t[ panelName ]\n\t);\n\tconst { toggleEditorPanelOpened } = useDispatch( editorStore );\n\n\tif ( undefined === name ) {\n\t\twarning( 'PluginDocumentSettingPanel requires a name property.' );\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<EnablePluginDocumentSettingPanelOption\n\t\t\t\tlabel={ title }\n\t\t\t\tpanelName={ panelName }\n\t\t\t/>\n\t\t\t<Fill>\n\t\t\t\t{ isEnabled && (\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\ttitle={ title }\n\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\topened={ opened }\n\t\t\t\t\t\tonToggle={ () => toggleEditorPanelOpened( panelName ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ children }\n\t\t\t\t\t</PanelBody>\n\t\t\t\t) }\n\t\t\t</Fill>\n\t\t</>\n\t);\n};\n\nPluginDocumentSettingPanel.Slot = Slot;\n\nexport default PluginDocumentSettingPanel;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst check = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M16.7 7.1l-6.3 8.5-3.3-2.5-.9 1.2 4.5 3.4L17.9 8z\" />\n\t</SVG>\n);\n\nexport default check;\n","/**\n * WordPress dependencies\n */\nimport { useMemo, useState, useCallback } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { __experimentalBlockPatternsList as BlockPatternsList } from '@wordpress/block-editor';\nimport { MenuItem, Modal } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { parse } from '@wordpress/blocks';\nimport { useAsyncList } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { useAvailableTemplates, useEditedPostContext } from './hooks';\n\nexport default function SwapTemplateButton( { onClick } ) {\n\tconst [ showModal, setShowModal ] = useState( false );\n\tconst onClose = useCallback( () => {\n\t\tsetShowModal( false );\n\t}, [] );\n\tconst { postType, postId } = useEditedPostContext();\n\tconst availableTemplates = useAvailableTemplates( postType );\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\tif ( ! availableTemplates?.length ) {\n\t\treturn null;\n\t}\n\tconst onTemplateSelect = async ( template ) => {\n\t\teditEntityRecord(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId,\n\t\t\t{ template: template.name },\n\t\t\t{ undoIgnore: true }\n\t\t);\n\t\tonClose(); // Close the template suggestions modal first.\n\t\tonClick();\n\t};\n\treturn (\n\t\t<>\n\t\t\t<MenuItem onClick={ () => setShowModal( true ) }>\n\t\t\t\t{ __( 'Swap template' ) }\n\t\t\t</MenuItem>\n\t\t\t{ showModal && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={ __( 'Choose a template' ) }\n\t\t\t\t\tonRequestClose={ onClose }\n\t\t\t\t\toverlayClassName=\"editor-post-template__swap-template-modal\"\n\t\t\t\t\tisFullScreen\n\t\t\t\t>\n\t\t\t\t\t<div className=\"editor-post-template__swap-template-modal-content\">\n\t\t\t\t\t\t<TemplatesList\n\t\t\t\t\t\t\tpostType={ postType }\n\t\t\t\t\t\t\tonSelect={ onTemplateSelect }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nfunction TemplatesList( { postType, onSelect } ) {\n\tconst availableTemplates = useAvailableTemplates( postType );\n\tconst templatesAsPatterns = useMemo(\n\t\t() =>\n\t\t\tavailableTemplates.map( ( template ) => ( {\n\t\t\t\tname: template.slug,\n\t\t\t\tblocks: parse( template.content.raw ),\n\t\t\t\ttitle: decodeEntities( template.title.rendered ),\n\t\t\t\tid: template.id,\n\t\t\t} ) ),\n\t\t[ availableTemplates ]\n\t);\n\tconst shownTemplates = useAsyncList( templatesAsPatterns );\n\treturn (\n\t\t<BlockPatternsList\n\t\t\tlabel={ __( 'Templates' ) }\n\t\t\tblockPatterns={ templatesAsPatterns }\n\t\t\tshownPatterns={ shownTemplates }\n\t\t\tonClickPattern={ onSelect }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tuseAllowSwitchingTemplates,\n\tuseCurrentTemplateSlug,\n\tuseEditedPostContext,\n} from './hooks';\n\nexport default function ResetDefaultTemplate( { onClick } ) {\n\tconst currentTemplateSlug = useCurrentTemplateSlug();\n\tconst allowSwitchingTemplate = useAllowSwitchingTemplates();\n\tconst { postType, postId } = useEditedPostContext();\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\t// The default template in a post is indicated by an empty string.\n\tif ( ! currentTemplateSlug || ! allowSwitchingTemplate ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={ () => {\n\t\t\t\teditEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\tpostType,\n\t\t\t\t\tpostId,\n\t\t\t\t\t{ template: '' },\n\t\t\t\t\t{ undoIgnore: true }\n\t\t\t\t);\n\t\t\t\tonClick();\n\t\t\t} }\n\t\t>\n\t\t\t{ __( 'Use default template' ) }\n\t\t</MenuItem>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport CreateNewTemplateModal from './create-new-template-modal';\nimport { useAllowSwitchingTemplates } from './hooks';\n\nexport default function CreateNewTemplate( { onClick } ) {\n\tconst { canCreateTemplates } = useSelect( ( select ) => {\n\t\tconst { canUser } = select( coreStore );\n\t\treturn {\n\t\t\tcanCreateTemplates: canUser( 'create', 'templates' ),\n\t\t};\n\t}, [] );\n\tconst [ isCreateModalOpen, setIsCreateModalOpen ] = useState( false );\n\tconst allowSwitchingTemplate = useAllowSwitchingTemplates();\n\n\t// The default template in a post is indicated by an empty string.\n\tif ( ! canCreateTemplates || ! allowSwitchingTemplate ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<>\n\t\t\t<MenuItem\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tsetIsCreateModalOpen( true );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ __( 'Create new template' ) }\n\t\t\t</MenuItem>\n\n\t\t\t{ isCreateModalOpen && (\n\t\t\t\t<CreateNewTemplateModal\n\t\t\t\t\tonClose={ () => {\n\t\t\t\t\t\tsetIsCreateModalOpen( false );\n\t\t\t\t\t\tonClick();\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { DropdownMenu, MenuGroup, MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useEntityRecord } from '@wordpress/core-data';\nimport { check } from '@wordpress/icons';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport SwapTemplateButton from './swap-template-button';\nimport ResetDefaultTemplate from './reset-default-template';\nimport { unlock } from '../../lock-unlock';\nimport CreateNewTemplate from './create-new-template';\n\nconst POPOVER_PROPS = {\n\tclassName: 'editor-post-template__dropdown',\n\tplacement: 'bottom-start',\n};\n\nexport default function BlockThemeControl( { id } ) {\n\tconst {\n\t\tisTemplateHidden,\n\t\tonNavigateToEntityRecord,\n\t\tgetEditorSettings,\n\t\thasGoBack,\n\t} = useSelect( ( select ) => {\n\t\tconst { getRenderingMode, getEditorSettings: _getEditorSettings } =\n\t\t\tunlock( select( editorStore ) );\n\t\tconst editorSettings = _getEditorSettings();\n\t\treturn {\n\t\t\tisTemplateHidden: getRenderingMode() === 'post-only',\n\t\t\tonNavigateToEntityRecord: editorSettings.onNavigateToEntityRecord,\n\t\t\tgetEditorSettings: _getEditorSettings,\n\t\t\thasGoBack: editorSettings.hasOwnProperty(\n\t\t\t\t'onNavigateToPreviousEntityRecord'\n\t\t\t),\n\t\t};\n\t}, [] );\n\n\tconst { editedRecord: template, hasResolved } = useEntityRecord(\n\t\t'postType',\n\t\t'wp_template',\n\t\tid\n\t);\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\tconst { setRenderingMode } = useDispatch( editorStore );\n\n\tif ( ! hasResolved ) {\n\t\treturn null;\n\t}\n\n\t// The site editor does not have a `onNavigateToPreviousEntityRecord` setting as it uses its own routing\n\t// and assigns its own backlink to focusMode pages.\n\tconst notificationAction = hasGoBack\n\t\t? [\n\t\t\t\t{\n\t\t\t\t\tlabel: __( 'Go back' ),\n\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\tgetEditorSettings().onNavigateToPreviousEntityRecord(),\n\t\t\t\t},\n\t\t  ]\n\t\t: undefined;\n\treturn (\n\t\t<DropdownMenu\n\t\t\tpopoverProps={ POPOVER_PROPS }\n\t\t\tfocusOnMount\n\t\t\ttoggleProps={ {\n\t\t\t\t__next40pxDefaultSize: true,\n\t\t\t\tvariant: 'tertiary',\n\t\t\t} }\n\t\t\tlabel={ __( 'Template options' ) }\n\t\t\ttext={ decodeEntities( template.title ) }\n\t\t\ticon={ null }\n\t\t>\n\t\t\t{ ( { onClose } ) => (\n\t\t\t\t<>\n\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tonNavigateToEntityRecord( {\n\t\t\t\t\t\t\t\t\tpostId: template.id,\n\t\t\t\t\t\t\t\t\tpostType: 'wp_template',\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t'Editing template. Changes made here affect all posts and pages that use the template.'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\t\t\t\tactions: notificationAction,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Edit template' ) }\n\t\t\t\t\t\t</MenuItem>\n\n\t\t\t\t\t\t<SwapTemplateButton onClick={ onClose } />\n\t\t\t\t\t\t<ResetDefaultTemplate onClick={ onClose } />\n\t\t\t\t\t\t<CreateNewTemplate onClick={ onClose } />\n\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\ticon={ ! isTemplateHidden ? check : undefined }\n\t\t\t\t\t\t\tisSelected={ ! isTemplateHidden }\n\t\t\t\t\t\t\trole=\"menuitemcheckbox\"\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tsetRenderingMode(\n\t\t\t\t\t\t\t\t\tisTemplateHidden\n\t\t\t\t\t\t\t\t\t\t? 'template-locked'\n\t\t\t\t\t\t\t\t\t\t: 'post-only'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Template preview' ) }\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</MenuGroup>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</DropdownMenu>\n\t);\n}\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __experimentalHStack as HStack } from '@wordpress/components';\nimport { forwardRef } from '@wordpress/element';\n\nconst PostPanelRow = forwardRef( ( { className, label, children }, ref ) => {\n\treturn (\n\t\t<HStack\n\t\t\tclassName={ classnames( 'editor-post-panel__row', className ) }\n\t\t\tref={ ref }\n\t\t>\n\t\t\t{ label && (\n\t\t\t\t<div className=\"editor-post-panel__row-label\">{ label }</div>\n\t\t\t) }\n\t\t\t<div className=\"editor-post-panel__row-control\">{ children }</div>\n\t\t</HStack>\n\t);\n} );\n\nexport default PostPanelRow;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport ClassicThemeControl from './classic-theme';\nimport BlockThemeControl from './block-theme';\nimport PostPanelRow from '../post-panel-row';\n\nexport default function PostTemplatePanel() {\n\tconst { templateId, isBlockTheme } = useSelect( ( select ) => {\n\t\tconst { getCurrentTemplateId, getEditorSettings } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\ttemplateId: getCurrentTemplateId(),\n\t\t\tisBlockTheme: getEditorSettings().__unstableIsBlockBasedTheme,\n\t\t};\n\t}, [] );\n\n\tconst isVisible = useSelect( ( select ) => {\n\t\tconst postTypeSlug = select( editorStore ).getCurrentPostType();\n\t\tconst postType = select( coreStore ).getPostType( postTypeSlug );\n\t\tif ( ! postType?.viewable ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst settings = select( editorStore ).getEditorSettings();\n\t\tconst hasTemplates =\n\t\t\t!! settings.availableTemplates &&\n\t\t\tObject.keys( settings.availableTemplates ).length > 0;\n\t\tif ( hasTemplates ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( ! settings.supportsTemplateMode ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst canCreateTemplates =\n\t\t\tselect( coreStore ).canUser( 'create', 'templates' ) ?? false;\n\t\treturn canCreateTemplates;\n\t}, [] );\n\n\tconst canViewTemplates = useSelect( ( select ) => {\n\t\treturn select( coreStore ).canUser( 'read', 'templates' ) ?? false;\n\t}, [] );\n\n\tif ( ( ! isBlockTheme || ! canViewTemplates ) && isVisible ) {\n\t\treturn (\n\t\t\t<PostPanelRow label={ __( 'Template' ) }>\n\t\t\t\t<ClassicThemeControl />\n\t\t\t</PostPanelRow>\n\t\t);\n\t}\n\n\tif ( isBlockTheme && !! templateId ) {\n\t\treturn (\n\t\t\t<PostPanelRow label={ __( 'Template' ) }>\n\t\t\t\t<BlockThemeControl id={ templateId } />\n\t\t\t</PostPanelRow>\n\t\t);\n\t}\n\treturn null;\n}\n","export const BASE_QUERY = {\n\t_fields: 'id,name',\n\tcontext: 'view', // Allows non-admins to perform requests.\n};\n\nexport const AUTHORS_QUERY = {\n\twho: 'authors',\n\tper_page: 50,\n\t...BASE_QUERY,\n};\n","/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { AUTHORS_QUERY, BASE_QUERY } from './constants';\n\nexport function useAuthorsQuery( search ) {\n\tconst { authorId, authors, postAuthor } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getUser, getUsers } = select( coreStore );\n\t\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\t\tconst _authorId = getEditedPostAttribute( 'author' );\n\t\t\tconst query = { ...AUTHORS_QUERY };\n\n\t\t\tif ( search ) {\n\t\t\t\tquery.search = search;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tauthorId: _authorId,\n\t\t\t\tauthors: getUsers( query ),\n\t\t\t\tpostAuthor: getUser( _authorId, BASE_QUERY ),\n\t\t\t};\n\t\t},\n\t\t[ search ]\n\t);\n\n\tconst authorOptions = useMemo( () => {\n\t\tconst fetchedAuthors = ( authors ?? [] ).map( ( author ) => {\n\t\t\treturn {\n\t\t\t\tvalue: author.id,\n\t\t\t\tlabel: decodeEntities( author.name ),\n\t\t\t};\n\t\t} );\n\n\t\t// Ensure the current author is included in the dropdown list.\n\t\tconst foundAuthor = fetchedAuthors.findIndex(\n\t\t\t( { value } ) => postAuthor?.id === value\n\t\t);\n\n\t\tif ( foundAuthor < 0 && postAuthor ) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tvalue: postAuthor.id,\n\t\t\t\t\tlabel: decodeEntities( postAuthor.name ),\n\t\t\t\t},\n\t\t\t\t...fetchedAuthors,\n\t\t\t];\n\t\t}\n\n\t\treturn fetchedAuthors;\n\t}, [ authors, postAuthor ] );\n\n\treturn { authorId, authorOptions };\n}\n","/**\n * WordPress dependencies\n */\nimport { debounce } from '@wordpress/compose';\nimport { useState } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { ComboboxControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { useAuthorsQuery } from './hook';\n\nexport default function PostAuthorCombobox() {\n\tconst [ fieldValue, setFieldValue ] = useState();\n\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { authorId, authorOptions } = useAuthorsQuery( fieldValue );\n\n\t/**\n\t * Handle author selection.\n\t *\n\t * @param {number} postAuthorId The selected Author.\n\t */\n\tconst handleSelect = ( postAuthorId ) => {\n\t\tif ( ! postAuthorId ) {\n\t\t\treturn;\n\t\t}\n\t\teditPost( { author: postAuthorId } );\n\t};\n\n\t/**\n\t * Handle user input.\n\t *\n\t * @param {string} inputValue The current value of the input field.\n\t */\n\tconst handleKeydown = ( inputValue ) => {\n\t\tsetFieldValue( inputValue );\n\t};\n\n\treturn (\n\t\t<ComboboxControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\t__next40pxDefaultSize\n\t\t\tlabel={ __( 'Author' ) }\n\t\t\toptions={ authorOptions }\n\t\t\tvalue={ authorId }\n\t\t\tonFilterValueChange={ debounce( handleKeydown, 300 ) }\n\t\t\tonChange={ handleSelect }\n\t\t\tallowReset={ false }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch } from '@wordpress/data';\nimport { SelectControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { useAuthorsQuery } from './hook';\n\nexport default function PostAuthorSelect() {\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { authorId, authorOptions } = useAuthorsQuery();\n\n\tconst setAuthorId = ( value ) => {\n\t\tconst author = Number( value );\n\t\teditPost( { author } );\n\t};\n\n\treturn (\n\t\t<SelectControl\n\t\t\t__next40pxDefaultSize\n\t\t\t__nextHasNoMarginBottom\n\t\t\tclassName=\"post-author-selector\"\n\t\t\tlabel={ __( 'Author' ) }\n\t\t\toptions={ authorOptions }\n\t\t\tonChange={ setAuthorId }\n\t\t\tvalue={ authorId }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostAuthorCombobox from './combobox';\nimport PostAuthorSelect from './select';\nimport { AUTHORS_QUERY } from './constants';\n\nconst minimumUsersForCombobox = 25;\n\nfunction PostAuthor() {\n\tconst showCombobox = useSelect( ( select ) => {\n\t\tconst authors = select( coreStore ).getUsers( AUTHORS_QUERY );\n\n\t\treturn authors?.length >= minimumUsersForCombobox;\n\t}, [] );\n\n\tif ( showCombobox ) {\n\t\treturn <PostAuthorCombobox />;\n\t}\n\treturn <PostAuthorSelect />;\n}\n\nexport default PostAuthor;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport { store as editorStore } from '../../store';\nimport { AUTHORS_QUERY } from './constants';\n\nexport default function PostAuthorCheck( { children } ) {\n\tconst { hasAssignAuthorAction, hasAuthors } = useSelect( ( select ) => {\n\t\tconst post = select( editorStore ).getCurrentPost();\n\t\tconst authors = select( coreStore ).getUsers( AUTHORS_QUERY );\n\t\treturn {\n\t\t\thasAssignAuthorAction:\n\t\t\t\tpost._links?.[ 'wp:action-assign-author' ] ?? false,\n\t\t\thasAuthors: authors?.length >= 1,\n\t\t};\n\t}, [] );\n\n\tif ( ! hasAssignAuthorAction || ! hasAuthors ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"author\">\n\t\t\t{ children }\n\t\t</PostTypeSupportCheck>\n\t);\n}\n","/**\n * Internal dependencies\n */\nimport PostAuthorCheck from './check';\nimport PostAuthorForm from './index';\nimport PostPanelRow from '../post-panel-row';\n\nexport function PostAuthor() {\n\treturn (\n\t\t<PostAuthorCheck>\n\t\t\t<PostPanelRow className=\"editor-post-author__panel\">\n\t\t\t\t<PostAuthorForm />\n\t\t\t</PostPanelRow>\n\t\t</PostAuthorCheck>\n\t);\n}\n\nexport default PostAuthor;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { CheckboxControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction PostComments() {\n\tconst commentStatus = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'comment_status' ) ??\n\t\t\t'open',\n\t\t[]\n\t);\n\tconst { editPost } = useDispatch( editorStore );\n\tconst onToggleComments = () =>\n\t\teditPost( {\n\t\t\tcomment_status: commentStatus === 'open' ? 'closed' : 'open',\n\t\t} );\n\n\treturn (\n\t\t<CheckboxControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\tlabel={ __( 'Allow comments' ) }\n\t\t\tchecked={ commentStatus === 'open' }\n\t\t\tonChange={ onToggleComments }\n\t\t/>\n\t);\n}\n\nexport default PostComments;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { CheckboxControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction PostPingbacks() {\n\tconst pingStatus = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'ping_status' ) ??\n\t\t\t'open',\n\t\t[]\n\t);\n\tconst { editPost } = useDispatch( editorStore );\n\tconst onTogglePingback = () =>\n\t\teditPost( {\n\t\t\tping_status: pingStatus === 'open' ? 'closed' : 'open',\n\t\t} );\n\n\treturn (\n\t\t<CheckboxControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\tlabel={ __( 'Allow pingbacks & trackbacks' ) }\n\t\t\tchecked={ pingStatus === 'open' }\n\t\t\tonChange={ onTogglePingback }\n\t\t/>\n\t);\n}\n\nexport default PostPingbacks;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, PanelRow } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport PostComments from '../post-comments';\nimport PostPingbacks from '../post-pingbacks';\n\nconst PANEL_NAME = 'discussion-panel';\n\nfunction PostDiscussionPanel() {\n\tconst { isEnabled, isOpened } = useSelect( ( select ) => {\n\t\tconst { isEditorPanelEnabled, isEditorPanelOpened } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\n\t\t};\n\t}, [] );\n\n\tconst { toggleEditorPanelOpened } = useDispatch( editorStore );\n\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys={ [ 'comments', 'trackbacks' ] }>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ __( 'Discussion' ) }\n\t\t\t\topened={ isOpened }\n\t\t\t\tonToggle={ () => toggleEditorPanelOpened( PANEL_NAME ) }\n\t\t\t>\n\t\t\t\t<PostTypeSupportCheck supportKeys=\"comments\">\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<PostComments />\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PostTypeSupportCheck>\n\n\t\t\t\t<PostTypeSupportCheck supportKeys=\"trackbacks\">\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<PostPingbacks />\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PostTypeSupportCheck>\n\t\t\t</PanelBody>\n\t\t</PostTypeSupportCheck>\n\t);\n}\n\nexport default PostDiscussionPanel;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { ExternalLink, TextareaControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction PostExcerpt() {\n\tconst excerpt = useSelect(\n\t\t( select ) => select( editorStore ).getEditedPostAttribute( 'excerpt' ),\n\t\t[]\n\t);\n\tconst { editPost } = useDispatch( editorStore );\n\n\treturn (\n\t\t<div className=\"editor-post-excerpt\">\n\t\t\t<TextareaControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Write an excerpt (optional)' ) }\n\t\t\t\tclassName=\"editor-post-excerpt__textarea\"\n\t\t\t\tonChange={ ( value ) => editPost( { excerpt: value } ) }\n\t\t\t\tvalue={ excerpt }\n\t\t\t/>\n\t\t\t<ExternalLink\n\t\t\t\thref={ __(\n\t\t\t\t\t'https://wordpress.org/documentation/article/page-post-settings-sidebar/#excerpt'\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t{ __( 'Learn more about manual excerpts' ) }\n\t\t\t</ExternalLink>\n\t\t</div>\n\t);\n}\n\nexport default PostExcerpt;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport { store as editorStore } from '../../store';\n\nfunction PostExcerptCheck( { children } ) {\n\tconst postType = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\treturn getEditedPostAttribute( 'type' );\n\t}, [] );\n\n\t// This special case is unfortunate, but the REST API of wp_template and wp_template_part\n\t// support the excerpt field throught the \"description\" field rather than \"excerpt\" which means\n\t// the default ExcerptPanel won't work for these.\n\tif ( [ 'wp_template', 'wp_template_part' ].includes( postType ) ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"excerpt\">\n\t\t\t{ children }\n\t\t</PostTypeSupportCheck>\n\t);\n}\n\nexport default PostExcerptCheck;\n","/**\n * Defines as extensibility slot for the Excerpt panel.\n */\n\n/**\n * WordPress dependencies\n */\nimport { createSlotFill, PanelRow } from '@wordpress/components';\n\nconst { Fill, Slot } = createSlotFill( 'PluginPostExcerpt' );\n\n/**\n * Renders a post excerpt panel in the post sidebar.\n *\n * @param {Object}  props             Component properties.\n * @param {string}  [props.className] An optional class name added to the row.\n * @param {Element} props.children    Children to be rendered.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginPostExcerpt = wp.editPost.PluginPostExcerpt;\n *\n * function MyPluginPostExcerpt() {\n * \treturn React.createElement(\n * \t\tPluginPostExcerpt,\n * \t\t{\n * \t\t\tclassName: 'my-plugin-post-excerpt',\n * \t\t},\n * \t\t__( 'Post excerpt custom content' )\n * \t)\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginPostExcerpt } from '@wordpress/edit-post';\n *\n * const MyPluginPostExcerpt = () => (\n * \t<PluginPostExcerpt className=\"my-plugin-post-excerpt\">\n * \t\t{ __( 'Post excerpt custom content' ) }\n * \t</PluginPostExcerpt>\n * );\n * ```\n *\n * @return {Component} The component to be rendered.\n */\nconst PluginPostExcerpt = ( { children, className } ) => {\n\treturn (\n\t\t<Fill>\n\t\t\t<PanelRow className={ className }>{ children }</PanelRow>\n\t\t</Fill>\n\t);\n};\n\nPluginPostExcerpt.Slot = Slot;\n\nexport default PluginPostExcerpt;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PostExcerptForm from './index';\nimport PostExcerptCheck from './check';\nimport PluginPostExcerpt from './plugin';\nimport { store as editorStore } from '../../store';\n\n/**\n * Module Constants\n */\nconst PANEL_NAME = 'post-excerpt';\n\nexport default function PostExcerptPanel() {\n\tconst { isOpened, isEnabled } = useSelect( ( select ) => {\n\t\tconst { isEditorPanelOpened, isEditorPanelEnabled } =\n\t\t\tselect( editorStore );\n\n\t\treturn {\n\t\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t};\n\t}, [] );\n\n\tconst { toggleEditorPanelOpened } = useDispatch( editorStore );\n\tconst toggleExcerptPanel = () => toggleEditorPanelOpened( PANEL_NAME );\n\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostExcerptCheck>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ __( 'Excerpt' ) }\n\t\t\t\topened={ isOpened }\n\t\t\t\tonToggle={ toggleExcerptPanel }\n\t\t\t>\n\t\t\t\t<PluginPostExcerpt.Slot>\n\t\t\t\t\t{ ( fills ) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<PostExcerptForm />\n\t\t\t\t\t\t\t{ fills }\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</PluginPostExcerpt.Slot>\n\t\t\t</PanelBody>\n\t\t</PostExcerptCheck>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blob\"];","/**\n * WordPress dependencies\n */\nimport { withSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport function ThemeSupportCheck( {\n\tthemeSupports,\n\tchildren,\n\tpostType,\n\tsupportKeys,\n} ) {\n\tconst isSupported = (\n\t\tArray.isArray( supportKeys ) ? supportKeys : [ supportKeys ]\n\t).some( ( key ) => {\n\t\tconst supported = themeSupports?.[ key ] ?? false;\n\t\t// 'post-thumbnails' can be boolean or an array of post types.\n\t\t// In the latter case, we need to verify `postType` exists\n\t\t// within `supported`. If `postType` isn't passed, then the check\n\t\t// should fail.\n\t\tif ( 'post-thumbnails' === key && Array.isArray( supported ) ) {\n\t\t\treturn supported.includes( postType );\n\t\t}\n\t\treturn supported;\n\t} );\n\n\tif ( ! isSupported ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n\nexport default withSelect( ( select ) => {\n\tconst { getThemeSupports } = select( coreStore );\n\tconst { getEditedPostAttribute } = select( editorStore );\n\treturn {\n\t\tpostType: getEditedPostAttribute( 'type' ),\n\t\tthemeSupports: getThemeSupports(),\n\t};\n} )( ThemeSupportCheck );\n","/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport ThemeSupportCheck from '../theme-support-check';\n\nfunction PostFeaturedImageCheck( { children } ) {\n\treturn (\n\t\t<ThemeSupportCheck supportKeys=\"post-thumbnails\">\n\t\t\t<PostTypeSupportCheck supportKeys=\"thumbnail\">\n\t\t\t\t{ children }\n\t\t\t</PostTypeSupportCheck>\n\t\t</ThemeSupportCheck>\n\t);\n}\n\nexport default PostFeaturedImageCheck;\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { applyFilters } from '@wordpress/hooks';\nimport {\n\tDropZone,\n\tButton,\n\tSpinner,\n\twithNotices,\n\twithFilters,\n\t__experimentalHStack as HStack,\n} from '@wordpress/components';\nimport { isBlobURL } from '@wordpress/blob';\nimport { useState, useRef } from '@wordpress/element';\nimport { compose } from '@wordpress/compose';\nimport { useSelect, withDispatch, withSelect } from '@wordpress/data';\nimport {\n\tMediaUpload,\n\tMediaUploadCheck,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostFeaturedImageCheck from './check';\nimport { store as editorStore } from '../../store';\n\nconst ALLOWED_MEDIA_TYPES = [ 'image' ];\n\n// Used when labels from post type were not yet loaded or when they are not present.\nconst DEFAULT_FEATURE_IMAGE_LABEL = __( 'Featured image' );\nconst DEFAULT_SET_FEATURE_IMAGE_LABEL = __( 'Set featured image' );\n\nconst instructions = (\n\t<p>\n\t\t{ __(\n\t\t\t'To edit the featured image, you need permission to upload media.'\n\t\t) }\n\t</p>\n);\n\nfunction getMediaDetails( media, postId ) {\n\tif ( ! media ) {\n\t\treturn {};\n\t}\n\n\tconst defaultSize = applyFilters(\n\t\t'editor.PostFeaturedImage.imageSize',\n\t\t'large',\n\t\tmedia.id,\n\t\tpostId\n\t);\n\tif ( defaultSize in ( media?.media_details?.sizes ?? {} ) ) {\n\t\treturn {\n\t\t\tmediaWidth: media.media_details.sizes[ defaultSize ].width,\n\t\t\tmediaHeight: media.media_details.sizes[ defaultSize ].height,\n\t\t\tmediaSourceUrl: media.media_details.sizes[ defaultSize ].source_url,\n\t\t};\n\t}\n\n\t// Use fallbackSize when defaultSize is not available.\n\tconst fallbackSize = applyFilters(\n\t\t'editor.PostFeaturedImage.imageSize',\n\t\t'thumbnail',\n\t\tmedia.id,\n\t\tpostId\n\t);\n\tif ( fallbackSize in ( media?.media_details?.sizes ?? {} ) ) {\n\t\treturn {\n\t\t\tmediaWidth: media.media_details.sizes[ fallbackSize ].width,\n\t\t\tmediaHeight: media.media_details.sizes[ fallbackSize ].height,\n\t\t\tmediaSourceUrl:\n\t\t\t\tmedia.media_details.sizes[ fallbackSize ].source_url,\n\t\t};\n\t}\n\n\t// Use full image size when fallbackSize and defaultSize are not available.\n\treturn {\n\t\tmediaWidth: media.media_details.width,\n\t\tmediaHeight: media.media_details.height,\n\t\tmediaSourceUrl: media.source_url,\n\t};\n}\n\nfunction PostFeaturedImage( {\n\tcurrentPostId,\n\tfeaturedImageId,\n\tonUpdateImage,\n\tonRemoveImage,\n\tmedia,\n\tpostType,\n\tnoticeUI,\n\tnoticeOperations,\n} ) {\n\tconst toggleRef = useRef();\n\tconst [ isLoading, setIsLoading ] = useState( false );\n\tconst { getSettings } = useSelect( blockEditorStore );\n\tconst { mediaSourceUrl } = getMediaDetails( media, currentPostId );\n\n\tfunction onDropFiles( filesList ) {\n\t\tgetSettings().mediaUpload( {\n\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\tfilesList,\n\t\t\tonFileChange( [ image ] ) {\n\t\t\t\tif ( isBlobURL( image?.url ) ) {\n\t\t\t\t\tsetIsLoading( true );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( image ) {\n\t\t\t\t\tonUpdateImage( image );\n\t\t\t\t}\n\t\t\t\tsetIsLoading( false );\n\t\t\t},\n\t\t\tonError( message ) {\n\t\t\t\tnoticeOperations.removeAllNotices();\n\t\t\t\tnoticeOperations.createErrorNotice( message );\n\t\t\t},\n\t\t} );\n\t}\n\n\treturn (\n\t\t<PostFeaturedImageCheck>\n\t\t\t{ noticeUI }\n\t\t\t<div className=\"editor-post-featured-image\">\n\t\t\t\t{ media && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tid={ `editor-post-featured-image-${ featuredImageId }-describedby` }\n\t\t\t\t\t\tclassName=\"hidden\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ media.alt_text &&\n\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t// Translators: %s: The selected image alt text.\n\t\t\t\t\t\t\t\t__( 'Current image: %s' ),\n\t\t\t\t\t\t\t\tmedia.alt_text\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ ! media.alt_text &&\n\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t// Translators: %s: The selected image filename.\n\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t'The current image has no alternative text. The file name is: %s'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tmedia.media_details.sizes?.full?.file ||\n\t\t\t\t\t\t\t\t\tmedia.slug\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t<MediaUploadCheck fallback={ instructions }>\n\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\tpostType?.labels?.featured_image ||\n\t\t\t\t\t\t\tDEFAULT_FEATURE_IMAGE_LABEL\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonSelect={ onUpdateImage }\n\t\t\t\t\t\tunstableFeaturedImageFlow\n\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\tmodalClass=\"editor-post-featured-image__media-modal\"\n\t\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\t\t<div className=\"editor-post-featured-image__container\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tref={ toggleRef }\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t! featuredImageId\n\t\t\t\t\t\t\t\t\t\t\t? 'editor-post-featured-image__toggle'\n\t\t\t\t\t\t\t\t\t\t\t: 'editor-post-featured-image__preview'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t\t\t! featuredImageId\n\t\t\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t\t\t: __( 'Edit or replace the image' )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taria-describedby={\n\t\t\t\t\t\t\t\t\t\t! featuredImageId\n\t\t\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t\t\t: `editor-post-featured-image-${ featuredImageId }-describedby`\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ !! featuredImageId && media && (\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editor-post-featured-image__preview-image\"\n\t\t\t\t\t\t\t\t\t\t\tsrc={ mediaSourceUrl }\n\t\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ isLoading && <Spinner /> }\n\t\t\t\t\t\t\t\t\t{ ! featuredImageId &&\n\t\t\t\t\t\t\t\t\t\t! isLoading &&\n\t\t\t\t\t\t\t\t\t\t( postType?.labels\n\t\t\t\t\t\t\t\t\t\t\t?.set_featured_image ||\n\t\t\t\t\t\t\t\t\t\t\tDEFAULT_SET_FEATURE_IMAGE_LABEL ) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t{ !! featuredImageId && (\n\t\t\t\t\t\t\t\t\t<HStack className=\"editor-post-featured-image__actions\">\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editor-post-featured-image__action\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{ __( 'Replace' ) }\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editor-post-featured-image__action\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\tonRemoveImage();\n\t\t\t\t\t\t\t\t\t\t\t\ttoggleRef.current.focus();\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{ __( 'Remove' ) }\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<DropZone onFilesDrop={ onDropFiles } />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tvalue={ featuredImageId }\n\t\t\t\t\t/>\n\t\t\t\t</MediaUploadCheck>\n\t\t\t</div>\n\t\t</PostFeaturedImageCheck>\n\t);\n}\n\nconst applyWithSelect = withSelect( ( select ) => {\n\tconst { getMedia, getPostType } = select( coreStore );\n\tconst { getCurrentPostId, getEditedPostAttribute } = select( editorStore );\n\tconst featuredImageId = getEditedPostAttribute( 'featured_media' );\n\n\treturn {\n\t\tmedia: featuredImageId\n\t\t\t? getMedia( featuredImageId, { context: 'view' } )\n\t\t\t: null,\n\t\tcurrentPostId: getCurrentPostId(),\n\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\tfeaturedImageId,\n\t};\n} );\n\nconst applyWithDispatch = withDispatch(\n\t( dispatch, { noticeOperations }, { select } ) => {\n\t\tconst { editPost } = dispatch( editorStore );\n\t\treturn {\n\t\t\tonUpdateImage( image ) {\n\t\t\t\teditPost( { featured_media: image.id } );\n\t\t\t},\n\t\t\tonDropImage( filesList ) {\n\t\t\t\tselect( blockEditorStore )\n\t\t\t\t\t.getSettings()\n\t\t\t\t\t.mediaUpload( {\n\t\t\t\t\t\tallowedTypes: [ 'image' ],\n\t\t\t\t\t\tfilesList,\n\t\t\t\t\t\tonFileChange( [ image ] ) {\n\t\t\t\t\t\t\teditPost( { featured_media: image.id } );\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonError( message ) {\n\t\t\t\t\t\t\tnoticeOperations.removeAllNotices();\n\t\t\t\t\t\t\tnoticeOperations.createErrorNotice( message );\n\t\t\t\t\t\t},\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tonRemoveImage() {\n\t\t\t\teditPost( { featured_media: 0 } );\n\t\t\t},\n\t\t};\n\t}\n);\n\nexport default compose(\n\twithNotices,\n\tapplyWithSelect,\n\tapplyWithDispatch,\n\twithFilters( 'editor.PostFeaturedImage' )\n)( PostFeaturedImage );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PostFeaturedImage from './index';\nimport PostFeaturedImageCheck from './check';\n\nconst PANEL_NAME = 'featured-image';\n\nexport default function PostFeaturedImagePanel( { withPanelBody = true } ) {\n\tconst { postType, isEnabled, isOpened } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetEditedPostAttribute,\n\t\t\tisEditorPanelEnabled,\n\t\t\tisEditorPanelOpened,\n\t\t} = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\n\t\treturn {\n\t\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\n\t\t};\n\t}, [] );\n\n\tconst { toggleEditorPanelOpened } = useDispatch( editorStore );\n\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\tif ( ! withPanelBody ) {\n\t\treturn (\n\t\t\t<PostFeaturedImageCheck>\n\t\t\t\t<PostFeaturedImage />\n\t\t\t</PostFeaturedImageCheck>\n\t\t);\n\t}\n\n\treturn (\n\t\t<PostFeaturedImageCheck>\n\t\t\t<PanelBody\n\t\t\t\ttitle={\n\t\t\t\t\tpostType?.labels?.featured_image ?? __( 'Featured image' )\n\t\t\t\t}\n\t\t\t\topened={ isOpened }\n\t\t\t\tonToggle={ () => toggleEditorPanelOpened( PANEL_NAME ) }\n\t\t\t>\n\t\t\t\t<PostFeaturedImage />\n\t\t\t</PanelBody>\n\t\t</PostFeaturedImageCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport { store as editorStore } from '../../store';\n\nfunction PostFormatCheck( { children } ) {\n\tconst disablePostFormats = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditorSettings().disablePostFormats,\n\t\t[]\n\t);\n\n\tif ( disablePostFormats ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"post-formats\">\n\t\t\t{ children }\n\t\t</PostTypeSupportCheck>\n\t);\n}\n\nexport default PostFormatCheck;\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Button, SelectControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostFormatCheck from './check';\nimport { store as editorStore } from '../../store';\n\n// All WP post formats, sorted alphabetically by translated name.\nexport const POST_FORMATS = [\n\t{ id: 'aside', caption: __( 'Aside' ) },\n\t{ id: 'audio', caption: __( 'Audio' ) },\n\t{ id: 'chat', caption: __( 'Chat' ) },\n\t{ id: 'gallery', caption: __( 'Gallery' ) },\n\t{ id: 'image', caption: __( 'Image' ) },\n\t{ id: 'link', caption: __( 'Link' ) },\n\t{ id: 'quote', caption: __( 'Quote' ) },\n\t{ id: 'standard', caption: __( 'Standard' ) },\n\t{ id: 'status', caption: __( 'Status' ) },\n\t{ id: 'video', caption: __( 'Video' ) },\n].sort( ( a, b ) => {\n\tconst normalizedA = a.caption.toUpperCase();\n\tconst normalizedB = b.caption.toUpperCase();\n\n\tif ( normalizedA < normalizedB ) {\n\t\treturn -1;\n\t}\n\tif ( normalizedA > normalizedB ) {\n\t\treturn 1;\n\t}\n\treturn 0;\n} );\n\nexport default function PostFormat() {\n\tconst instanceId = useInstanceId( PostFormat );\n\tconst postFormatSelectorId = `post-format-selector-${ instanceId }`;\n\n\tconst { postFormat, suggestedFormat, supportedFormats } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditedPostAttribute, getSuggestedPostFormat } =\n\t\t\t\tselect( editorStore );\n\t\t\tconst _postFormat = getEditedPostAttribute( 'format' );\n\t\t\tconst themeSupports = select( coreStore ).getThemeSupports();\n\t\t\treturn {\n\t\t\t\tpostFormat: _postFormat ?? 'standard',\n\t\t\t\tsuggestedFormat: getSuggestedPostFormat(),\n\t\t\t\tsupportedFormats: themeSupports.formats,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tconst formats = POST_FORMATS.filter( ( format ) => {\n\t\t// Ensure current format is always in the set.\n\t\t// The current format may not be a format supported by the theme.\n\t\treturn (\n\t\t\tsupportedFormats?.includes( format.id ) || postFormat === format.id\n\t\t);\n\t} );\n\tconst suggestion = formats.find(\n\t\t( format ) => format.id === suggestedFormat\n\t);\n\n\tconst { editPost } = useDispatch( editorStore );\n\n\tconst onUpdatePostFormat = ( format ) => editPost( { format } );\n\n\treturn (\n\t\t<PostFormatCheck>\n\t\t\t<div className=\"editor-post-format\">\n\t\t\t\t<SelectControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={ __( 'Post Format' ) }\n\t\t\t\t\tvalue={ postFormat }\n\t\t\t\t\tonChange={ ( format ) => onUpdatePostFormat( format ) }\n\t\t\t\t\tid={ postFormatSelectorId }\n\t\t\t\t\toptions={ formats.map( ( format ) => ( {\n\t\t\t\t\t\tlabel: format.caption,\n\t\t\t\t\t\tvalue: format.id,\n\t\t\t\t\t} ) ) }\n\t\t\t\t/>\n\t\t\t\t{ suggestion && suggestion.id !== postFormat && (\n\t\t\t\t\t<p className=\"editor-post-format__suggestion\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\tonUpdatePostFormat( suggestion.id )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ sprintf(\n\t\t\t\t\t\t\t\t/* translators: %s: post format */\n\t\t\t\t\t\t\t\t__( 'Apply suggested format: %s' ),\n\t\t\t\t\t\t\t\tsuggestion.caption\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</p>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</PostFormatCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst backup = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M5.5 12h1.75l-2.5 3-2.5-3H4a8 8 0 113.134 6.35l.907-1.194A6.5 6.5 0 105.5 12zm9.53 1.97l-2.28-2.28V8.5a.75.75 0 00-1.5 0V12a.747.747 0 00.218.529l1.282-.84-1.28.842 2.5 2.5a.75.75 0 101.06-1.061z\" />\n\t</SVG>\n);\n\nexport default backup;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport { store as editorStore } from '../../store';\n\nfunction PostLastRevisionCheck( { children } ) {\n\tconst { lastRevisionId, revisionsCount } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostLastRevisionId, getCurrentPostRevisionsCount } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\tlastRevisionId: getCurrentPostLastRevisionId(),\n\t\t\trevisionsCount: getCurrentPostRevisionsCount(),\n\t\t};\n\t}, [] );\n\n\tif ( ! lastRevisionId || revisionsCount < 2 ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"revisions\">\n\t\t\t{ children }\n\t\t</PostTypeSupportCheck>\n\t);\n}\n\nexport default PostLastRevisionCheck;\n","/**\n * WordPress dependencies\n */\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { backup } from '@wordpress/icons';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport PostLastRevisionCheck from './check';\nimport { store as editorStore } from '../../store';\n\nfunction LastRevision() {\n\tconst { lastRevisionId, revisionsCount } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostLastRevisionId, getCurrentPostRevisionsCount } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\tlastRevisionId: getCurrentPostLastRevisionId(),\n\t\t\trevisionsCount: getCurrentPostRevisionsCount(),\n\t\t};\n\t}, [] );\n\n\treturn (\n\t\t<PostLastRevisionCheck>\n\t\t\t<Button\n\t\t\t\thref={ addQueryArgs( 'revision.php', {\n\t\t\t\t\trevision: lastRevisionId,\n\t\t\t\t} ) }\n\t\t\t\tclassName=\"editor-post-last-revision__title\"\n\t\t\t\ticon={ backup }\n\t\t\t\ticonPosition=\"right\"\n\t\t\t\ttext={ sprintf(\n\t\t\t\t\t/* translators: %s: number of revisions */\n\t\t\t\t\t__( 'Revisions (%s)' ),\n\t\t\t\t\trevisionsCount\n\t\t\t\t) }\n\t\t\t/>\n\t\t</PostLastRevisionCheck>\n\t);\n}\n\nexport default LastRevision;\n","/**\n * WordPress dependencies\n */\nimport { PanelBody } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport PostLastRevision from './';\nimport PostLastRevisionCheck from './check';\n\nfunction PostLastRevisionPanel() {\n\treturn (\n\t\t<PostLastRevisionCheck>\n\t\t\t<PanelBody className=\"editor-post-last-revision__panel\">\n\t\t\t\t<PostLastRevision />\n\t\t\t</PanelBody>\n\t\t</PostLastRevisionCheck>\n\t);\n}\n\nexport default PostLastRevisionPanel;\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\tModal,\n\tButton,\n\tExternalLink,\n\t__experimentalHStack as HStack,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { addQueryArgs } from '@wordpress/url';\nimport { useEffect, createInterpolateElement } from '@wordpress/element';\nimport { addAction, removeAction } from '@wordpress/hooks';\nimport { useInstanceId } from '@wordpress/compose';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostLockedModal() {\n\tconst instanceId = useInstanceId( PostLockedModal );\n\tconst hookName = 'core/editor/post-locked-modal-' + instanceId;\n\tconst { autosave, updatePostLock } = useDispatch( editorStore );\n\tconst {\n\t\tisLocked,\n\t\tisTakeover,\n\t\tuser,\n\t\tpostId,\n\t\tpostLockUtils,\n\t\tactivePostLock,\n\t\tpostType,\n\t\tpreviewLink,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tisPostLocked,\n\t\t\tisPostLockTakeover,\n\t\t\tgetPostLockUser,\n\t\t\tgetCurrentPostId,\n\t\t\tgetActivePostLock,\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetEditedPostPreviewLink,\n\t\t\tgetEditorSettings,\n\t\t} = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\treturn {\n\t\t\tisLocked: isPostLocked(),\n\t\t\tisTakeover: isPostLockTakeover(),\n\t\t\tuser: getPostLockUser(),\n\t\t\tpostId: getCurrentPostId(),\n\t\t\tpostLockUtils: getEditorSettings().postLockUtils,\n\t\t\tactivePostLock: getActivePostLock(),\n\t\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\t\tpreviewLink: getEditedPostPreviewLink(),\n\t\t};\n\t}, [] );\n\n\tuseEffect( () => {\n\t\t/**\n\t\t * Keep the lock refreshed.\n\t\t *\n\t\t * When the user does not send a heartbeat in a heartbeat-tick\n\t\t * the user is no longer editing and another user can start editing.\n\t\t *\n\t\t * @param {Object} data Data to send in the heartbeat request.\n\t\t */\n\t\tfunction sendPostLock( data ) {\n\t\t\tif ( isLocked ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata[ 'wp-refresh-post-lock' ] = {\n\t\t\t\tlock: activePostLock,\n\t\t\t\tpost_id: postId,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Refresh post locks: update the lock string or show the dialog if somebody has taken over editing.\n\t\t *\n\t\t * @param {Object} data Data received in the heartbeat request\n\t\t */\n\t\tfunction receivePostLock( data ) {\n\t\t\tif ( ! data[ 'wp-refresh-post-lock' ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst received = data[ 'wp-refresh-post-lock' ];\n\t\t\tif ( received.lock_error ) {\n\t\t\t\t// Auto save and display the takeover modal.\n\t\t\t\tautosave();\n\t\t\t\tupdatePostLock( {\n\t\t\t\t\tisLocked: true,\n\t\t\t\t\tisTakeover: true,\n\t\t\t\t\tuser: {\n\t\t\t\t\t\tname: received.lock_error.name,\n\t\t\t\t\t\tavatar: received.lock_error.avatar_src_2x,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t} else if ( received.new_lock ) {\n\t\t\t\tupdatePostLock( {\n\t\t\t\t\tisLocked: false,\n\t\t\t\t\tactivePostLock: received.new_lock,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Unlock the post before the window is exited.\n\t\t */\n\t\tfunction releasePostLock() {\n\t\t\tif ( isLocked || ! activePostLock ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst data = new window.FormData();\n\t\t\tdata.append( 'action', 'wp-remove-post-lock' );\n\t\t\tdata.append( '_wpnonce', postLockUtils.unlockNonce );\n\t\t\tdata.append( 'post_ID', postId );\n\t\t\tdata.append( 'active_post_lock', activePostLock );\n\n\t\t\tif ( window.navigator.sendBeacon ) {\n\t\t\t\twindow.navigator.sendBeacon( postLockUtils.ajaxUrl, data );\n\t\t\t} else {\n\t\t\t\tconst xhr = new window.XMLHttpRequest();\n\t\t\t\txhr.open( 'POST', postLockUtils.ajaxUrl, false );\n\t\t\t\txhr.send( data );\n\t\t\t}\n\t\t}\n\n\t\t// Details on these events on the Heartbeat API docs\n\t\t// https://developer.wordpress.org/plugins/javascript/heartbeat-api/\n\t\taddAction( 'heartbeat.send', hookName, sendPostLock );\n\t\taddAction( 'heartbeat.tick', hookName, receivePostLock );\n\t\twindow.addEventListener( 'beforeunload', releasePostLock );\n\n\t\treturn () => {\n\t\t\tremoveAction( 'heartbeat.send', hookName );\n\t\t\tremoveAction( 'heartbeat.tick', hookName );\n\t\t\twindow.removeEventListener( 'beforeunload', releasePostLock );\n\t\t};\n\t}, [] );\n\n\tif ( ! isLocked ) {\n\t\treturn null;\n\t}\n\n\tconst userDisplayName = user.name;\n\tconst userAvatar = user.avatar;\n\n\tconst unlockUrl = addQueryArgs( 'post.php', {\n\t\t'get-post-lock': '1',\n\t\tlockKey: true,\n\t\tpost: postId,\n\t\taction: 'edit',\n\t\t_wpnonce: postLockUtils.nonce,\n\t} );\n\tconst allPostsUrl = addQueryArgs( 'edit.php', {\n\t\tpost_type: postType?.slug,\n\t} );\n\tconst allPostsLabel = __( 'Exit editor' );\n\treturn (\n\t\t<Modal\n\t\t\ttitle={\n\t\t\t\tisTakeover\n\t\t\t\t\t? __( 'Someone else has taken over this post' )\n\t\t\t\t\t: __( 'This post is already being edited' )\n\t\t\t}\n\t\t\tfocusOnMount\n\t\t\tshouldCloseOnClickOutside={ false }\n\t\t\tshouldCloseOnEsc={ false }\n\t\t\tisDismissible={ false }\n\t\t\tsize=\"medium\"\n\t\t>\n\t\t\t<HStack alignment=\"top\" spacing={ 6 }>\n\t\t\t\t{ !! userAvatar && (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={ userAvatar }\n\t\t\t\t\t\talt={ __( 'Avatar' ) }\n\t\t\t\t\t\tclassName=\"editor-post-locked-modal__avatar\"\n\t\t\t\t\t\twidth={ 64 }\n\t\t\t\t\t\theight={ 64 }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t<div>\n\t\t\t\t\t{ !! isTakeover && (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{ createInterpolateElement(\n\t\t\t\t\t\t\t\tuserDisplayName\n\t\t\t\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t\t\t\t/* translators: %s: user's display name */\n\t\t\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\t\t'<strong>%s</strong> now has editing control of this post (<PreviewLink />). Don’t worry, your changes up to this moment have been saved.'\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tuserDisplayName\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t'Another user now has editing control of this post (<PreviewLink />). Don’t worry, your changes up to this moment have been saved.'\n\t\t\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstrong: <strong />,\n\t\t\t\t\t\t\t\t\tPreviewLink: (\n\t\t\t\t\t\t\t\t\t\t<ExternalLink href={ previewLink }>\n\t\t\t\t\t\t\t\t\t\t\t{ __( 'preview' ) }\n\t\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) }\n\t\t\t\t\t{ ! isTakeover && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{ createInterpolateElement(\n\t\t\t\t\t\t\t\t\tuserDisplayName\n\t\t\t\t\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t\t\t\t\t/* translators: %s: user's display name */\n\t\t\t\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'<strong>%s</strong> is currently working on this post (<PreviewLink />), which means you cannot make changes, unless you take over.'\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\tuserDisplayName\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t\t'Another user is currently working on this post (<PreviewLink />), which means you cannot make changes, unless you take over.'\n\t\t\t\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tstrong: <strong />,\n\t\t\t\t\t\t\t\t\t\tPreviewLink: (\n\t\t\t\t\t\t\t\t\t\t\t<ExternalLink href={ previewLink }>\n\t\t\t\t\t\t\t\t\t\t\t\t{ __( 'preview' ) }\n\t\t\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'If you take over, the other user will lose editing control to the post, but their changes will be saved.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\n\t\t\t\t\t<HStack\n\t\t\t\t\t\tclassName=\"editor-post-locked-modal__buttons\"\n\t\t\t\t\t\tjustify=\"flex-end\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ ! isTakeover && (\n\t\t\t\t\t\t\t<Button variant=\"tertiary\" href={ unlockUrl }>\n\t\t\t\t\t\t\t\t{ __( 'Take over' ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<Button variant=\"primary\" href={ allPostsUrl }>\n\t\t\t\t\t\t\t{ allPostsLabel }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</div>\n\t\t\t</HStack>\n\t\t</Modal>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport function PostPendingStatusCheck( { children } ) {\n\tconst { hasPublishAction, isPublished } = useSelect( ( select ) => {\n\t\tconst { isCurrentPostPublished, getCurrentPost } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\thasPublishAction:\n\t\t\t\tgetCurrentPost()._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t};\n\t}, [] );\n\n\tif ( isPublished || ! hasPublishAction ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n\nexport default PostPendingStatusCheck;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { CheckboxControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PostPendingStatusCheck from './check';\nimport { store as editorStore } from '../../store';\n\nexport function PostPendingStatus() {\n\tconst status = useSelect(\n\t\t( select ) => select( editorStore ).getEditedPostAttribute( 'status' ),\n\t\t[]\n\t);\n\tconst { editPost } = useDispatch( editorStore );\n\tconst togglePendingStatus = () => {\n\t\tconst updatedStatus = status === 'pending' ? 'draft' : 'pending';\n\t\teditPost( { status: updatedStatus } );\n\t};\n\n\treturn (\n\t\t<PostPendingStatusCheck>\n\t\t\t<CheckboxControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Pending review' ) }\n\t\t\t\tchecked={ status === 'pending' }\n\t\t\t\tonChange={ togglePendingStatus }\n\t\t\t/>\n\t\t</PostPendingStatusCheck>\n\t);\n}\n\nexport default PostPendingStatus;\n","/**\n * WordPress dependencies\n */\nimport { renderToString } from '@wordpress/element';\nimport { Button, Path, SVG, VisuallyHidden } from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { applyFilters } from '@wordpress/hooks';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction writeInterstitialMessage( targetDocument ) {\n\tlet markup = renderToString(\n\t\t<div className=\"editor-post-preview-button__interstitial-message\">\n\t\t\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 96 96\">\n\t\t\t\t<Path\n\t\t\t\t\tclassName=\"outer\"\n\t\t\t\t\td=\"M48 12c19.9 0 36 16.1 36 36S67.9 84 48 84 12 67.9 12 48s16.1-36 36-36\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t/>\n\t\t\t\t<Path\n\t\t\t\t\tclassName=\"inner\"\n\t\t\t\t\td=\"M69.5 46.4c0-3.9-1.4-6.7-2.6-8.8-1.6-2.6-3.1-4.9-3.1-7.5 0-2.9 2.2-5.7 5.4-5.7h.4C63.9 19.2 56.4 16 48 16c-11.2 0-21 5.7-26.7 14.4h2.1c3.3 0 8.5-.4 8.5-.4 1.7-.1 1.9 2.4.2 2.6 0 0-1.7.2-3.7.3L40 67.5l7-20.9L42 33c-1.7-.1-3.3-.3-3.3-.3-1.7-.1-1.5-2.7.2-2.6 0 0 5.3.4 8.4.4 3.3 0 8.5-.4 8.5-.4 1.7-.1 1.9 2.4.2 2.6 0 0-1.7.2-3.7.3l11.5 34.3 3.3-10.4c1.6-4.5 2.4-7.8 2.4-10.5zM16.1 48c0 12.6 7.3 23.5 18 28.7L18.8 35c-1.7 4-2.7 8.4-2.7 13zm32.5 2.8L39 78.6c2.9.8 5.9 1.3 9 1.3 3.7 0 7.3-.6 10.6-1.8-.1-.1-.2-.3-.2-.4l-9.8-26.9zM76.2 36c0 3.2-.6 6.9-2.4 11.4L64 75.6c9.5-5.5 15.9-15.8 15.9-27.6 0-5.5-1.4-10.8-3.9-15.3.1 1 .2 2.1.2 3.3z\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t/>\n\t\t\t</SVG>\n\t\t\t<p>{ __( 'Generating preview…' ) }</p>\n\t\t</div>\n\t);\n\n\tmarkup += `\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\t.editor-post-preview-button__interstitial-message {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\theight: 100vh;\n\t\t\t\twidth: 100vw;\n\t\t\t}\n\t\t\t@-webkit-keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@-moz-keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@-o-keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.editor-post-preview-button__interstitial-message svg {\n\t\t\t\twidth: 192px;\n\t\t\t\theight: 192px;\n\t\t\t\tstroke: #555d66;\n\t\t\t\tstroke-width: 0.75;\n\t\t\t}\n\t\t\t.editor-post-preview-button__interstitial-message svg .outer,\n\t\t\t.editor-post-preview-button__interstitial-message svg .inner {\n\t\t\t\tstroke-dasharray: 280;\n\t\t\t\tstroke-dashoffset: 280;\n\t\t\t\t-webkit-animation: paint 1.5s ease infinite alternate;\n\t\t\t\t-moz-animation: paint 1.5s ease infinite alternate;\n\t\t\t\t-o-animation: paint 1.5s ease infinite alternate;\n\t\t\t\tanimation: paint 1.5s ease infinite alternate;\n\t\t\t}\n\t\t\tp {\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\t\t\t}\n\t\t</style>\n\t`;\n\n\t/**\n\t * Filters the interstitial message shown when generating previews.\n\t *\n\t * @param {string} markup The preview interstitial markup.\n\t */\n\tmarkup = applyFilters( 'editor.PostPreview.interstitialMarkup', markup );\n\n\ttargetDocument.write( markup );\n\ttargetDocument.title = __( 'Generating preview…' );\n\ttargetDocument.close();\n}\n\nexport default function PostPreviewButton( {\n\tclassName,\n\ttextContent,\n\tforceIsAutosaveable,\n\trole,\n\tonPreview,\n} ) {\n\tconst { postId, currentPostLink, previewLink, isSaveable, isViewable } =\n\t\tuseSelect( ( select ) => {\n\t\t\tconst editor = select( editorStore );\n\t\t\tconst core = select( coreStore );\n\n\t\t\tconst postType = core.getPostType(\n\t\t\t\teditor.getCurrentPostType( 'type' )\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tpostId: editor.getCurrentPostId(),\n\t\t\t\tcurrentPostLink: editor.getCurrentPostAttribute( 'link' ),\n\t\t\t\tpreviewLink: editor.getEditedPostPreviewLink(),\n\t\t\t\tisSaveable: editor.isEditedPostSaveable(),\n\t\t\t\tisViewable: postType?.viewable ?? false,\n\t\t\t};\n\t\t}, [] );\n\n\tconst { __unstableSaveForPreview } = useDispatch( editorStore );\n\n\tif ( ! isViewable ) {\n\t\treturn null;\n\t}\n\n\tconst targetId = `wp-preview-${ postId }`;\n\n\tconst openPreviewWindow = async ( event ) => {\n\t\t// Our Preview button has its 'href' and 'target' set correctly for a11y\n\t\t// purposes. Unfortunately, though, we can't rely on the default 'click'\n\t\t// handler since sometimes it incorrectly opens a new tab instead of reusing\n\t\t// the existing one.\n\t\t// https://github.com/WordPress/gutenberg/pull/8330\n\t\tevent.preventDefault();\n\n\t\t// Open up a Preview tab if needed. This is where we'll show the preview.\n\t\tconst previewWindow = window.open( '', targetId );\n\n\t\t// Focus the Preview tab. This might not do anything, depending on the browser's\n\t\t// and user's preferences.\n\t\t// https://html.spec.whatwg.org/multipage/interaction.html#dom-window-focus\n\t\tpreviewWindow.focus();\n\n\t\twriteInterstitialMessage( previewWindow.document );\n\n\t\tconst link = await __unstableSaveForPreview( { forceIsAutosaveable } );\n\n\t\tpreviewWindow.location = link;\n\n\t\tonPreview?.();\n\t};\n\n\t// Link to the `?preview=true` URL if we have it, since this lets us see\n\t// changes that were autosaved since the post was last published. Otherwise,\n\t// just link to the post's URL.\n\tconst href = previewLink || currentPostLink;\n\n\treturn (\n\t\t<Button\n\t\t\tvariant={ ! className ? 'tertiary' : undefined }\n\t\t\tclassName={ className || 'editor-post-preview' }\n\t\t\thref={ href }\n\t\t\ttarget={ targetId }\n\t\t\tdisabled={ ! isSaveable }\n\t\t\tonClick={ openPreviewWindow }\n\t\t\trole={ role }\n\t\t\tsize=\"compact\"\n\t\t>\n\t\t\t{ textContent || (\n\t\t\t\t<>\n\t\t\t\t\t{ _x( 'Preview', 'imperative verb' ) }\n\t\t\t\t\t<VisuallyHidden as=\"span\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* translators: accessibility text */\n\t\t\t\t\t\t\t__( '(opens in a new tab)' )\n\t\t\t\t\t\t}\n\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</Button>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { compose } from '@wordpress/compose';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport function PublishButtonLabel( {\n\tisPublished,\n\tisBeingScheduled,\n\tisSaving,\n\tisPublishing,\n\thasPublishAction,\n\tisAutosaving,\n\thasNonPostEntityChanges,\n} ) {\n\tif ( isPublishing ) {\n\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\treturn __( 'Publishing…' );\n\t} else if ( isPublished && isSaving && ! isAutosaving ) {\n\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\treturn __( 'Updating…' );\n\t} else if ( isBeingScheduled && isSaving && ! isAutosaving ) {\n\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\treturn __( 'Scheduling…' );\n\t}\n\n\tif ( ! hasPublishAction ) {\n\t\treturn hasNonPostEntityChanges\n\t\t\t? __( 'Submit for Review…' )\n\t\t\t: __( 'Submit for Review' );\n\t} else if ( isPublished ) {\n\t\treturn hasNonPostEntityChanges ? __( 'Update…' ) : __( 'Update' );\n\t} else if ( isBeingScheduled ) {\n\t\treturn hasNonPostEntityChanges ? __( 'Schedule…' ) : __( 'Schedule' );\n\t}\n\n\treturn __( 'Publish' );\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tisCurrentPostPublished,\n\t\t\tisEditedPostBeingScheduled,\n\t\t\tisSavingPost,\n\t\t\tisPublishingPost,\n\t\t\tgetCurrentPost,\n\t\t\tgetCurrentPostType,\n\t\t\tisAutosavingPost,\n\t\t} = select( editorStore );\n\t\treturn {\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\tisBeingScheduled: isEditedPostBeingScheduled(),\n\t\t\tisSaving: isSavingPost(),\n\t\t\tisPublishing: isPublishingPost(),\n\t\t\thasPublishAction:\n\t\t\t\tgetCurrentPost()._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\tpostType: getCurrentPostType(),\n\t\t\tisAutosaving: isAutosavingPost(),\n\t\t};\n\t} ),\n] )( PublishButtonLabel );\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { Component, createRef } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport PublishButtonLabel from './label';\nimport { store as editorStore } from '../../store';\n\nconst noop = () => {};\n\nexport class PostPublishButton extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.buttonNode = createRef();\n\n\t\tthis.createOnClick = this.createOnClick.bind( this );\n\t\tthis.closeEntitiesSavedStates =\n\t\t\tthis.closeEntitiesSavedStates.bind( this );\n\n\t\tthis.state = {\n\t\t\tentitiesSavedStatesCallback: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.focusOnMount ) {\n\t\t\t// This timeout is necessary to make sure the `useEffect` hook of\n\t\t\t// `useFocusReturn` gets the correct element (the button that opens the\n\t\t\t// PostPublishPanel) otherwise it will get this button.\n\t\t\tthis.timeoutID = setTimeout( () => {\n\t\t\t\tthis.buttonNode.current.focus();\n\t\t\t}, 0 );\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout( this.timeoutID );\n\t}\n\n\tcreateOnClick( callback ) {\n\t\treturn ( ...args ) => {\n\t\t\tconst { hasNonPostEntityChanges, setEntitiesSavedStatesCallback } =\n\t\t\t\tthis.props;\n\t\t\t// If a post with non-post entities is published, but the user\n\t\t\t// elects to not save changes to the non-post entities, those\n\t\t\t// entities will still be dirty when the Publish button is clicked.\n\t\t\t// We also need to check that the `setEntitiesSavedStatesCallback`\n\t\t\t// prop was passed. See https://github.com/WordPress/gutenberg/pull/37383\n\t\t\tif ( hasNonPostEntityChanges && setEntitiesSavedStatesCallback ) {\n\t\t\t\t// The modal for multiple entity saving will open,\n\t\t\t\t// hold the callback for saving/publishing the post\n\t\t\t\t// so that we can call it if the post entity is checked.\n\t\t\t\tthis.setState( {\n\t\t\t\t\tentitiesSavedStatesCallback: () => callback( ...args ),\n\t\t\t\t} );\n\n\t\t\t\t// Open the save panel by setting its callback.\n\t\t\t\t// To set a function on the useState hook, we must set it\n\t\t\t\t// with another function (() => myFunction). Passing the\n\t\t\t\t// function on its own will cause an error when called.\n\t\t\t\tsetEntitiesSavedStatesCallback(\n\t\t\t\t\t() => this.closeEntitiesSavedStates\n\t\t\t\t);\n\t\t\t\treturn noop;\n\t\t\t}\n\n\t\t\treturn callback( ...args );\n\t\t};\n\t}\n\n\tcloseEntitiesSavedStates( savedEntities ) {\n\t\tconst { postType, postId } = this.props;\n\t\tconst { entitiesSavedStatesCallback } = this.state;\n\t\tthis.setState( { entitiesSavedStatesCallback: false }, () => {\n\t\t\tif (\n\t\t\t\tsavedEntities &&\n\t\t\t\tsavedEntities.some(\n\t\t\t\t\t( elt ) =>\n\t\t\t\t\t\telt.kind === 'postType' &&\n\t\t\t\t\t\telt.name === postType &&\n\t\t\t\t\t\telt.key === postId\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// The post entity was checked, call the held callback from `createOnClick`.\n\t\t\t\tentitiesSavedStatesCallback();\n\t\t\t}\n\t\t} );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tforceIsDirty,\n\t\t\thasPublishAction,\n\t\t\tisBeingScheduled,\n\t\t\tisOpen,\n\t\t\tisPostSavingLocked,\n\t\t\tisPublishable,\n\t\t\tisPublished,\n\t\t\tisSaveable,\n\t\t\tisSaving,\n\t\t\tisAutoSaving,\n\t\t\tisToggle,\n\t\t\tonSave,\n\t\t\tonStatusChange,\n\t\t\tonSubmit = noop,\n\t\t\tonToggle,\n\t\t\tvisibility,\n\t\t\thasNonPostEntityChanges,\n\t\t\tisSavingNonPostEntityChanges,\n\t\t} = this.props;\n\n\t\tconst isButtonDisabled =\n\t\t\t( isSaving ||\n\t\t\t\t! isSaveable ||\n\t\t\t\tisPostSavingLocked ||\n\t\t\t\t( ! isPublishable && ! forceIsDirty ) ) &&\n\t\t\t( ! hasNonPostEntityChanges || isSavingNonPostEntityChanges );\n\n\t\tconst isToggleDisabled =\n\t\t\t( isPublished ||\n\t\t\t\tisSaving ||\n\t\t\t\t! isSaveable ||\n\t\t\t\t( ! isPublishable && ! forceIsDirty ) ) &&\n\t\t\t( ! hasNonPostEntityChanges || isSavingNonPostEntityChanges );\n\n\t\tlet publishStatus;\n\t\tif ( ! hasPublishAction ) {\n\t\t\tpublishStatus = 'pending';\n\t\t} else if ( visibility === 'private' ) {\n\t\t\tpublishStatus = 'private';\n\t\t} else if ( isBeingScheduled ) {\n\t\t\tpublishStatus = 'future';\n\t\t} else {\n\t\t\tpublishStatus = 'publish';\n\t\t}\n\n\t\tconst onClickButton = () => {\n\t\t\tif ( isButtonDisabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonSubmit();\n\t\t\tonStatusChange( publishStatus );\n\t\t\tonSave();\n\t\t};\n\n\t\tconst onClickToggle = () => {\n\t\t\tif ( isToggleDisabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonToggle();\n\t\t};\n\n\t\tconst buttonProps = {\n\t\t\t'aria-disabled': isButtonDisabled,\n\t\t\tclassName: 'editor-post-publish-button',\n\t\t\tisBusy: ! isAutoSaving && isSaving,\n\t\t\tvariant: 'primary',\n\t\t\tonClick: this.createOnClick( onClickButton ),\n\t\t};\n\n\t\tconst toggleProps = {\n\t\t\t'aria-disabled': isToggleDisabled,\n\t\t\t'aria-expanded': isOpen,\n\t\t\tclassName: 'editor-post-publish-panel__toggle',\n\t\t\tisBusy: isSaving && isPublished,\n\t\t\tvariant: 'primary',\n\t\t\tsize: 'compact',\n\t\t\tonClick: this.createOnClick( onClickToggle ),\n\t\t};\n\n\t\tconst toggleChildren = isBeingScheduled\n\t\t\t? __( 'Schedule…' )\n\t\t\t: __( 'Publish' );\n\t\tconst buttonChildren = (\n\t\t\t<PublishButtonLabel\n\t\t\t\thasNonPostEntityChanges={ hasNonPostEntityChanges }\n\t\t\t/>\n\t\t);\n\n\t\tconst componentProps = isToggle ? toggleProps : buttonProps;\n\t\tconst componentChildren = isToggle ? toggleChildren : buttonChildren;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Button\n\t\t\t\t\tref={ this.buttonNode }\n\t\t\t\t\t{ ...componentProps }\n\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\tcomponentProps.className,\n\t\t\t\t\t\t'editor-post-publish-button__button',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'has-changes-dot': hasNonPostEntityChanges,\n\t\t\t\t\t\t}\n\t\t\t\t\t) }\n\t\t\t\t\tsize=\"compact\"\n\t\t\t\t>\n\t\t\t\t\t{ componentChildren }\n\t\t\t\t</Button>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tisSavingPost,\n\t\t\tisAutosavingPost,\n\t\t\tisEditedPostBeingScheduled,\n\t\t\tgetEditedPostVisibility,\n\t\t\tisCurrentPostPublished,\n\t\t\tisEditedPostSaveable,\n\t\t\tisEditedPostPublishable,\n\t\t\tisPostSavingLocked,\n\t\t\tgetCurrentPost,\n\t\t\tgetCurrentPostType,\n\t\t\tgetCurrentPostId,\n\t\t\thasNonPostEntityChanges,\n\t\t\tisSavingNonPostEntityChanges,\n\t\t} = select( editorStore );\n\t\treturn {\n\t\t\tisSaving: isSavingPost(),\n\t\t\tisAutoSaving: isAutosavingPost(),\n\t\t\tisBeingScheduled: isEditedPostBeingScheduled(),\n\t\t\tvisibility: getEditedPostVisibility(),\n\t\t\tisSaveable: isEditedPostSaveable(),\n\t\t\tisPostSavingLocked: isPostSavingLocked(),\n\t\t\tisPublishable: isEditedPostPublishable(),\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\thasPublishAction:\n\t\t\t\tgetCurrentPost()._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\tpostType: getCurrentPostType(),\n\t\t\tpostId: getCurrentPostId(),\n\t\t\thasNonPostEntityChanges: hasNonPostEntityChanges(),\n\t\t\tisSavingNonPostEntityChanges: isSavingNonPostEntityChanges(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, savePost } = dispatch( editorStore );\n\t\treturn {\n\t\t\tonStatusChange: ( status ) =>\n\t\t\t\teditPost( { status }, { undoIgnore: true } ),\n\t\t\tonSave: savePost,\n\t\t};\n\t} ),\n] )( PostPublishButton );\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst closeSmall = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\" />\n\t</SVG>\n);\n\nexport default closeSmall;\n","/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\n\nconst wordpress = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-2 -2 24 24\">\n\t\t<Path d=\"M20 10c0-5.51-4.49-10-10-10C4.48 0 0 4.49 0 10c0 5.52 4.48 10 10 10 5.51 0 10-4.48 10-10zM7.78 15.37L4.37 6.22c.55-.02 1.17-.08 1.17-.08.5-.06.44-1.13-.06-1.11 0 0-1.45.11-2.37.11-.18 0-.37 0-.58-.01C4.12 2.69 6.87 1.11 10 1.11c2.33 0 4.45.87 6.05 2.34-.68-.11-1.65.39-1.65 1.58 0 .74.45 1.36.9 2.1.35.61.55 1.36.55 2.46 0 1.49-1.4 5-1.4 5l-3.03-8.37c.54-.02.82-.17.82-.17.5-.05.44-1.25-.06-1.22 0 0-1.44.12-2.38.12-.87 0-2.33-.12-2.33-.12-.5-.03-.56 1.2-.06 1.22l.92.08 1.26 3.41zM17.41 10c.24-.64.74-1.87.43-4.25.7 1.29 1.05 2.71 1.05 4.25 0 3.29-1.73 6.24-4.4 7.78.97-2.59 1.94-5.2 2.92-7.78zM6.1 18.09C3.12 16.65 1.11 13.53 1.11 10c0-1.3.23-2.48.72-3.59C3.25 10.3 4.67 14.2 6.1 18.09zm4.03-6.63l2.58 6.98c-.86.29-1.76.45-2.71.45-.79 0-1.57-.11-2.29-.33.81-2.38 1.62-4.74 2.42-7.1z\" />\n\t</SVG>\n);\n\nexport default wordpress;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nexport const visibilityOptions = {\n\tpublic: {\n\t\tlabel: __( 'Public' ),\n\t\tinfo: __( 'Visible to everyone.' ),\n\t},\n\tprivate: {\n\t\tlabel: __( 'Private' ),\n\t\tinfo: __( 'Only visible to site admins and editors.' ),\n\t},\n\tpassword: {\n\t\tlabel: __( 'Password protected' ),\n\t\tinfo: __( 'Only those with the password can view this post.' ),\n\t},\n};\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport {\n\tVisuallyHidden,\n\t__experimentalConfirmDialog as ConfirmDialog,\n} from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { visibilityOptions } from './utils';\nimport { store as editorStore } from '../../store';\n\nexport default function PostVisibility( { onClose } ) {\n\tconst instanceId = useInstanceId( PostVisibility );\n\n\tconst { status, visibility, password } = useSelect( ( select ) => ( {\n\t\tstatus: select( editorStore ).getEditedPostAttribute( 'status' ),\n\t\tvisibility: select( editorStore ).getEditedPostVisibility(),\n\t\tpassword: select( editorStore ).getEditedPostAttribute( 'password' ),\n\t} ) );\n\n\tconst { editPost, savePost } = useDispatch( editorStore );\n\n\tconst [ hasPassword, setHasPassword ] = useState( !! password );\n\tconst [ showPrivateConfirmDialog, setShowPrivateConfirmDialog ] =\n\t\tuseState( false );\n\n\tconst setPublic = () => {\n\t\teditPost( {\n\t\t\tstatus: visibility === 'private' ? 'draft' : status,\n\t\t\tpassword: '',\n\t\t} );\n\t\tsetHasPassword( false );\n\t};\n\n\tconst setPrivate = () => {\n\t\tsetShowPrivateConfirmDialog( true );\n\t};\n\n\tconst confirmPrivate = () => {\n\t\teditPost( { status: 'private', password: '' } );\n\t\tsetHasPassword( false );\n\t\tsetShowPrivateConfirmDialog( false );\n\t\tsavePost();\n\t};\n\n\tconst handleDialogCancel = () => {\n\t\tsetShowPrivateConfirmDialog( false );\n\t};\n\n\tconst setPasswordProtected = () => {\n\t\teditPost( {\n\t\t\tstatus: visibility === 'private' ? 'draft' : status,\n\t\t\tpassword: password || '',\n\t\t} );\n\t\tsetHasPassword( true );\n\t};\n\n\tconst updatePassword = ( event ) => {\n\t\teditPost( { password: event.target.value } );\n\t};\n\n\treturn (\n\t\t<div className=\"editor-post-visibility\">\n\t\t\t<InspectorPopoverHeader\n\t\t\t\ttitle={ __( 'Visibility' ) }\n\t\t\t\thelp={ __( 'Control how this post is viewed.' ) }\n\t\t\t\tonClose={ onClose }\n\t\t\t/>\n\t\t\t<fieldset className=\"editor-post-visibility__fieldset\">\n\t\t\t\t<VisuallyHidden as=\"legend\">\n\t\t\t\t\t{ __( 'Visibility' ) }\n\t\t\t\t</VisuallyHidden>\n\t\t\t\t<PostVisibilityChoice\n\t\t\t\t\tinstanceId={ instanceId }\n\t\t\t\t\tvalue=\"public\"\n\t\t\t\t\tlabel={ visibilityOptions.public.label }\n\t\t\t\t\tinfo={ visibilityOptions.public.info }\n\t\t\t\t\tchecked={ visibility === 'public' && ! hasPassword }\n\t\t\t\t\tonChange={ setPublic }\n\t\t\t\t/>\n\t\t\t\t<PostVisibilityChoice\n\t\t\t\t\tinstanceId={ instanceId }\n\t\t\t\t\tvalue=\"private\"\n\t\t\t\t\tlabel={ visibilityOptions.private.label }\n\t\t\t\t\tinfo={ visibilityOptions.private.info }\n\t\t\t\t\tchecked={ visibility === 'private' }\n\t\t\t\t\tonChange={ setPrivate }\n\t\t\t\t/>\n\t\t\t\t<PostVisibilityChoice\n\t\t\t\t\tinstanceId={ instanceId }\n\t\t\t\t\tvalue=\"password\"\n\t\t\t\t\tlabel={ visibilityOptions.password.label }\n\t\t\t\t\tinfo={ visibilityOptions.password.info }\n\t\t\t\t\tchecked={ hasPassword }\n\t\t\t\t\tonChange={ setPasswordProtected }\n\t\t\t\t/>\n\t\t\t\t{ hasPassword && (\n\t\t\t\t\t<div className=\"editor-post-visibility__password\">\n\t\t\t\t\t\t<VisuallyHidden\n\t\t\t\t\t\t\tas=\"label\"\n\t\t\t\t\t\t\thtmlFor={ `editor-post-visibility__password-input-${ instanceId }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Create password' ) }\n\t\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"editor-post-visibility__password-input\"\n\t\t\t\t\t\t\tid={ `editor-post-visibility__password-input-${ instanceId }` }\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tonChange={ updatePassword }\n\t\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\t\tplaceholder={ __( 'Use a secure password' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</fieldset>\n\t\t\t<ConfirmDialog\n\t\t\t\tisOpen={ showPrivateConfirmDialog }\n\t\t\t\tonConfirm={ confirmPrivate }\n\t\t\t\tonCancel={ handleDialogCancel }\n\t\t\t>\n\t\t\t\t{ __( 'Would you like to privately publish this post now?' ) }\n\t\t\t</ConfirmDialog>\n\t\t</div>\n\t);\n}\n\nfunction PostVisibilityChoice( { instanceId, value, label, info, ...props } ) {\n\treturn (\n\t\t<div className=\"editor-post-visibility__choice\">\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname={ `editor-post-visibility__setting-${ instanceId }` }\n\t\t\t\tvalue={ value }\n\t\t\t\tid={ `editor-post-${ value }-${ instanceId }` }\n\t\t\t\taria-describedby={ `editor-post-${ value }-${ instanceId }-description` }\n\t\t\t\tclassName=\"editor-post-visibility__radio\"\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t\t<label\n\t\t\t\thtmlFor={ `editor-post-${ value }-${ instanceId }` }\n\t\t\t\tclassName=\"editor-post-visibility__label\"\n\t\t\t>\n\t\t\t\t{ label }\n\t\t\t</label>\n\t\t\t<p\n\t\t\t\tid={ `editor-post-${ value }-${ instanceId }-description` }\n\t\t\t\tclassName=\"editor-post-visibility__info\"\n\t\t\t>\n\t\t\t\t{ info }\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { visibilityOptions } from './utils';\nimport { store as editorStore } from '../../store';\n\nexport default function PostVisibilityLabel() {\n\treturn usePostVisibilityLabel();\n}\n\nexport function usePostVisibilityLabel() {\n\tconst visibility = useSelect( ( select ) =>\n\t\tselect( editorStore ).getEditedPostVisibility()\n\t);\n\treturn visibilityOptions[ visibility ]?.label;\n}\n","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n\n/**\n * Days in 1 year\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * @name daysInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInYear = 365.2425;\n\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInMinute = 60000;\n\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInHour = 3600000;\n\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInSecond = 1000;\n\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\nexport var minTime = -maxTime;\n\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var minutesInHour = 60;\n\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\nexport var monthsInQuarter = 3;\n\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var monthsInYear = 12;\n\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var quartersInYear = 4;\n\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInHour = 3600;\n\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInMinute = 60;\n\n/**\n * Seconds in 1 day\n *\n * @name secondsInDay\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInDay = secondsInHour * 24;\n\n/**\n * Seconds in 1 week\n *\n * @name secondsInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInWeek = secondsInDay * 7;\n\n/**\n * Seconds in 1 year\n *\n * @name secondsInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInYear = secondsInDay * daysInYear;\n\n/**\n * Seconds in 1 month\n *\n * @name secondsInMonth\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInMonth = secondsInYear / 12;\n\n/**\n * Seconds in 1 quarter\n *\n * @name secondsInQuarter\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInQuarter = secondsInMonth * 3;","import { millisecondsInHour, millisecondsInMinute } from \"../constants/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport default function parseISO(argument, options) {\n  var _options$additionalDi;\n  requiredArgs(1, arguments);\n  var additionalDigits = toInteger((_options$additionalDi = options === null || options === void 0 ? void 0 : options.additionalDigits) !== null && _options$additionalDi !== void 0 ? _options$additionalDi : 2);\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n  var dateStrings = splitDateString(argument);\n  var date;\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time);\n    // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n  return dateStrings;\n}\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;\n}\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","/**\n * External dependencies\n */\nimport { parseISO, endOfMonth, startOfMonth } from 'date-fns';\n\n/**\n * WordPress dependencies\n */\nimport { getSettings } from '@wordpress/date';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __experimentalPublishDateTimePicker as PublishDateTimePicker } from '@wordpress/block-editor';\nimport { useState, useMemo } from '@wordpress/element';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostSchedule( { onClose } ) {\n\tconst { postDate, postType } = useSelect(\n\t\t( select ) => ( {\n\t\t\tpostDate: select( editorStore ).getEditedPostAttribute( 'date' ),\n\t\t\tpostType: select( editorStore ).getCurrentPostType(),\n\t\t} ),\n\t\t[]\n\t);\n\n\tconst { editPost } = useDispatch( editorStore );\n\tconst onUpdateDate = ( date ) => editPost( { date } );\n\n\tconst [ previewedMonth, setPreviewedMonth ] = useState(\n\t\tstartOfMonth( new Date( postDate ) )\n\t);\n\n\t// Pick up published and schduled site posts.\n\tconst eventsByPostType = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getEntityRecords( 'postType', postType, {\n\t\t\t\tstatus: 'publish,future',\n\t\t\t\tafter: startOfMonth( previewedMonth ).toISOString(),\n\t\t\t\tbefore: endOfMonth( previewedMonth ).toISOString(),\n\t\t\t\texclude: [ select( editorStore ).getCurrentPostId() ],\n\t\t\t\tper_page: 100,\n\t\t\t\t_fields: 'id,date',\n\t\t\t} ),\n\t\t[ previewedMonth, postType ]\n\t);\n\n\tconst events = useMemo(\n\t\t() =>\n\t\t\t( eventsByPostType || [] ).map( ( { date: eventDate } ) => ( {\n\t\t\t\tdate: new Date( eventDate ),\n\t\t\t} ) ),\n\t\t[ eventsByPostType ]\n\t);\n\n\tconst settings = getSettings();\n\n\t// To know if the current timezone is a 12 hour time with look for \"a\" in the time format\n\t// We also make sure this a is not escaped by a \"/\"\n\tconst is12HourTime = /a(?!\\\\)/i.test(\n\t\tsettings.formats.time\n\t\t\t.toLowerCase() // Test only the lower case a.\n\t\t\t.replace( /\\\\\\\\/g, '' ) // Replace \"//\" with empty strings.\n\t\t\t.split( '' )\n\t\t\t.reverse()\n\t\t\t.join( '' ) // Reverse the string and test for \"a\" not followed by a slash.\n\t);\n\n\treturn (\n\t\t<PublishDateTimePicker\n\t\t\tcurrentDate={ postDate }\n\t\t\tonChange={ onUpdateDate }\n\t\t\tis12Hour={ is12HourTime }\n\t\t\tevents={ events }\n\t\t\tonMonthPreviewed={ ( date ) =>\n\t\t\t\tsetPreviewedMonth( parseISO( date ) )\n\t\t\t}\n\t\t\tonClose={ onClose }\n\t\t/>\n\t);\n}\n","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","/**\n * WordPress dependencies\n */\nimport { __, _x, sprintf, isRTL } from '@wordpress/i18n';\nimport { getSettings, getDate, dateI18n } from '@wordpress/date';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostScheduleLabel( props ) {\n\treturn usePostScheduleLabel( props );\n}\n\nexport function usePostScheduleLabel( { full = false } = {} ) {\n\tconst { date, isFloating } = useSelect(\n\t\t( select ) => ( {\n\t\t\tdate: select( editorStore ).getEditedPostAttribute( 'date' ),\n\t\t\tisFloating: select( editorStore ).isEditedPostDateFloating(),\n\t\t} ),\n\t\t[]\n\t);\n\n\treturn full\n\t\t? getFullPostScheduleLabel( date )\n\t\t: getPostScheduleLabel( date, { isFloating } );\n}\n\nexport function getFullPostScheduleLabel( dateAttribute ) {\n\tconst date = getDate( dateAttribute );\n\n\tconst timezoneAbbreviation = getTimezoneAbbreviation();\n\tconst formattedDate = dateI18n(\n\t\t// translators: If using a space between 'g:i' and 'a', use a non-breaking space.\n\t\t_x( 'F j, Y g:i\\xa0a', 'post schedule full date format' ),\n\t\tdate\n\t);\n\treturn isRTL()\n\t\t? `${ timezoneAbbreviation } ${ formattedDate }`\n\t\t: `${ formattedDate } ${ timezoneAbbreviation }`;\n}\n\nexport function getPostScheduleLabel(\n\tdateAttribute,\n\t{ isFloating = false, now = new Date() } = {}\n) {\n\tif ( ! dateAttribute || isFloating ) {\n\t\treturn __( 'Immediately' );\n\t}\n\n\t// If the user timezone does not equal the site timezone then using words\n\t// like 'tomorrow' is confusing, so show the full date.\n\tif ( ! isTimezoneSameAsSiteTimezone( now ) ) {\n\t\treturn getFullPostScheduleLabel( dateAttribute );\n\t}\n\n\tconst date = getDate( dateAttribute );\n\n\tif ( isSameDay( date, now ) ) {\n\t\treturn sprintf(\n\t\t\t// translators: %s: Time of day the post is scheduled for.\n\t\t\t__( 'Today at %s' ),\n\t\t\t// translators: If using a space between 'g:i' and 'a', use a non-breaking space.\n\t\t\tdateI18n( _x( 'g:i\\xa0a', 'post schedule time format' ), date )\n\t\t);\n\t}\n\n\tconst tomorrow = new Date( now );\n\ttomorrow.setDate( tomorrow.getDate() + 1 );\n\n\tif ( isSameDay( date, tomorrow ) ) {\n\t\treturn sprintf(\n\t\t\t// translators: %s: Time of day the post is scheduled for.\n\t\t\t__( 'Tomorrow at %s' ),\n\t\t\t// translators: If using a space between 'g:i' and 'a', use a non-breaking space.\n\t\t\tdateI18n( _x( 'g:i\\xa0a', 'post schedule time format' ), date )\n\t\t);\n\t}\n\n\tif ( date.getFullYear() === now.getFullYear() ) {\n\t\treturn dateI18n(\n\t\t\t// translators: If using a space between 'g:i' and 'a', use a non-breaking space.\n\t\t\t_x( 'F j g:i\\xa0a', 'post schedule date format without year' ),\n\t\t\tdate\n\t\t);\n\t}\n\n\treturn dateI18n(\n\t\t// translators: Use a non-breaking space between 'g:i' and 'a' if appropriate.\n\t\t_x( 'F j, Y g:i\\xa0a', 'post schedule full date format' ),\n\t\tdate\n\t);\n}\n\nfunction getTimezoneAbbreviation() {\n\tconst { timezone } = getSettings();\n\n\tif ( timezone.abbr && isNaN( Number( timezone.abbr ) ) ) {\n\t\treturn timezone.abbr;\n\t}\n\n\tconst symbol = timezone.offset < 0 ? '' : '+';\n\treturn `UTC${ symbol }${ timezone.offsetFormatted }`;\n}\n\nfunction isTimezoneSameAsSiteTimezone( date ) {\n\tconst { timezone } = getSettings();\n\n\tconst siteOffset = Number( timezone.offset );\n\tconst dateOffset = -1 * ( date.getTimezoneOffset() / 60 );\n\treturn siteOffset === dateOffset;\n}\n\nfunction isSameDay( left, right ) {\n\treturn (\n\t\tleft.getDate() === right.getDate() &&\n\t\tleft.getMonth() === right.getMonth() &&\n\t\tleft.getFullYear() === right.getFullYear()\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { BaseControl, Button } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { unescapeTerms } from '../../utils/terms';\n\nconst MIN_MOST_USED_TERMS = 3;\nconst DEFAULT_QUERY = {\n\tper_page: 10,\n\torderby: 'count',\n\torder: 'desc',\n\thide_empty: true,\n\t_fields: 'id,name,count',\n\tcontext: 'view',\n};\n\nexport default function MostUsedTerms( { onSelect, taxonomy } ) {\n\tconst { _terms, showTerms } = useSelect(\n\t\t( select ) => {\n\t\t\tconst mostUsedTerms = select( coreStore ).getEntityRecords(\n\t\t\t\t'taxonomy',\n\t\t\t\ttaxonomy.slug,\n\t\t\t\tDEFAULT_QUERY\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t_terms: mostUsedTerms,\n\t\t\t\tshowTerms: mostUsedTerms?.length >= MIN_MOST_USED_TERMS,\n\t\t\t};\n\t\t},\n\t\t[ taxonomy.slug ]\n\t);\n\n\tif ( ! showTerms ) {\n\t\treturn null;\n\t}\n\n\tconst terms = unescapeTerms( _terms );\n\n\treturn (\n\t\t<div className=\"editor-post-taxonomies__flat-term-most-used\">\n\t\t\t<BaseControl.VisualLabel\n\t\t\t\tas=\"h3\"\n\t\t\t\tclassName=\"editor-post-taxonomies__flat-term-most-used-label\"\n\t\t\t>\n\t\t\t\t{ taxonomy.labels.most_used }\n\t\t\t</BaseControl.VisualLabel>\n\t\t\t{ /*\n\t\t\t * Disable reason: The `list` ARIA role is redundant but\n\t\t\t * Safari+VoiceOver won't announce the list otherwise.\n\t\t\t */\n\t\t\t/* eslint-disable jsx-a11y/no-redundant-roles */ }\n\t\t\t<ul\n\t\t\t\trole=\"list\"\n\t\t\t\tclassName=\"editor-post-taxonomies__flat-term-most-used-list\"\n\t\t\t>\n\t\t\t\t{ terms.map( ( term ) => (\n\t\t\t\t\t<li key={ term.id }>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\tonClick={ () => onSelect( term ) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ term.name }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</li>\n\t\t\t\t) ) }\n\t\t\t</ul>\n\t\t\t{ /* eslint-enable jsx-a11y/no-redundant-roles */ }\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { useEffect, useMemo, useState } from '@wordpress/element';\nimport { FormTokenField, withFilters } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useDebounce } from '@wordpress/compose';\nimport { speak } from '@wordpress/a11y';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { unescapeString, unescapeTerm } from '../../utils/terms';\nimport MostUsedTerms from './most-used-terms';\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation.\n *\n * @type {Array<any>}\n */\nconst EMPTY_ARRAY = [];\n\n/**\n * Module constants\n */\nconst MAX_TERMS_SUGGESTIONS = 20;\nconst DEFAULT_QUERY = {\n\tper_page: MAX_TERMS_SUGGESTIONS,\n\t_fields: 'id,name',\n\tcontext: 'view',\n};\n\nconst isSameTermName = ( termA, termB ) =>\n\tunescapeString( termA ).toLowerCase() ===\n\tunescapeString( termB ).toLowerCase();\n\nconst termNamesToIds = ( names, terms ) => {\n\treturn names\n\t\t.map(\n\t\t\t( termName ) =>\n\t\t\t\tterms.find( ( term ) => isSameTermName( term.name, termName ) )\n\t\t\t\t\t?.id\n\t\t)\n\t\t.filter( ( id ) => id !== undefined );\n};\n\nexport function FlatTermSelector( { slug } ) {\n\tconst [ values, setValues ] = useState( [] );\n\tconst [ search, setSearch ] = useState( '' );\n\tconst debouncedSearch = useDebounce( setSearch, 500 );\n\n\tconst {\n\t\tterms,\n\t\ttermIds,\n\t\ttaxonomy,\n\t\thasAssignAction,\n\t\thasCreateAction,\n\t\thasResolvedTerms,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getCurrentPost, getEditedPostAttribute } =\n\t\t\t\tselect( editorStore );\n\t\t\tconst { getEntityRecords, getTaxonomy, hasFinishedResolution } =\n\t\t\t\tselect( coreStore );\n\t\t\tconst post = getCurrentPost();\n\t\t\tconst _taxonomy = getTaxonomy( slug );\n\t\t\tconst _termIds = _taxonomy\n\t\t\t\t? getEditedPostAttribute( _taxonomy.rest_base )\n\t\t\t\t: EMPTY_ARRAY;\n\n\t\t\tconst query = {\n\t\t\t\t...DEFAULT_QUERY,\n\t\t\t\tinclude: _termIds.join( ',' ),\n\t\t\t\tper_page: -1,\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\thasCreateAction: _taxonomy\n\t\t\t\t\t? post._links?.[\n\t\t\t\t\t\t\t'wp:action-create-' + _taxonomy.rest_base\n\t\t\t\t\t  ] ?? false\n\t\t\t\t\t: false,\n\t\t\t\thasAssignAction: _taxonomy\n\t\t\t\t\t? post._links?.[\n\t\t\t\t\t\t\t'wp:action-assign-' + _taxonomy.rest_base\n\t\t\t\t\t  ] ?? false\n\t\t\t\t\t: false,\n\t\t\t\ttaxonomy: _taxonomy,\n\t\t\t\ttermIds: _termIds,\n\t\t\t\tterms: _termIds.length\n\t\t\t\t\t? getEntityRecords( 'taxonomy', slug, query )\n\t\t\t\t\t: EMPTY_ARRAY,\n\t\t\t\thasResolvedTerms: hasFinishedResolution( 'getEntityRecords', [\n\t\t\t\t\t'taxonomy',\n\t\t\t\t\tslug,\n\t\t\t\t\tquery,\n\t\t\t\t] ),\n\t\t\t};\n\t\t},\n\t\t[ slug ]\n\t);\n\n\tconst { searchResults } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecords } = select( coreStore );\n\n\t\t\treturn {\n\t\t\t\tsearchResults: !! search\n\t\t\t\t\t? getEntityRecords( 'taxonomy', slug, {\n\t\t\t\t\t\t\t...DEFAULT_QUERY,\n\t\t\t\t\t\t\tsearch,\n\t\t\t\t\t  } )\n\t\t\t\t\t: EMPTY_ARRAY,\n\t\t\t};\n\t\t},\n\t\t[ search, slug ]\n\t);\n\n\t// Update terms state only after the selectors are resolved.\n\t// We're using this to avoid terms temporarily disappearing on slow networks\n\t// while core data makes REST API requests.\n\tuseEffect( () => {\n\t\tif ( hasResolvedTerms ) {\n\t\t\tconst newValues = ( terms ?? [] ).map( ( term ) =>\n\t\t\t\tunescapeString( term.name )\n\t\t\t);\n\n\t\t\tsetValues( newValues );\n\t\t}\n\t}, [ terms, hasResolvedTerms ] );\n\n\tconst suggestions = useMemo( () => {\n\t\treturn ( searchResults ?? [] ).map( ( term ) =>\n\t\t\tunescapeString( term.name )\n\t\t);\n\t}, [ searchResults ] );\n\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { saveEntityRecord } = useDispatch( coreStore );\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\n\tif ( ! hasAssignAction ) {\n\t\treturn null;\n\t}\n\n\tasync function findOrCreateTerm( term ) {\n\t\ttry {\n\t\t\tconst newTerm = await saveEntityRecord( 'taxonomy', slug, term, {\n\t\t\t\tthrowOnError: true,\n\t\t\t} );\n\t\t\treturn unescapeTerm( newTerm );\n\t\t} catch ( error ) {\n\t\t\tif ( error.code !== 'term_exists' ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tid: error.data.term_id,\n\t\t\t\tname: term.name,\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction onUpdateTerms( newTermIds ) {\n\t\teditPost( { [ taxonomy.rest_base ]: newTermIds } );\n\t}\n\n\tfunction onChange( termNames ) {\n\t\tconst availableTerms = [\n\t\t\t...( terms ?? [] ),\n\t\t\t...( searchResults ?? [] ),\n\t\t];\n\t\tconst uniqueTerms = termNames.reduce( ( acc, name ) => {\n\t\t\tif (\n\t\t\t\t! acc.some( ( n ) => n.toLowerCase() === name.toLowerCase() )\n\t\t\t) {\n\t\t\t\tacc.push( name );\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, [] );\n\n\t\tconst newTermNames = uniqueTerms.filter(\n\t\t\t( termName ) =>\n\t\t\t\t! availableTerms.find( ( term ) =>\n\t\t\t\t\tisSameTermName( term.name, termName )\n\t\t\t\t)\n\t\t);\n\n\t\t// Optimistically update term values.\n\t\t// The selector will always re-fetch terms later.\n\t\tsetValues( uniqueTerms );\n\n\t\tif ( newTermNames.length === 0 ) {\n\t\t\tonUpdateTerms( termNamesToIds( uniqueTerms, availableTerms ) );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! hasCreateAction ) {\n\t\t\treturn;\n\t\t}\n\n\t\tPromise.all(\n\t\t\tnewTermNames.map( ( termName ) =>\n\t\t\t\tfindOrCreateTerm( { name: termName } )\n\t\t\t)\n\t\t)\n\t\t\t.then( ( newTerms ) => {\n\t\t\t\tconst newAvailableTerms = availableTerms.concat( newTerms );\n\t\t\t\tonUpdateTerms(\n\t\t\t\t\ttermNamesToIds( uniqueTerms, newAvailableTerms )\n\t\t\t\t);\n\t\t\t} )\n\t\t\t.catch( ( error ) => {\n\t\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t\t// In case of a failure, try assigning available terms.\n\t\t\t\t// This will invalidate the optimistic update.\n\t\t\t\tonUpdateTerms( termNamesToIds( uniqueTerms, availableTerms ) );\n\t\t\t} );\n\t}\n\n\tfunction appendTerm( newTerm ) {\n\t\tif ( termIds.includes( newTerm.id ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newTermIds = [ ...termIds, newTerm.id ];\n\t\tconst defaultName = slug === 'post_tag' ? __( 'Tag' ) : __( 'Term' );\n\t\tconst termAddedMessage = sprintf(\n\t\t\t/* translators: %s: term name. */\n\t\t\t_x( '%s added', 'term' ),\n\t\t\ttaxonomy?.labels?.singular_name ?? defaultName\n\t\t);\n\n\t\tspeak( termAddedMessage, 'assertive' );\n\t\tonUpdateTerms( newTermIds );\n\t}\n\n\tconst newTermLabel =\n\t\ttaxonomy?.labels?.add_new_item ??\n\t\t( slug === 'post_tag' ? __( 'Add new tag' ) : __( 'Add new Term' ) );\n\tconst singularName =\n\t\ttaxonomy?.labels?.singular_name ??\n\t\t( slug === 'post_tag' ? __( 'Tag' ) : __( 'Term' ) );\n\tconst termAddedLabel = sprintf(\n\t\t/* translators: %s: term name. */\n\t\t_x( '%s added', 'term' ),\n\t\tsingularName\n\t);\n\tconst termRemovedLabel = sprintf(\n\t\t/* translators: %s: term name. */\n\t\t_x( '%s removed', 'term' ),\n\t\tsingularName\n\t);\n\tconst removeTermLabel = sprintf(\n\t\t/* translators: %s: term name. */\n\t\t_x( 'Remove %s', 'term' ),\n\t\tsingularName\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<FormTokenField\n\t\t\t\t__next40pxDefaultSize\n\t\t\t\tvalue={ values }\n\t\t\t\tsuggestions={ suggestions }\n\t\t\t\tonChange={ onChange }\n\t\t\t\tonInputChange={ debouncedSearch }\n\t\t\t\tmaxSuggestions={ MAX_TERMS_SUGGESTIONS }\n\t\t\t\tlabel={ newTermLabel }\n\t\t\t\tmessages={ {\n\t\t\t\t\tadded: termAddedLabel,\n\t\t\t\t\tremoved: termRemovedLabel,\n\t\t\t\t\tremove: removeTermLabel,\n\t\t\t\t} }\n\t\t\t/>\n\t\t\t<MostUsedTerms taxonomy={ taxonomy } onSelect={ appendTerm } />\n\t\t</>\n\t);\n}\n\nexport default withFilters( 'editor.PostTaxonomyType' )( FlatTermSelector );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { PanelBody } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport FlatTermSelector from '../post-taxonomies/flat-term-selector';\nimport { store as editorStore } from '../../store';\n\nconst TagsPanel = () => {\n\tconst panelBodyTitle = [\n\t\t__( 'Suggestion:' ),\n\t\t<span className=\"editor-post-publish-panel__link\" key=\"label\">\n\t\t\t{ __( 'Add tags' ) }\n\t\t</span>,\n\t];\n\n\treturn (\n\t\t<PanelBody initialOpen={ false } title={ panelBodyTitle }>\n\t\t\t<p>\n\t\t\t\t{ __(\n\t\t\t\t\t'Tags help users and search engines navigate your site and find your content. Add a few keywords to describe your post.'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t\t<FlatTermSelector slug={ 'post_tag' } />\n\t\t</PanelBody>\n\t);\n};\n\nconst MaybeTagsPanel = () => {\n\tconst { hasTags, isPostTypeSupported } = useSelect( ( select ) => {\n\t\tconst postType = select( editorStore ).getCurrentPostType();\n\t\tconst tagsTaxonomy = select( coreStore ).getTaxonomy( 'post_tag' );\n\t\tconst _isPostTypeSupported = tagsTaxonomy?.types?.includes( postType );\n\t\tconst areTagsFetched = tagsTaxonomy !== undefined;\n\t\tconst tags =\n\t\t\ttagsTaxonomy &&\n\t\t\tselect( editorStore ).getEditedPostAttribute(\n\t\t\t\ttagsTaxonomy.rest_base\n\t\t\t);\n\t\treturn {\n\t\t\thasTags: !! tags?.length,\n\t\t\tisPostTypeSupported: areTagsFetched && _isPostTypeSupported,\n\t\t};\n\t}, [] );\n\tconst [ hadTagsWhenOpeningThePanel ] = useState( hasTags );\n\n\tif ( ! isPostTypeSupported ) {\n\t\treturn null;\n\t}\n\n\t/*\n\t * We only want to show the tag panel if the post didn't have\n\t * any tags when the user hit the Publish button.\n\t *\n\t * We can't use the prop.hasTags because it'll change to true\n\t * if the user adds a new tag within the pre-publish panel.\n\t * This would force a re-render and a new prop.hasTags check,\n\t * hiding this panel and keeping the user from adding\n\t * more than one tag.\n\t */\n\tif ( ! hadTagsWhenOpeningThePanel ) {\n\t\treturn <TagsPanel />;\n\t}\n\n\treturn null;\n};\n\nexport default MaybeTagsPanel;\n","/**\n * WordPress dependencies\n */\nimport { Button, PanelBody } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { POST_FORMATS } from '../post-format';\nimport { store as editorStore } from '../../store';\n\nconst getSuggestion = ( supportedFormats, suggestedPostFormat ) => {\n\tconst formats = POST_FORMATS.filter( ( format ) =>\n\t\tsupportedFormats?.includes( format.id )\n\t);\n\treturn formats.find( ( format ) => format.id === suggestedPostFormat );\n};\n\nconst PostFormatSuggestion = ( {\n\tsuggestedPostFormat,\n\tsuggestionText,\n\tonUpdatePostFormat,\n} ) => (\n\t<Button\n\t\tvariant=\"link\"\n\t\tonClick={ () => onUpdatePostFormat( suggestedPostFormat ) }\n\t>\n\t\t{ suggestionText }\n\t</Button>\n);\n\nexport default function PostFormatPanel() {\n\tconst { currentPostFormat, suggestion } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, getSuggestedPostFormat } =\n\t\t\tselect( editorStore );\n\t\tconst supportedFormats =\n\t\t\tselect( coreStore ).getThemeSupports().formats ?? [];\n\t\treturn {\n\t\t\tcurrentPostFormat: getEditedPostAttribute( 'format' ),\n\t\t\tsuggestion: getSuggestion(\n\t\t\t\tsupportedFormats,\n\t\t\t\tgetSuggestedPostFormat()\n\t\t\t),\n\t\t};\n\t}, [] );\n\n\tconst { editPost } = useDispatch( editorStore );\n\n\tconst onUpdatePostFormat = ( format ) => editPost( { format } );\n\n\tconst panelBodyTitle = [\n\t\t__( 'Suggestion:' ),\n\t\t<span className=\"editor-post-publish-panel__link\" key=\"label\">\n\t\t\t{ __( 'Use a post format' ) }\n\t\t</span>,\n\t];\n\n\tif ( ! suggestion || suggestion.id === currentPostFormat ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody initialOpen={ false } title={ panelBodyTitle }>\n\t\t\t<p>\n\t\t\t\t{ __(\n\t\t\t\t\t'Your theme uses post formats to highlight different kinds of content, like images or videos. Apply a post format to see this special styling.'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<PostFormatSuggestion\n\t\t\t\t\tonUpdatePostFormat={ onUpdatePostFormat }\n\t\t\t\t\tsuggestedPostFormat={ suggestion.id }\n\t\t\t\t\tsuggestionText={ sprintf(\n\t\t\t\t\t\t/* translators: %s: post format */\n\t\t\t\t\t\t__( 'Apply the \"%1$s\" format.' ),\n\t\t\t\t\t\tsuggestion.caption\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</p>\n\t\t</PanelBody>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, _n, _x, sprintf } from '@wordpress/i18n';\nimport { useMemo, useState } from '@wordpress/element';\nimport { store as noticesStore } from '@wordpress/notices';\nimport {\n\tButton,\n\tCheckboxControl,\n\tTextControl,\n\tTreeSelect,\n\twithFilters,\n\tFlex,\n\tFlexItem,\n} from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useDebounce } from '@wordpress/compose';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { speak } from '@wordpress/a11y';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport { buildTermsTree } from '../../utils/terms';\nimport { store as editorStore } from '../../store';\n\n/**\n * Module Constants\n */\nconst DEFAULT_QUERY = {\n\tper_page: -1,\n\torderby: 'name',\n\torder: 'asc',\n\t_fields: 'id,name,parent',\n\tcontext: 'view',\n};\n\nconst MIN_TERMS_COUNT_FOR_FILTER = 8;\n\nconst EMPTY_ARRAY = [];\n\n/**\n * Sort Terms by Selected.\n *\n * @param {Object[]} termsTree Array of terms in tree format.\n * @param {number[]} terms     Selected terms.\n *\n * @return {Object[]} Sorted array of terms.\n */\nexport function sortBySelected( termsTree, terms ) {\n\tconst treeHasSelection = ( termTree ) => {\n\t\tif ( terms.indexOf( termTree.id ) !== -1 ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( undefined === termTree.children ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (\n\t\t\ttermTree.children\n\t\t\t\t.map( treeHasSelection )\n\t\t\t\t.filter( ( child ) => child ).length > 0\n\t\t);\n\t};\n\tconst termOrChildIsSelected = ( termA, termB ) => {\n\t\tconst termASelected = treeHasSelection( termA );\n\t\tconst termBSelected = treeHasSelection( termB );\n\n\t\tif ( termASelected === termBSelected ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif ( termASelected && ! termBSelected ) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif ( ! termASelected && termBSelected ) {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\tconst newTermTree = [ ...termsTree ];\n\tnewTermTree.sort( termOrChildIsSelected );\n\treturn newTermTree;\n}\n\n/**\n * Find term by parent id or name.\n *\n * @param {Object[]}      terms  Array of Terms.\n * @param {number|string} parent id.\n * @param {string}        name   Term name.\n * @return {Object} Term object.\n */\nexport function findTerm( terms, parent, name ) {\n\treturn terms.find( ( term ) => {\n\t\treturn (\n\t\t\t( ( ! term.parent && ! parent ) ||\n\t\t\t\tparseInt( term.parent ) === parseInt( parent ) ) &&\n\t\t\tterm.name.toLowerCase() === name.toLowerCase()\n\t\t);\n\t} );\n}\n\n/**\n * Get filter matcher function.\n *\n * @param {string} filterValue Filter value.\n * @return {(function(Object): (Object|boolean))} Matcher function.\n */\nexport function getFilterMatcher( filterValue ) {\n\tconst matchTermsForFilter = ( originalTerm ) => {\n\t\tif ( '' === filterValue ) {\n\t\t\treturn originalTerm;\n\t\t}\n\n\t\t// Shallow clone, because we'll be filtering the term's children and\n\t\t// don't want to modify the original term.\n\t\tconst term = { ...originalTerm };\n\n\t\t// Map and filter the children, recursive so we deal with grandchildren\n\t\t// and any deeper levels.\n\t\tif ( term.children.length > 0 ) {\n\t\t\tterm.children = term.children\n\t\t\t\t.map( matchTermsForFilter )\n\t\t\t\t.filter( ( child ) => child );\n\t\t}\n\n\t\t// If the term's name contains the filterValue, or it has children\n\t\t// (i.e. some child matched at some point in the tree) then return it.\n\t\tif (\n\t\t\t-1 !==\n\t\t\t\tterm.name.toLowerCase().indexOf( filterValue.toLowerCase() ) ||\n\t\t\tterm.children.length > 0\n\t\t) {\n\t\t\treturn term;\n\t\t}\n\n\t\t// Otherwise, return false. After mapping, the list of terms will need\n\t\t// to have false values filtered out.\n\t\treturn false;\n\t};\n\treturn matchTermsForFilter;\n}\n\n/**\n * Hierarchical term selector.\n *\n * @param {Object} props      Component props.\n * @param {string} props.slug Taxonomy slug.\n * @return {Element}        Hierarchical term selector component.\n */\nexport function HierarchicalTermSelector( { slug } ) {\n\tconst [ adding, setAdding ] = useState( false );\n\tconst [ formName, setFormName ] = useState( '' );\n\t/**\n\t * @type {[number|'', Function]}\n\t */\n\tconst [ formParent, setFormParent ] = useState( '' );\n\tconst [ showForm, setShowForm ] = useState( false );\n\tconst [ filterValue, setFilterValue ] = useState( '' );\n\tconst [ filteredTermsTree, setFilteredTermsTree ] = useState( [] );\n\tconst debouncedSpeak = useDebounce( speak, 500 );\n\n\tconst {\n\t\thasCreateAction,\n\t\thasAssignAction,\n\t\tterms,\n\t\tloading,\n\t\tavailableTerms,\n\t\ttaxonomy,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getCurrentPost, getEditedPostAttribute } =\n\t\t\t\tselect( editorStore );\n\t\t\tconst { getTaxonomy, getEntityRecords, isResolving } =\n\t\t\t\tselect( coreStore );\n\t\t\tconst _taxonomy = getTaxonomy( slug );\n\t\t\tconst post = getCurrentPost();\n\n\t\t\treturn {\n\t\t\t\thasCreateAction: _taxonomy\n\t\t\t\t\t? post._links?.[\n\t\t\t\t\t\t\t'wp:action-create-' + _taxonomy.rest_base\n\t\t\t\t\t  ] ?? false\n\t\t\t\t\t: false,\n\t\t\t\thasAssignAction: _taxonomy\n\t\t\t\t\t? post._links?.[\n\t\t\t\t\t\t\t'wp:action-assign-' + _taxonomy.rest_base\n\t\t\t\t\t  ] ?? false\n\t\t\t\t\t: false,\n\t\t\t\tterms: _taxonomy\n\t\t\t\t\t? getEditedPostAttribute( _taxonomy.rest_base )\n\t\t\t\t\t: EMPTY_ARRAY,\n\t\t\t\tloading: isResolving( 'getEntityRecords', [\n\t\t\t\t\t'taxonomy',\n\t\t\t\t\tslug,\n\t\t\t\t\tDEFAULT_QUERY,\n\t\t\t\t] ),\n\t\t\t\tavailableTerms:\n\t\t\t\t\tgetEntityRecords( 'taxonomy', slug, DEFAULT_QUERY ) ||\n\t\t\t\t\tEMPTY_ARRAY,\n\t\t\t\ttaxonomy: _taxonomy,\n\t\t\t};\n\t\t},\n\t\t[ slug ]\n\t);\n\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { saveEntityRecord } = useDispatch( coreStore );\n\n\tconst availableTermsTree = useMemo(\n\t\t() => sortBySelected( buildTermsTree( availableTerms ), terms ),\n\t\t// Remove `terms` from the dependency list to avoid reordering every time\n\t\t// checking or unchecking a term.\n\t\t[ availableTerms ]\n\t);\n\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\n\tif ( ! hasAssignAction ) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Append new term.\n\t *\n\t * @param {Object} term Term object.\n\t * @return {Promise} A promise that resolves to save term object.\n\t */\n\tconst addTerm = ( term ) => {\n\t\treturn saveEntityRecord( 'taxonomy', slug, term, {\n\t\t\tthrowOnError: true,\n\t\t} );\n\t};\n\n\t/**\n\t * Update terms for post.\n\t *\n\t * @param {number[]} termIds Term ids.\n\t */\n\tconst onUpdateTerms = ( termIds ) => {\n\t\teditPost( { [ taxonomy.rest_base ]: termIds } );\n\t};\n\n\t/**\n\t * Handler for checking term.\n\t *\n\t * @param {number} termId\n\t */\n\tconst onChange = ( termId ) => {\n\t\tconst hasTerm = terms.includes( termId );\n\t\tconst newTerms = hasTerm\n\t\t\t? terms.filter( ( id ) => id !== termId )\n\t\t\t: [ ...terms, termId ];\n\t\tonUpdateTerms( newTerms );\n\t};\n\n\tconst onChangeFormName = ( value ) => {\n\t\tsetFormName( value );\n\t};\n\n\t/**\n\t * Handler for changing form parent.\n\t *\n\t * @param {number|''} parentId Parent post id.\n\t */\n\tconst onChangeFormParent = ( parentId ) => {\n\t\tsetFormParent( parentId );\n\t};\n\n\tconst onToggleForm = () => {\n\t\tsetShowForm( ! showForm );\n\t};\n\n\tconst onAddTerm = async ( event ) => {\n\t\tevent.preventDefault();\n\t\tif ( formName === '' || adding ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if the term we are adding already exists.\n\t\tconst existingTerm = findTerm( availableTerms, formParent, formName );\n\t\tif ( existingTerm ) {\n\t\t\t// If the term we are adding exists but is not selected select it.\n\t\t\tif ( ! terms.some( ( term ) => term === existingTerm.id ) ) {\n\t\t\t\tonUpdateTerms( [ ...terms, existingTerm.id ] );\n\t\t\t}\n\n\t\t\tsetFormName( '' );\n\t\t\tsetFormParent( '' );\n\n\t\t\treturn;\n\t\t}\n\t\tsetAdding( true );\n\t\tlet newTerm;\n\t\ttry {\n\t\t\tnewTerm = await addTerm( {\n\t\t\t\tname: formName,\n\t\t\t\tparent: formParent ? formParent : undefined,\n\t\t\t} );\n\t\t} catch ( error ) {\n\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\t\tconst defaultName =\n\t\t\tslug === 'category' ? __( 'Category' ) : __( 'Term' );\n\t\tconst termAddedMessage = sprintf(\n\t\t\t/* translators: %s: taxonomy name */\n\t\t\t_x( '%s added', 'term' ),\n\t\t\ttaxonomy?.labels?.singular_name ?? defaultName\n\t\t);\n\t\tspeak( termAddedMessage, 'assertive' );\n\t\tsetAdding( false );\n\t\tsetFormName( '' );\n\t\tsetFormParent( '' );\n\t\tonUpdateTerms( [ ...terms, newTerm.id ] );\n\t};\n\n\tconst setFilter = ( value ) => {\n\t\tconst newFilteredTermsTree = availableTermsTree\n\t\t\t.map( getFilterMatcher( value ) )\n\t\t\t.filter( ( term ) => term );\n\t\tconst getResultCount = ( termsTree ) => {\n\t\t\tlet count = 0;\n\t\t\tfor ( let i = 0; i < termsTree.length; i++ ) {\n\t\t\t\tcount++;\n\t\t\t\tif ( undefined !== termsTree[ i ].children ) {\n\t\t\t\t\tcount += getResultCount( termsTree[ i ].children );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t};\n\n\t\tsetFilterValue( value );\n\t\tsetFilteredTermsTree( newFilteredTermsTree );\n\n\t\tconst resultCount = getResultCount( newFilteredTermsTree );\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results */\n\t\t\t_n( '%d result found.', '%d results found.', resultCount ),\n\t\t\tresultCount\n\t\t);\n\n\t\tdebouncedSpeak( resultsFoundMessage, 'assertive' );\n\t};\n\n\tconst renderTerms = ( renderedTerms ) => {\n\t\treturn renderedTerms.map( ( term ) => {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tkey={ term.id }\n\t\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-choice\"\n\t\t\t\t>\n\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tchecked={ terms.indexOf( term.id ) !== -1 }\n\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\tconst termId = parseInt( term.id, 10 );\n\t\t\t\t\t\t\tonChange( termId );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tlabel={ decodeEntities( term.name ) }\n\t\t\t\t\t/>\n\t\t\t\t\t{ !! term.children.length && (\n\t\t\t\t\t\t<div className=\"editor-post-taxonomies__hierarchical-terms-subchoices\">\n\t\t\t\t\t\t\t{ renderTerms( term.children ) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t);\n\t\t} );\n\t};\n\n\tconst labelWithFallback = (\n\t\tlabelProperty,\n\t\tfallbackIsCategory,\n\t\tfallbackIsNotCategory\n\t) =>\n\t\ttaxonomy?.labels?.[ labelProperty ] ??\n\t\t( slug === 'category' ? fallbackIsCategory : fallbackIsNotCategory );\n\n\tconst newTermButtonLabel = labelWithFallback(\n\t\t'add_new_item',\n\t\t__( 'Add new category' ),\n\t\t__( 'Add new term' )\n\t);\n\tconst newTermLabel = labelWithFallback(\n\t\t'new_item_name',\n\t\t__( 'Add new category' ),\n\t\t__( 'Add new term' )\n\t);\n\tconst parentSelectLabel = labelWithFallback(\n\t\t'parent_item',\n\t\t__( 'Parent Category' ),\n\t\t__( 'Parent Term' )\n\t);\n\tconst noParentOption = `— ${ parentSelectLabel } —`;\n\tconst newTermSubmitLabel = newTermButtonLabel;\n\tconst filterLabel = taxonomy?.labels?.search_items ?? __( 'Search Terms' );\n\tconst groupLabel = taxonomy?.name ?? __( 'Terms' );\n\tconst showFilter = availableTerms.length >= MIN_TERMS_COUNT_FOR_FILTER;\n\n\treturn (\n\t\t<Flex direction=\"column\" gap=\"4\">\n\t\t\t{ showFilter && (\n\t\t\t\t<TextControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={ filterLabel }\n\t\t\t\t\tvalue={ filterValue }\n\t\t\t\t\tonChange={ setFilter }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t<div\n\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-list\"\n\t\t\t\ttabIndex=\"0\"\n\t\t\t\trole=\"group\"\n\t\t\t\taria-label={ groupLabel }\n\t\t\t>\n\t\t\t\t{ renderTerms(\n\t\t\t\t\t'' !== filterValue ? filteredTermsTree : availableTermsTree\n\t\t\t\t) }\n\t\t\t</div>\n\t\t\t{ ! loading && hasCreateAction && (\n\t\t\t\t<FlexItem>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={ onToggleForm }\n\t\t\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-add\"\n\t\t\t\t\t\taria-expanded={ showForm }\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ newTermButtonLabel }\n\t\t\t\t\t</Button>\n\t\t\t\t</FlexItem>\n\t\t\t) }\n\t\t\t{ showForm && (\n\t\t\t\t<form onSubmit={ onAddTerm }>\n\t\t\t\t\t<Flex direction=\"column\" gap=\"4\">\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-input\"\n\t\t\t\t\t\t\tlabel={ newTermLabel }\n\t\t\t\t\t\t\tvalue={ formName }\n\t\t\t\t\t\t\tonChange={ onChangeFormName }\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ !! availableTerms.length && (\n\t\t\t\t\t\t\t<TreeSelect\n\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={ parentSelectLabel }\n\t\t\t\t\t\t\t\tnoOptionLabel={ noParentOption }\n\t\t\t\t\t\t\t\tonChange={ onChangeFormParent }\n\t\t\t\t\t\t\t\tselectedId={ formParent }\n\t\t\t\t\t\t\t\ttree={ availableTermsTree }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-submit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ newTermSubmitLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t</Flex>\n\t\t\t\t</form>\n\t\t\t) }\n\t\t</Flex>\n\t);\n}\n\nexport default withFilters( 'editor.PostTaxonomyType' )(\n\tHierarchicalTermSelector\n);\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { PanelBody } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useState, useEffect } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport HierarchicalTermSelector from '../post-taxonomies/hierarchical-term-selector';\nimport { store as editorStore } from '../../store';\n\nfunction MaybeCategoryPanel() {\n\tconst hasNoCategory = useSelect( ( select ) => {\n\t\tconst postType = select( editorStore ).getCurrentPostType();\n\t\tconst { canUser, getEntityRecord, getTaxonomy } = select( coreStore );\n\t\tconst categoriesTaxonomy = getTaxonomy( 'category' );\n\t\tconst defaultCategoryId = canUser( 'read', 'settings' )\n\t\t\t? getEntityRecord( 'root', 'site' )?.default_category\n\t\t\t: undefined;\n\t\tconst defaultCategory = defaultCategoryId\n\t\t\t? getEntityRecord( 'taxonomy', 'category', defaultCategoryId )\n\t\t\t: undefined;\n\t\tconst postTypeSupportsCategories =\n\t\t\tcategoriesTaxonomy &&\n\t\t\tcategoriesTaxonomy.types.some( ( type ) => type === postType );\n\t\tconst categories =\n\t\t\tcategoriesTaxonomy &&\n\t\t\tselect( editorStore ).getEditedPostAttribute(\n\t\t\t\tcategoriesTaxonomy.rest_base\n\t\t\t);\n\n\t\t// This boolean should return true if everything is loaded\n\t\t// ( categoriesTaxonomy, defaultCategory )\n\t\t// and the post has not been assigned a category different than \"uncategorized\".\n\t\treturn (\n\t\t\t!! categoriesTaxonomy &&\n\t\t\t!! defaultCategory &&\n\t\t\tpostTypeSupportsCategories &&\n\t\t\t( categories?.length === 0 ||\n\t\t\t\t( categories?.length === 1 &&\n\t\t\t\t\tdefaultCategory?.id === categories[ 0 ] ) )\n\t\t);\n\t}, [] );\n\tconst [ shouldShowPanel, setShouldShowPanel ] = useState( false );\n\tuseEffect( () => {\n\t\t// We use state to avoid hiding the panel if the user edits the categories\n\t\t// and adds one within the panel itself (while visible).\n\t\tif ( hasNoCategory ) {\n\t\t\tsetShouldShowPanel( true );\n\t\t}\n\t}, [ hasNoCategory ] );\n\n\tif ( ! shouldShowPanel ) {\n\t\treturn null;\n\t}\n\n\tconst panelBodyTitle = [\n\t\t__( 'Suggestion:' ),\n\t\t<span className=\"editor-post-publish-panel__link\" key=\"label\">\n\t\t\t{ __( 'Assign a category' ) }\n\t\t</span>,\n\t];\n\n\treturn (\n\t\t<PanelBody initialOpen={ false } title={ panelBodyTitle }>\n\t\t\t<p>\n\t\t\t\t{ __(\n\t\t\t\t\t'Categories provide a helpful way to group related posts together and to quickly tell readers what a post is about.'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t\t<HierarchicalTermSelector slug=\"category\" />\n\t\t</PanelBody>\n\t);\n}\n\nexport default MaybeCategoryPanel;\n","/**\n * WordPress dependencies\n */\nimport {\n\tPanelBody,\n\tButton,\n\tSpinner,\n\t__unstableMotion as motion,\n\t__unstableAnimatePresence as AnimatePresence,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useState } from '@wordpress/element';\nimport { isBlobURL } from '@wordpress/blob';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction flattenBlocks( blocks ) {\n\tconst result = [];\n\n\tblocks.forEach( ( block ) => {\n\t\tresult.push( block );\n\t\tresult.push( ...flattenBlocks( block.innerBlocks ) );\n\t} );\n\n\treturn result;\n}\n\nfunction Image( block ) {\n\tconst { selectBlock } = useDispatch( blockEditorStore );\n\treturn (\n\t\t<motion.img\n\t\t\ttabIndex={ 0 }\n\t\t\trole=\"button\"\n\t\t\taria-label={ __( 'Select image block.' ) }\n\t\t\tonClick={ () => {\n\t\t\t\tselectBlock( block.clientId );\n\t\t\t} }\n\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\tif ( event.key === 'Enter' || event.key === ' ' ) {\n\t\t\t\t\tselectBlock( block.clientId );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t} }\n\t\t\tkey={ block.clientId }\n\t\t\talt={ block.attributes.alt }\n\t\t\tsrc={ block.attributes.url }\n\t\t\tanimate={ { opacity: 1 } }\n\t\t\texit={ { opacity: 0, scale: 0 } }\n\t\t\tstyle={ {\n\t\t\t\twidth: '36px',\n\t\t\t\theight: '36px',\n\t\t\t\tobjectFit: 'cover',\n\t\t\t\tborderRadius: '2px',\n\t\t\t\tcursor: 'pointer',\n\t\t\t} }\n\t\t\twhileHover={ { scale: 1.08 } }\n\t\t/>\n\t);\n}\n\nexport default function PostFormatPanel() {\n\tconst [ isUploading, setIsUploading ] = useState( false );\n\tconst { editorBlocks, mediaUpload } = useSelect(\n\t\t( select ) => ( {\n\t\t\teditorBlocks: select( editorStore ).getEditorBlocks(),\n\t\t\tmediaUpload: select( blockEditorStore ).getSettings().mediaUpload,\n\t\t} ),\n\t\t[]\n\t);\n\tconst externalImages = flattenBlocks( editorBlocks ).filter(\n\t\t( block ) =>\n\t\t\tblock.name === 'core/image' &&\n\t\t\tblock.attributes.url &&\n\t\t\t! block.attributes.id\n\t);\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\n\tif ( ! mediaUpload || ! externalImages.length ) {\n\t\treturn null;\n\t}\n\n\tconst panelBodyTitle = [\n\t\t__( 'Suggestion:' ),\n\t\t<span className=\"editor-post-publish-panel__link\" key=\"label\">\n\t\t\t{ __( 'External media' ) }\n\t\t</span>,\n\t];\n\n\tfunction uploadImages() {\n\t\tsetIsUploading( true );\n\t\tPromise.all(\n\t\t\texternalImages.map( ( image ) =>\n\t\t\t\twindow\n\t\t\t\t\t.fetch(\n\t\t\t\t\t\timage.attributes.url.includes( '?' )\n\t\t\t\t\t\t\t? image.attributes.url\n\t\t\t\t\t\t\t: image.attributes.url + '?'\n\t\t\t\t\t)\n\t\t\t\t\t.then( ( response ) => response.blob() )\n\t\t\t\t\t.then(\n\t\t\t\t\t\t( blob ) =>\n\t\t\t\t\t\t\tnew Promise( ( resolve, reject ) => {\n\t\t\t\t\t\t\t\tmediaUpload( {\n\t\t\t\t\t\t\t\t\tfilesList: [ blob ],\n\t\t\t\t\t\t\t\t\tonFileChange: ( [ media ] ) => {\n\t\t\t\t\t\t\t\t\t\tif ( isBlobURL( media.url ) ) {\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tupdateBlockAttributes( image.clientId, {\n\t\t\t\t\t\t\t\t\t\t\tid: media.id,\n\t\t\t\t\t\t\t\t\t\t\turl: media.url,\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tonError() {\n\t\t\t\t\t\t\t\t\t\treject();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t)\n\t\t).finally( () => {\n\t\t\tsetIsUploading( false );\n\t\t} );\n\t}\n\n\treturn (\n\t\t<PanelBody initialOpen title={ panelBodyTitle }>\n\t\t\t<p>\n\t\t\t\t{ __(\n\t\t\t\t\t'Upload external images to the Media Library. Images from different domains may load slowly, display incorrectly, or be removed unexpectedly.'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t\t<div\n\t\t\t\tstyle={ {\n\t\t\t\t\tdisplay: 'inline-flex',\n\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\tgap: '8px',\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<AnimatePresence>\n\t\t\t\t\t{ externalImages.map( ( image ) => {\n\t\t\t\t\t\treturn <Image key={ image.clientId } { ...image } />;\n\t\t\t\t\t} ) }\n\t\t\t\t</AnimatePresence>\n\t\t\t\t{ isUploading ? (\n\t\t\t\t\t<Spinner />\n\t\t\t\t) : (\n\t\t\t\t\t<Button variant=\"primary\" onClick={ uploadImages }>\n\t\t\t\t\t\t{ __( 'Upload' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</PanelBody>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Icon, PanelBody } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { wordpress } from '@wordpress/icons';\nimport { filterURLForDisplay } from '@wordpress/url';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport PostVisibility from '../post-visibility';\nimport PostVisibilityLabel from '../post-visibility/label';\nimport PostSchedule from '../post-schedule';\nimport PostScheduleLabel from '../post-schedule/label';\nimport MaybeTagsPanel from './maybe-tags-panel';\nimport MaybePostFormatPanel from './maybe-post-format-panel';\nimport { store as editorStore } from '../../store';\nimport MaybeCategoryPanel from './maybe-category-panel';\nimport MaybeUploadMedia from './maybe-upload-media';\n\nfunction PostPublishPanelPrepublish( { children } ) {\n\tconst {\n\t\tisBeingScheduled,\n\t\tisRequestingSiteIcon,\n\t\thasPublishAction,\n\t\tsiteIconUrl,\n\t\tsiteTitle,\n\t\tsiteHome,\n\t} = useSelect( ( select ) => {\n\t\tconst { getCurrentPost, isEditedPostBeingScheduled } =\n\t\t\tselect( editorStore );\n\t\tconst { getEntityRecord, isResolving } = select( coreStore );\n\t\tconst siteData =\n\t\t\tgetEntityRecord( 'root', '__unstableBase', undefined ) || {};\n\n\t\treturn {\n\t\t\thasPublishAction:\n\t\t\t\tgetCurrentPost()._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\tisBeingScheduled: isEditedPostBeingScheduled(),\n\t\t\tisRequestingSiteIcon: isResolving( 'getEntityRecord', [\n\t\t\t\t'root',\n\t\t\t\t'__unstableBase',\n\t\t\t\tundefined,\n\t\t\t] ),\n\t\t\tsiteIconUrl: siteData.site_icon_url,\n\t\t\tsiteTitle: siteData.name,\n\t\t\tsiteHome: siteData.home && filterURLForDisplay( siteData.home ),\n\t\t};\n\t}, [] );\n\n\tlet siteIcon = (\n\t\t<Icon className=\"components-site-icon\" size=\"36px\" icon={ wordpress } />\n\t);\n\n\tif ( siteIconUrl ) {\n\t\tsiteIcon = (\n\t\t\t<img\n\t\t\t\talt={ __( 'Site Icon' ) }\n\t\t\t\tclassName=\"components-site-icon\"\n\t\t\t\tsrc={ siteIconUrl }\n\t\t\t/>\n\t\t);\n\t}\n\n\tif ( isRequestingSiteIcon ) {\n\t\tsiteIcon = null;\n\t}\n\n\tlet prePublishTitle, prePublishBodyText;\n\n\tif ( ! hasPublishAction ) {\n\t\tprePublishTitle = __( 'Are you ready to submit for review?' );\n\t\tprePublishBodyText = __(\n\t\t\t'When you’re ready, submit your work for review, and an Editor will be able to approve it for you.'\n\t\t);\n\t} else if ( isBeingScheduled ) {\n\t\tprePublishTitle = __( 'Are you ready to schedule?' );\n\t\tprePublishBodyText = __(\n\t\t\t'Your work will be published at the specified date and time.'\n\t\t);\n\t} else {\n\t\tprePublishTitle = __( 'Are you ready to publish?' );\n\t\tprePublishBodyText = __(\n\t\t\t'Double-check your settings before publishing.'\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"editor-post-publish-panel__prepublish\">\n\t\t\t<div>\n\t\t\t\t<strong>{ prePublishTitle }</strong>\n\t\t\t</div>\n\t\t\t<p>{ prePublishBodyText }</p>\n\t\t\t<div className=\"components-site-card\">\n\t\t\t\t{ siteIcon }\n\t\t\t\t<div className=\"components-site-info\">\n\t\t\t\t\t<span className=\"components-site-name\">\n\t\t\t\t\t\t{ decodeEntities( siteTitle ) || __( '(Untitled)' ) }\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"components-site-home\">{ siteHome }</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<MaybeUploadMedia />\n\t\t\t{ hasPublishAction && (\n\t\t\t\t<>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\tinitialOpen={ false }\n\t\t\t\t\t\ttitle={ [\n\t\t\t\t\t\t\t__( 'Visibility:' ),\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"editor-post-publish-panel__link\"\n\t\t\t\t\t\t\t\tkey=\"label\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<PostVisibilityLabel />\n\t\t\t\t\t\t\t</span>,\n\t\t\t\t\t\t] }\n\t\t\t\t\t>\n\t\t\t\t\t\t<PostVisibility />\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\tinitialOpen={ false }\n\t\t\t\t\t\ttitle={ [\n\t\t\t\t\t\t\t__( 'Publish:' ),\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"editor-post-publish-panel__link\"\n\t\t\t\t\t\t\t\tkey=\"label\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<PostScheduleLabel />\n\t\t\t\t\t\t\t</span>,\n\t\t\t\t\t\t] }\n\t\t\t\t\t>\n\t\t\t\t\t\t<PostSchedule />\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<MaybePostFormatPanel />\n\t\t\t<MaybeTagsPanel />\n\t\t\t<MaybeCategoryPanel />\n\t\t\t{ children }\n\t\t</div>\n\t);\n}\n\nexport default PostPublishPanelPrepublish;\n","/**\n * WordPress dependencies\n */\nimport { PanelBody, Button, TextControl } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Component, createRef } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { addQueryArgs, safeDecodeURIComponent } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { useCopyToClipboard } from '@wordpress/compose';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostScheduleLabel from '../post-schedule/label';\nimport { store as editorStore } from '../../store';\n\nconst POSTNAME = '%postname%';\nconst PAGENAME = '%pagename%';\n\n/**\n * Returns URL for a future post.\n *\n * @param {Object} post Post object.\n *\n * @return {string} PostPublish URL.\n */\n\nconst getFuturePostUrl = ( post ) => {\n\tconst { slug } = post;\n\n\tif ( post.permalink_template.includes( POSTNAME ) ) {\n\t\treturn post.permalink_template.replace( POSTNAME, slug );\n\t}\n\n\tif ( post.permalink_template.includes( PAGENAME ) ) {\n\t\treturn post.permalink_template.replace( PAGENAME, slug );\n\t}\n\n\treturn post.permalink_template;\n};\n\nfunction CopyButton( { text, onCopy, children } ) {\n\tconst ref = useCopyToClipboard( text, onCopy );\n\treturn (\n\t\t<Button variant=\"secondary\" ref={ ref }>\n\t\t\t{ children }\n\t\t</Button>\n\t);\n}\n\nclass PostPublishPanelPostpublish extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tshowCopyConfirmation: false,\n\t\t};\n\t\tthis.onCopy = this.onCopy.bind( this );\n\t\tthis.onSelectInput = this.onSelectInput.bind( this );\n\t\tthis.postLink = createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.focusOnMount ) {\n\t\t\tthis.postLink.current.focus();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout( this.dismissCopyConfirmation );\n\t}\n\n\tonCopy() {\n\t\tthis.setState( {\n\t\t\tshowCopyConfirmation: true,\n\t\t} );\n\n\t\tclearTimeout( this.dismissCopyConfirmation );\n\t\tthis.dismissCopyConfirmation = setTimeout( () => {\n\t\t\tthis.setState( {\n\t\t\t\tshowCopyConfirmation: false,\n\t\t\t} );\n\t\t}, 4000 );\n\t}\n\n\tonSelectInput( event ) {\n\t\tevent.target.select();\n\t}\n\n\trender() {\n\t\tconst { children, isScheduled, post, postType } = this.props;\n\t\tconst postLabel = postType?.labels?.singular_name;\n\t\tconst viewPostLabel = postType?.labels?.view_item;\n\t\tconst addNewPostLabel = postType?.labels?.add_new_item;\n\t\tconst link =\n\t\t\tpost.status === 'future' ? getFuturePostUrl( post ) : post.link;\n\t\tconst addLink = addQueryArgs( 'post-new.php', {\n\t\t\tpost_type: post.type,\n\t\t} );\n\n\t\tconst postPublishNonLinkHeader = isScheduled ? (\n\t\t\t<>\n\t\t\t\t{ __( 'is now scheduled. It will go live on' ) }{ ' ' }\n\t\t\t\t<PostScheduleLabel />.\n\t\t\t</>\n\t\t) : (\n\t\t\t__( 'is now live.' )\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"post-publish-panel__postpublish\">\n\t\t\t\t<PanelBody className=\"post-publish-panel__postpublish-header\">\n\t\t\t\t\t<a ref={ this.postLink } href={ link }>\n\t\t\t\t\t\t{ decodeEntities( post.title ) || __( '(no title)' ) }\n\t\t\t\t\t</a>{ ' ' }\n\t\t\t\t\t{ postPublishNonLinkHeader }\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<p className=\"post-publish-panel__postpublish-subheader\">\n\t\t\t\t\t\t<strong>{ __( 'What’s next?' ) }</strong>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"post-publish-panel__postpublish-post-address-container\">\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\tclassName=\"post-publish-panel__postpublish-post-address\"\n\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\tlabel={ sprintf(\n\t\t\t\t\t\t\t\t/* translators: %s: post type singular name */\n\t\t\t\t\t\t\t\t__( '%s address' ),\n\t\t\t\t\t\t\t\tpostLabel\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tvalue={ safeDecodeURIComponent( link ) }\n\t\t\t\t\t\t\tonFocus={ this.onSelectInput }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<div className=\"post-publish-panel__postpublish-post-address__copy-button-wrap\">\n\t\t\t\t\t\t\t<CopyButton text={ link } onCopy={ this.onCopy }>\n\t\t\t\t\t\t\t\t{ this.state.showCopyConfirmation\n\t\t\t\t\t\t\t\t\t? __( 'Copied!' )\n\t\t\t\t\t\t\t\t\t: __( 'Copy' ) }\n\t\t\t\t\t\t\t</CopyButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"post-publish-panel__postpublish-buttons\">\n\t\t\t\t\t\t{ ! isScheduled && (\n\t\t\t\t\t\t\t<Button variant=\"primary\" href={ link }>\n\t\t\t\t\t\t\t\t{ viewPostLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={ isScheduled ? 'primary' : 'secondary' }\n\t\t\t\t\t\t\thref={ addLink }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ addNewPostLabel }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</PanelBody>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withSelect( ( select ) => {\n\tconst { getEditedPostAttribute, getCurrentPost, isCurrentPostScheduled } =\n\t\tselect( editorStore );\n\tconst { getPostType } = select( coreStore );\n\n\treturn {\n\t\tpost: getCurrentPost(),\n\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\tisScheduled: isCurrentPostScheduled(),\n\t};\n} )( PostPublishPanelPostpublish );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport {\n\tButton,\n\tSpinner,\n\tCheckboxControl,\n\twithFocusReturn,\n\twithConstrainedTabbing,\n} from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { closeSmall } from '@wordpress/icons';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostPublishButton from '../post-publish-button';\nimport PostPublishPanelPrepublish from './prepublish';\nimport PostPublishPanelPostpublish from './postpublish';\nimport { store as editorStore } from '../../store';\n\nexport class PostPublishPanel extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.onSubmit = this.onSubmit.bind( this );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\t// Automatically collapse the publish sidebar when a post\n\t\t// is published and the user makes an edit.\n\t\tif (\n\t\t\tprevProps.isPublished &&\n\t\t\t! this.props.isSaving &&\n\t\t\tthis.props.isDirty\n\t\t) {\n\t\t\tthis.props.onClose();\n\t\t}\n\t}\n\n\tonSubmit() {\n\t\tconst { onClose, hasPublishAction, isPostTypeViewable } = this.props;\n\t\tif ( ! hasPublishAction || ! isPostTypeViewable ) {\n\t\t\tonClose();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tforceIsDirty,\n\t\t\tisBeingScheduled,\n\t\t\tisPublished,\n\t\t\tisPublishSidebarEnabled,\n\t\t\tisScheduled,\n\t\t\tisSaving,\n\t\t\tisSavingNonPostEntityChanges,\n\t\t\tonClose,\n\t\t\tonTogglePublishSidebar,\n\t\t\tPostPublishExtension,\n\t\t\tPrePublishExtension,\n\t\t\t...additionalProps\n\t\t} = this.props;\n\t\tconst {\n\t\t\thasPublishAction,\n\t\t\tisDirty,\n\t\t\tisPostTypeViewable,\n\t\t\t...propsForPanel\n\t\t} = additionalProps;\n\t\tconst isPublishedOrScheduled =\n\t\t\tisPublished || ( isScheduled && isBeingScheduled );\n\t\tconst isPrePublish = ! isPublishedOrScheduled && ! isSaving;\n\t\tconst isPostPublish = isPublishedOrScheduled && ! isSaving;\n\t\treturn (\n\t\t\t<div className=\"editor-post-publish-panel\" { ...propsForPanel }>\n\t\t\t\t<div className=\"editor-post-publish-panel__header\">\n\t\t\t\t\t{ isPostPublish ? (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={ onClose }\n\t\t\t\t\t\t\ticon={ closeSmall }\n\t\t\t\t\t\t\tlabel={ __( 'Close panel' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"editor-post-publish-panel__header-publish-button\">\n\t\t\t\t\t\t\t\t<PostPublishButton\n\t\t\t\t\t\t\t\t\tfocusOnMount\n\t\t\t\t\t\t\t\t\tonSubmit={ this.onSubmit }\n\t\t\t\t\t\t\t\t\tforceIsDirty={ forceIsDirty }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"editor-post-publish-panel__header-cancel-button\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={ isSavingNonPostEntityChanges }\n\t\t\t\t\t\t\t\t\tonClick={ onClose }\n\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"editor-post-publish-panel__content\">\n\t\t\t\t\t{ isPrePublish && (\n\t\t\t\t\t\t<PostPublishPanelPrepublish>\n\t\t\t\t\t\t\t{ PrePublishExtension && <PrePublishExtension /> }\n\t\t\t\t\t\t</PostPublishPanelPrepublish>\n\t\t\t\t\t) }\n\t\t\t\t\t{ isPostPublish && (\n\t\t\t\t\t\t<PostPublishPanelPostpublish focusOnMount>\n\t\t\t\t\t\t\t{ PostPublishExtension && <PostPublishExtension /> }\n\t\t\t\t\t\t</PostPublishPanelPostpublish>\n\t\t\t\t\t) }\n\t\t\t\t\t{ isSaving && <Spinner /> }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"editor-post-publish-panel__footer\">\n\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Always show pre-publish checks.' ) }\n\t\t\t\t\t\tchecked={ isPublishSidebarEnabled }\n\t\t\t\t\t\tonChange={ onTogglePublishSidebar }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getPostType } = select( coreStore );\n\t\tconst {\n\t\t\tgetCurrentPost,\n\t\t\tgetEditedPostAttribute,\n\t\t\tisCurrentPostPublished,\n\t\t\tisCurrentPostScheduled,\n\t\t\tisEditedPostBeingScheduled,\n\t\t\tisEditedPostDirty,\n\t\t\tisAutosavingPost,\n\t\t\tisSavingPost,\n\t\t\tisSavingNonPostEntityChanges,\n\t\t} = select( editorStore );\n\t\tconst { isPublishSidebarEnabled } = select( editorStore );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\n\t\treturn {\n\t\t\thasPublishAction:\n\t\t\t\tgetCurrentPost()._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\tisPostTypeViewable: postType?.viewable,\n\t\t\tisBeingScheduled: isEditedPostBeingScheduled(),\n\t\t\tisDirty: isEditedPostDirty(),\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\tisPublishSidebarEnabled: isPublishSidebarEnabled(),\n\t\t\tisSaving: isSavingPost() && ! isAutosavingPost(),\n\t\t\tisSavingNonPostEntityChanges: isSavingNonPostEntityChanges(),\n\t\t\tisScheduled: isCurrentPostScheduled(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { isPublishSidebarEnabled } ) => {\n\t\tconst { disablePublishSidebar, enablePublishSidebar } =\n\t\t\tdispatch( editorStore );\n\t\treturn {\n\t\t\tonTogglePublishSidebar: () => {\n\t\t\t\tif ( isPublishSidebarEnabled ) {\n\t\t\t\t\tdisablePublishSidebar();\n\t\t\t\t} else {\n\t\t\t\t\tenablePublishSidebar();\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t} ),\n\twithFocusReturn,\n\twithConstrainedTabbing,\n] )( PostPublishPanel );\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst cloudUpload = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M17.3 10.1c0-2.5-2.1-4.4-4.8-4.4-2.2 0-4.1 1.4-4.6 3.3h-.2C5.7 9 4 10.7 4 12.8c0 2.1 1.7 3.8 3.7 3.8h9c1.8 0 3.2-1.5 3.2-3.3.1-1.6-1.1-2.9-2.6-3.2zm-.5 5.1h-4v-2.4L14 14l1-1-3-3-3 3 1 1 1.2-1.2v2.4H7.7c-1.2 0-2.2-1.1-2.2-2.3s1-2.4 2.2-2.4H9l.3-1.1c.4-1.3 1.7-2.2 3.2-2.2 1.8 0 3.3 1.3 3.3 2.9v1.3l1.3.2c.8.1 1.4.9 1.4 1.8 0 1-.8 1.8-1.7 1.8z\" />\n\t</SVG>\n);\n\nexport default cloudUpload;\n","/**\n * WordPress dependencies\n */\nimport { cloneElement, forwardRef } from '@wordpress/element';\n\n/** @typedef {{icon: JSX.Element, size?: number} & import('@wordpress/primitives').SVGProps} IconProps */\n\n/**\n * Return an SVG icon.\n *\n * @param {IconProps}                                 props icon is the SVG component to render\n *                                                          size is a number specifiying the icon size in pixels\n *                                                          Other props will be passed to wrapped SVG component\n * @param {import('react').ForwardedRef<HTMLElement>} ref   The forwarded ref to the SVG element.\n *\n * @return {JSX.Element}  Icon component\n */\nfunction Icon( { icon, size = 24, ...props }, ref ) {\n\treturn cloneElement( icon, {\n\t\twidth: size,\n\t\theight: size,\n\t\t...props,\n\t\tref,\n\t} );\n}\n\nexport default forwardRef( Icon );\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst cloud = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M17.3 10.1c0-2.5-2.1-4.4-4.8-4.4-2.2 0-4.1 1.4-4.6 3.3h-.2C5.7 9 4 10.7 4 12.8c0 2.1 1.7 3.8 3.7 3.8h9c1.8 0 3.2-1.5 3.2-3.3.1-1.6-1.1-2.9-2.6-3.2zm-.5 5.1h-9c-1.2 0-2.2-1.1-2.2-2.3s1-2.4 2.2-2.4h1.3l.3-1.1c.4-1.3 1.7-2.2 3.2-2.2 1.8 0 3.3 1.3 3.3 2.9v1.3l1.3.2c.8.1 1.4.9 1.4 1.8-.1 1-.9 1.8-1.8 1.8z\" />\n\t</SVG>\n);\n\nexport default cloud;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\t__unstableGetAnimateClassName as getAnimateClassName,\n\tButton,\n} from '@wordpress/components';\nimport { usePrevious, useViewportMatch } from '@wordpress/compose';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useEffect, useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { Icon, check, cloud, cloudUpload } from '@wordpress/icons';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Component showing whether the post is saved or not and providing save\n * buttons.\n *\n * @param {Object}   props              Component props.\n * @param {?boolean} props.forceIsDirty Whether to force the post to be marked\n *                                      as dirty.\n * @return {import('react').ComponentType} The component.\n */\nexport default function PostSavedState( { forceIsDirty } ) {\n\tconst [ forceSavedMessage, setForceSavedMessage ] = useState( false );\n\tconst isLargeViewport = useViewportMatch( 'small' );\n\n\tconst {\n\t\tisAutosaving,\n\t\tisDirty,\n\t\tisNew,\n\t\tisPending,\n\t\tisPublished,\n\t\tisSaveable,\n\t\tisSaving,\n\t\tisScheduled,\n\t\thasPublishAction,\n\t\tshowIconLabels,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tisEditedPostNew,\n\t\t\t\tisCurrentPostPublished,\n\t\t\t\tisCurrentPostScheduled,\n\t\t\t\tisEditedPostDirty,\n\t\t\t\tisSavingPost,\n\t\t\t\tisEditedPostSaveable,\n\t\t\t\tgetCurrentPost,\n\t\t\t\tisAutosavingPost,\n\t\t\t\tgetEditedPostAttribute,\n\t\t\t} = select( editorStore );\n\t\t\tconst { get } = select( preferencesStore );\n\n\t\t\treturn {\n\t\t\t\tisAutosaving: isAutosavingPost(),\n\t\t\t\tisDirty: forceIsDirty || isEditedPostDirty(),\n\t\t\t\tisNew: isEditedPostNew(),\n\t\t\t\tisPending: 'pending' === getEditedPostAttribute( 'status' ),\n\t\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\t\tisSaving: isSavingPost(),\n\t\t\t\tisSaveable: isEditedPostSaveable(),\n\t\t\t\tisScheduled: isCurrentPostScheduled(),\n\t\t\t\thasPublishAction:\n\t\t\t\t\tgetCurrentPost()?._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\t\tshowIconLabels: get( 'core', 'showIconLabels' ),\n\t\t\t};\n\t\t},\n\t\t[ forceIsDirty ]\n\t);\n\n\tconst { savePost } = useDispatch( editorStore );\n\n\tconst wasSaving = usePrevious( isSaving );\n\n\tuseEffect( () => {\n\t\tlet timeoutId;\n\n\t\tif ( wasSaving && ! isSaving ) {\n\t\t\tsetForceSavedMessage( true );\n\t\t\ttimeoutId = setTimeout( () => {\n\t\t\t\tsetForceSavedMessage( false );\n\t\t\t}, 1000 );\n\t\t}\n\n\t\treturn () => clearTimeout( timeoutId );\n\t}, [ isSaving ] );\n\n\t// Once the post has been submitted for review this button\n\t// is not needed for the contributor role.\n\tif ( ! hasPublishAction && isPending ) {\n\t\treturn null;\n\t}\n\n\tif ( isPublished || isScheduled ) {\n\t\treturn null;\n\t}\n\n\t/* translators: button label text should, if possible, be under 16 characters. */\n\tconst label = isPending ? __( 'Save as pending' ) : __( 'Save draft' );\n\n\t/* translators: button label text should, if possible, be under 16 characters. */\n\tconst shortLabel = __( 'Save' );\n\n\tconst isSaved = forceSavedMessage || ( ! isNew && ! isDirty );\n\tconst isSavedState = isSaving || isSaved;\n\tconst isDisabled = isSaving || isSaved || ! isSaveable;\n\n\tlet text;\n\n\tif ( isSaving ) {\n\t\ttext = isAutosaving ? __( 'Autosaving' ) : __( 'Saving' );\n\t} else if ( isSaved ) {\n\t\ttext = __( 'Saved' );\n\t} else if ( isLargeViewport ) {\n\t\ttext = label;\n\t} else if ( showIconLabels ) {\n\t\ttext = shortLabel;\n\t}\n\n\t// Use common Button instance for all saved states so that focus is not\n\t// lost.\n\treturn (\n\t\t<Button\n\t\t\tclassName={\n\t\t\t\tisSaveable || isSaving\n\t\t\t\t\t? classnames( {\n\t\t\t\t\t\t\t'editor-post-save-draft': ! isSavedState,\n\t\t\t\t\t\t\t'editor-post-saved-state': isSavedState,\n\t\t\t\t\t\t\t'is-saving': isSaving,\n\t\t\t\t\t\t\t'is-autosaving': isAutosaving,\n\t\t\t\t\t\t\t'is-saved': isSaved,\n\t\t\t\t\t\t\t[ getAnimateClassName( {\n\t\t\t\t\t\t\t\ttype: 'loading',\n\t\t\t\t\t\t\t} ) ]: isSaving,\n\t\t\t\t\t  } )\n\t\t\t\t\t: undefined\n\t\t\t}\n\t\t\tonClick={ isDisabled ? undefined : () => savePost() }\n\t\t\t/*\n\t\t\t * We want the tooltip to show the keyboard shortcut only when the\n\t\t\t * button does something, i.e. when it's not disabled.\n\t\t\t */\n\t\t\tshortcut={ isDisabled ? undefined : displayShortcut.primary( 's' ) }\n\t\t\tvariant=\"tertiary\"\n\t\t\tsize=\"compact\"\n\t\t\ticon={ isLargeViewport ? undefined : cloudUpload }\n\t\t\tlabel={ text || label }\n\t\t\taria-disabled={ isDisabled }\n\t\t>\n\t\t\t{ isSavedState && <Icon icon={ isSaved ? check : cloud } /> }\n\t\t\t{ text }\n\t\t</Button>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostScheduleCheck( { children } ) {\n\tconst hasPublishAction = useSelect( ( select ) => {\n\t\treturn (\n\t\t\tselect( editorStore ).getCurrentPost()._links?.[\n\t\t\t\t'wp:action-publish'\n\t\t\t] ?? false\n\t\t);\n\t}, [] );\n\n\tif ( ! hasPublishAction ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n","/**\n * WordPress dependencies\n */\nimport { Button, Dropdown } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useState, useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport PostScheduleCheck from './check';\nimport PostScheduleForm from './index';\nimport { usePostScheduleLabel } from './label';\nimport PostPanelRow from '../post-panel-row';\n\nexport default function PostSchedulePanel() {\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\t'aria-label': __( 'Change publish date' ),\n\t\t\tplacement: 'bottom-end',\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\n\tconst label = usePostScheduleLabel();\n\tconst fullLabel = usePostScheduleLabel( { full: true } );\n\n\treturn (\n\t\t<PostScheduleCheck>\n\t\t\t<PostPanelRow label={ __( 'Publish' ) } ref={ setPopoverAnchor }>\n\t\t\t\t<Dropdown\n\t\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\t\tfocusOnMount\n\t\t\t\t\tclassName=\"editor-post-schedule__panel-dropdown\"\n\t\t\t\t\tcontentClassName=\"editor-post-schedule__dialog\"\n\t\t\t\t\trenderToggle={ ( { onToggle, isOpen } ) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tclassName=\"editor-post-schedule__dialog-toggle\"\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t\taria-label={ sprintf(\n\t\t\t\t\t\t\t\t// translators: %s: Current post date.\n\t\t\t\t\t\t\t\t__( 'Change date: %s' ),\n\t\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tlabel={ fullLabel }\n\t\t\t\t\t\t\tshowTooltip={ label !== fullLabel }\n\t\t\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) }\n\t\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t\t<PostScheduleForm onClose={ onClose } />\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</PostPanelRow>\n\t\t</PostScheduleCheck>\n\t);\n}\n","/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\n\nexport default function PostSlugCheck( { children } ) {\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"slug\">\n\t\t\t{ children }\n\t\t</PostTypeSupportCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { compose } from '@wordpress/compose';\nimport { safeDecodeURIComponent, cleanForSlug } from '@wordpress/url';\nimport { TextControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport PostSlugCheck from './check';\nimport { store as editorStore } from '../../store';\n\nexport class PostSlug extends Component {\n\tconstructor( { postSlug, postTitle, postID } ) {\n\t\tsuper( ...arguments );\n\n\t\tthis.state = {\n\t\t\teditedSlug:\n\t\t\t\tsafeDecodeURIComponent( postSlug ) ||\n\t\t\t\tcleanForSlug( postTitle ) ||\n\t\t\t\tpostID,\n\t\t};\n\n\t\tthis.setSlug = this.setSlug.bind( this );\n\t}\n\n\tsetSlug( event ) {\n\t\tconst { postSlug, onUpdateSlug } = this.props;\n\t\tconst { value } = event.target;\n\n\t\tconst editedSlug = cleanForSlug( value );\n\n\t\tif ( editedSlug === postSlug ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonUpdateSlug( editedSlug );\n\t}\n\n\trender() {\n\t\tconst { editedSlug } = this.state;\n\t\treturn (\n\t\t\t<PostSlugCheck>\n\t\t\t\t<TextControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={ __( 'Slug' ) }\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tspellCheck=\"false\"\n\t\t\t\t\tvalue={ editedSlug }\n\t\t\t\t\tonChange={ ( slug ) =>\n\t\t\t\t\t\tthis.setState( { editedSlug: slug } )\n\t\t\t\t\t}\n\t\t\t\t\tonBlur={ this.setSlug }\n\t\t\t\t\tclassName=\"editor-post-slug\"\n\t\t\t\t/>\n\t\t\t</PostSlugCheck>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getCurrentPost, getEditedPostAttribute } =\n\t\t\tselect( editorStore );\n\n\t\tconst { id } = getCurrentPost();\n\t\treturn {\n\t\t\tpostSlug: getEditedPostAttribute( 'slug' ),\n\t\t\tpostTitle: getEditedPostAttribute( 'title' ),\n\t\t\tpostID: id,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost } = dispatch( editorStore );\n\t\treturn {\n\t\t\tonUpdateSlug( slug ) {\n\t\t\t\teditPost( { slug } );\n\t\t\t},\n\t\t};\n\t} ),\n] )( PostSlug );\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostStickyCheck( { children } ) {\n\tconst { hasStickyAction, postType } = useSelect( ( select ) => {\n\t\tconst post = select( editorStore ).getCurrentPost();\n\t\treturn {\n\t\t\thasStickyAction: post._links?.[ 'wp:action-sticky' ] ?? false,\n\t\t\tpostType: select( editorStore ).getCurrentPostType(),\n\t\t};\n\t}, [] );\n\n\tif ( postType !== 'post' || ! hasStickyAction ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { CheckboxControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PostStickyCheck from './check';\nimport { store as editorStore } from '../../store';\n\nexport default function PostSticky() {\n\tconst postSticky = useSelect( ( select ) => {\n\t\treturn (\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'sticky' ) ?? false\n\t\t);\n\t}, [] );\n\tconst { editPost } = useDispatch( editorStore );\n\n\treturn (\n\t\t<PostStickyCheck>\n\t\t\t<CheckboxControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Stick to the top of the blog' ) }\n\t\t\t\tchecked={ postSticky }\n\t\t\t\tonChange={ () => editPost( { sticky: ! postSticky } ) }\n\t\t\t/>\n\t\t</PostStickyCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\tButton,\n\t__experimentalConfirmDialog as ConfirmDialog,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostSwitchToDraftButton() {\n\tconst [ showConfirmDialog, setShowConfirmDialog ] = useState( false );\n\n\tconst { editPost, savePost } = useDispatch( editorStore );\n\tconst { isSaving, isPublished, isScheduled } = useSelect( ( select ) => {\n\t\tconst { isSavingPost, isCurrentPostPublished, isCurrentPostScheduled } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\tisSaving: isSavingPost(),\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\tisScheduled: isCurrentPostScheduled(),\n\t\t};\n\t}, [] );\n\n\tconst isDisabled = isSaving || ( ! isPublished && ! isScheduled );\n\n\tlet alertMessage;\n\tif ( isPublished ) {\n\t\talertMessage = __( 'Are you sure you want to unpublish this post?' );\n\t} else if ( isScheduled ) {\n\t\talertMessage = __( 'Are you sure you want to unschedule this post?' );\n\t}\n\n\tconst handleConfirm = () => {\n\t\tsetShowConfirmDialog( false );\n\t\teditPost( { status: 'draft' } );\n\t\tsavePost();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\t__next40pxDefaultSize\n\t\t\t\tclassName=\"editor-post-switch-to-draft\"\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tif ( ! isDisabled ) {\n\t\t\t\t\t\tsetShowConfirmDialog( true );\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t\taria-disabled={ isDisabled }\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tstyle={ { flexGrow: '1', justifyContent: 'center' } }\n\t\t\t>\n\t\t\t\t{ __( 'Switch to draft' ) }\n\t\t\t</Button>\n\t\t\t<ConfirmDialog\n\t\t\t\tisOpen={ showConfirmDialog }\n\t\t\t\tonConfirm={ handleConfirm }\n\t\t\t\tonCancel={ () => setShowConfirmDialog( false ) }\n\t\t\t>\n\t\t\t\t{ alertMessage }\n\t\t\t</ConfirmDialog>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport PostPanelRow from '../post-panel-row';\nimport { store as editorStore } from '../../store';\n\nexport default function PostSyncStatus() {\n\tconst { syncStatus, postType } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst meta = getEditedPostAttribute( 'meta' );\n\n\t\t// When the post is first created, the top level wp_pattern_sync_status is not set so get meta value instead.\n\t\tconst currentSyncStatus =\n\t\t\tmeta?.wp_pattern_sync_status === 'unsynced'\n\t\t\t\t? 'unsynced'\n\t\t\t\t: getEditedPostAttribute( 'wp_pattern_sync_status' );\n\n\t\treturn {\n\t\t\tsyncStatus: currentSyncStatus,\n\t\t\tpostType: getEditedPostAttribute( 'type' ),\n\t\t};\n\t} );\n\n\tif ( postType !== 'wp_block' ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostPanelRow label={ __( 'Sync status' ) }>\n\t\t\t<div className=\"editor-post-sync-status__value\">\n\t\t\t\t{ syncStatus === 'unsynced'\n\t\t\t\t\t? _x(\n\t\t\t\t\t\t\t'Not synced',\n\t\t\t\t\t\t\t'Text that indicates that the pattern is not synchronized'\n\t\t\t\t\t  )\n\t\t\t\t\t: _x(\n\t\t\t\t\t\t\t'Synced',\n\t\t\t\t\t\t\t'Text that indicates that the pattern is synchronized'\n\t\t\t\t\t  ) }\n\t\t\t</div>\n\t\t</PostPanelRow>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport HierarchicalTermSelector from './hierarchical-term-selector';\nimport FlatTermSelector from './flat-term-selector';\nimport { store as editorStore } from '../../store';\n\nconst identity = ( x ) => x;\n\nexport function PostTaxonomies( { taxonomyWrapper = identity } ) {\n\tconst { postType, taxonomies } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tpostType: select( editorStore ).getCurrentPostType(),\n\t\t\ttaxonomies: select( coreStore ).getTaxonomies( { per_page: -1 } ),\n\t\t};\n\t}, [] );\n\tconst visibleTaxonomies = ( taxonomies ?? [] ).filter(\n\t\t( taxonomy ) =>\n\t\t\t// In some circumstances .visibility can end up as undefined so optional chaining operator required.\n\t\t\t// https://github.com/WordPress/gutenberg/issues/40326\n\t\t\ttaxonomy.types.includes( postType ) && taxonomy.visibility?.show_ui\n\t);\n\n\treturn visibleTaxonomies.map( ( taxonomy ) => {\n\t\tconst TaxonomyComponent = taxonomy.hierarchical\n\t\t\t? HierarchicalTermSelector\n\t\t\t: FlatTermSelector;\n\t\treturn (\n\t\t\t<Fragment key={ `taxonomy-${ taxonomy.slug }` }>\n\t\t\t\t{ taxonomyWrapper(\n\t\t\t\t\t<TaxonomyComponent slug={ taxonomy.slug } />,\n\t\t\t\t\ttaxonomy\n\t\t\t\t) }\n\t\t\t</Fragment>\n\t\t);\n\t} );\n}\n\nexport default PostTaxonomies;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostTaxonomiesCheck( { children } ) {\n\tconst hasTaxonomies = useSelect( ( select ) => {\n\t\tconst postType = select( editorStore ).getCurrentPostType();\n\t\tconst taxonomies = select( coreStore ).getTaxonomies( {\n\t\t\tper_page: -1,\n\t\t} );\n\t\treturn taxonomies?.some( ( taxonomy ) =>\n\t\t\ttaxonomy.types.includes( postType )\n\t\t);\n\t}, [] );\n\tif ( ! hasTaxonomies ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n","/**\n * WordPress dependencies\n */\nimport { PanelBody } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PostTaxonomiesForm from './index';\nimport PostTaxonomiesCheck from './check';\n\nfunction TaxonomyPanel( { taxonomy, children } ) {\n\tconst slug = taxonomy?.slug;\n\tconst panelName = slug ? `taxonomy-panel-${ slug }` : '';\n\tconst { isEnabled, isOpened } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { isEditorPanelEnabled, isEditorPanelOpened } =\n\t\t\t\tselect( editorStore );\n\t\t\treturn {\n\t\t\t\tisEnabled: slug ? isEditorPanelEnabled( panelName ) : false,\n\t\t\t\tisOpened: slug ? isEditorPanelOpened( panelName ) : false,\n\t\t\t};\n\t\t},\n\t\t[ panelName, slug ]\n\t);\n\tconst { toggleEditorPanelOpened } = useDispatch( editorStore );\n\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\tconst taxonomyMenuName = taxonomy?.labels?.menu_name;\n\tif ( ! taxonomyMenuName ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody\n\t\t\ttitle={ taxonomyMenuName }\n\t\t\topened={ isOpened }\n\t\t\tonToggle={ () => toggleEditorPanelOpened( panelName ) }\n\t\t>\n\t\t\t{ children }\n\t\t</PanelBody>\n\t);\n}\n\nfunction PostTaxonomies() {\n\treturn (\n\t\t<PostTaxonomiesCheck>\n\t\t\t<PostTaxonomiesForm\n\t\t\t\ttaxonomyWrapper={ ( content, taxonomy ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TaxonomyPanel taxonomy={ taxonomy }>\n\t\t\t\t\t\t\t{ content }\n\t\t\t\t\t\t</TaxonomyPanel>\n\t\t\t\t\t);\n\t\t\t\t} }\n\t\t\t/>\n\t\t</PostTaxonomiesCheck>\n\t);\n}\n\nexport default PostTaxonomies;\n","/**\n * External dependencies\n */\nimport Textarea from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\nimport { __unstableSerializeAndClean } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { VisuallyHidden } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostTextEditor() {\n\tconst instanceId = useInstanceId( PostTextEditor );\n\tconst { content, blocks, type, id } = useSelect( ( select ) => {\n\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\n\t\tconst _type = getCurrentPostType();\n\t\tconst _id = getCurrentPostId();\n\t\tconst editedRecord = getEditedEntityRecord( 'postType', _type, _id );\n\n\t\treturn {\n\t\t\tcontent: editedRecord?.content,\n\t\t\tblocks: editedRecord?.blocks,\n\t\t\ttype: _type,\n\t\t\tid: _id,\n\t\t};\n\t}, [] );\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\t// Replicates the logic found in getEditedPostContent().\n\tconst value = useMemo( () => {\n\t\tif ( content instanceof Function ) {\n\t\t\treturn content( { blocks } );\n\t\t} else if ( blocks ) {\n\t\t\t// If we have parsed blocks already, they should be our source of truth.\n\t\t\t// Parsing applies block deprecations and legacy block conversions that\n\t\t\t// unparsed content will not have.\n\t\t\treturn __unstableSerializeAndClean( blocks );\n\t\t}\n\t\treturn content;\n\t}, [ content, blocks ] );\n\n\treturn (\n\t\t<>\n\t\t\t<VisuallyHidden\n\t\t\t\tas=\"label\"\n\t\t\t\thtmlFor={ `post-content-${ instanceId }` }\n\t\t\t>\n\t\t\t\t{ __( 'Type text or HTML' ) }\n\t\t\t</VisuallyHidden>\n\t\t\t<Textarea\n\t\t\t\tautoComplete=\"off\"\n\t\t\t\tdir=\"auto\"\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ ( event ) => {\n\t\t\t\t\teditEntityRecord( 'postType', type, id, {\n\t\t\t\t\t\tcontent: event.target.value,\n\t\t\t\t\t\tblocks: undefined,\n\t\t\t\t\t\tselection: undefined,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tclassName=\"editor-post-text-editor\"\n\t\t\t\tid={ `post-content-${ instanceId }` }\n\t\t\t\tplaceholder={ __( 'Start writing with text or HTML' ) }\n\t\t\t/>\n\t\t</>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"dom\"];","export const DEFAULT_CLASSNAMES =\n\t'wp-block wp-block-post-title block-editor-block-list__block editor-post-title editor-post-title__input rich-text';\n\nexport const REGEXP_NEWLINES = /[\\r\\n]+/g;\n","/**\n * WordPress dependencies\n */\nimport { useEffect, useImperativeHandle, useRef } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function usePostTitleFocus( forwardedRef ) {\n\tconst ref = useRef();\n\n\tconst { isCleanNewPost } = useSelect( ( select ) => {\n\t\tconst { isCleanNewPost: _isCleanNewPost } = select( editorStore );\n\n\t\treturn {\n\t\t\tisCleanNewPost: _isCleanNewPost(),\n\t\t};\n\t}, [] );\n\n\tuseImperativeHandle( forwardedRef, () => ( {\n\t\tfocus: () => {\n\t\t\tref?.current?.focus();\n\t\t},\n\t} ) );\n\n\tuseEffect( () => {\n\t\tif ( ! ref.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { defaultView } = ref.current.ownerDocument;\n\t\tconst { name, parent } = defaultView;\n\t\tconst ownerDocument =\n\t\t\tname === 'editor-canvas' ? parent.document : defaultView.document;\n\t\tconst { activeElement, body } = ownerDocument;\n\n\t\t// Only autofocus the title when the post is entirely empty. This should\n\t\t// only happen for a new post, which means we focus the title on new\n\t\t// post so the author can start typing right away, without needing to\n\t\t// click anything.\n\t\tif ( isCleanNewPost && ( ! activeElement || body === activeElement ) ) {\n\t\t\tref.current.focus();\n\t\t}\n\t}, [ isCleanNewPost ] );\n\n\treturn { ref };\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function usePostTitle() {\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { title } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\n\t\treturn {\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t};\n\t}, [] );\n\n\tfunction updateTitle( newTitle ) {\n\t\teditPost( { title: newTitle } );\n\t}\n\n\treturn { title, setTitle: updateTitle };\n}\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { forwardRef, useState } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { ENTER } from '@wordpress/keycodes';\nimport { pasteHandler } from '@wordpress/blocks';\nimport {\n\t__unstableUseRichText as useRichText,\n\tcreate,\n\ttoHTMLString,\n\tinsert,\n} from '@wordpress/rich-text';\nimport { useMergeRefs } from '@wordpress/compose';\nimport { __unstableStripHTML as stripHTML } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport { DEFAULT_CLASSNAMES, REGEXP_NEWLINES } from './constants';\nimport usePostTitleFocus from './use-post-title-focus';\nimport usePostTitle from './use-post-title';\nimport PostTypeSupportCheck from '../post-type-support-check';\n\nfunction PostTitle( _, forwardedRef ) {\n\tconst { placeholder, hasFixedToolbar } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\tconst { titlePlaceholder, hasFixedToolbar: _hasFixedToolbar } =\n\t\t\tgetSettings();\n\n\t\treturn {\n\t\t\tplaceholder: titlePlaceholder,\n\t\t\thasFixedToolbar: _hasFixedToolbar,\n\t\t};\n\t}, [] );\n\n\tconst [ isSelected, setIsSelected ] = useState( false );\n\n\tconst { ref: focusRef } = usePostTitleFocus( forwardedRef );\n\n\tconst { title, setTitle: onUpdate } = usePostTitle();\n\n\tconst [ selection, setSelection ] = useState( {} );\n\n\tconst { clearSelectedBlock, insertBlocks, insertDefaultBlock } =\n\t\tuseDispatch( blockEditorStore );\n\n\tfunction onChange( value ) {\n\t\tonUpdate( value.replace( REGEXP_NEWLINES, ' ' ) );\n\t}\n\n\tfunction onInsertBlockAfter( blocks ) {\n\t\tinsertBlocks( blocks, 0 );\n\t}\n\n\tfunction onSelect() {\n\t\tsetIsSelected( true );\n\t\tclearSelectedBlock();\n\t}\n\n\tfunction onUnselect() {\n\t\tsetIsSelected( false );\n\t\tsetSelection( {} );\n\t}\n\n\tfunction onEnterPress() {\n\t\tinsertDefaultBlock( undefined, undefined, 0 );\n\t}\n\n\tfunction onKeyDown( event ) {\n\t\tif ( event.keyCode === ENTER ) {\n\t\t\tevent.preventDefault();\n\t\t\tonEnterPress();\n\t\t}\n\t}\n\n\tfunction onPaste( event ) {\n\t\tconst clipboardData = event.clipboardData;\n\n\t\tlet plainText = '';\n\t\tlet html = '';\n\n\t\t// IE11 only supports `Text` as an argument for `getData` and will\n\t\t// otherwise throw an invalid argument error, so we try the standard\n\t\t// arguments first, then fallback to `Text` if they fail.\n\t\ttry {\n\t\t\tplainText = clipboardData.getData( 'text/plain' );\n\t\t\thtml = clipboardData.getData( 'text/html' );\n\t\t} catch ( error1 ) {\n\t\t\ttry {\n\t\t\t\thtml = clipboardData.getData( 'Text' );\n\t\t\t} catch ( error2 ) {\n\t\t\t\t// Some browsers like UC Browser paste plain text by default and\n\t\t\t\t// don't support clipboardData at all, so allow default\n\t\t\t\t// behaviour.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Allows us to ask for this information when we get a report.\n\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\tconst content = pasteHandler( {\n\t\t\tHTML: html,\n\t\t\tplainText,\n\t\t} );\n\n\t\tevent.preventDefault();\n\n\t\tif ( ! content.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tconst [ firstBlock ] = content;\n\n\t\t\tif (\n\t\t\t\t! title &&\n\t\t\t\t( firstBlock.name === 'core/heading' ||\n\t\t\t\t\tfirstBlock.name === 'core/paragraph' )\n\t\t\t) {\n\t\t\t\t// Strip HTML to avoid unwanted HTML being added to the title.\n\t\t\t\t// In the majority of cases it is assumed that HTML in the title\n\t\t\t\t// is undesirable.\n\t\t\t\tconst contentNoHTML = stripHTML(\n\t\t\t\t\tfirstBlock.attributes.content\n\t\t\t\t);\n\t\t\t\tonUpdate( contentNoHTML );\n\t\t\t\tonInsertBlockAfter( content.slice( 1 ) );\n\t\t\t} else {\n\t\t\t\tonInsertBlockAfter( content );\n\t\t\t}\n\t\t} else {\n\t\t\tconst value = {\n\t\t\t\t...create( { html: title } ),\n\t\t\t\t...selection,\n\t\t\t};\n\n\t\t\t// Strip HTML to avoid unwanted HTML being added to the title.\n\t\t\t// In the majority of cases it is assumed that HTML in the title\n\t\t\t// is undesirable.\n\t\t\tconst contentNoHTML = stripHTML( content );\n\n\t\t\tconst newValue = insert( value, create( { html: contentNoHTML } ) );\n\t\t\tonUpdate( toHTMLString( { value: newValue } ) );\n\t\t\tsetSelection( {\n\t\t\t\tstart: newValue.start,\n\t\t\t\tend: newValue.end,\n\t\t\t} );\n\t\t}\n\t}\n\n\tconst decodedPlaceholder =\n\t\tdecodeEntities( placeholder ) || __( 'Add title' );\n\n\tconst { ref: richTextRef } = useRichText( {\n\t\tvalue: title,\n\t\tonChange,\n\t\tplaceholder: decodedPlaceholder,\n\t\tselectionStart: selection.start,\n\t\tselectionEnd: selection.end,\n\t\tonSelectionChange( newStart, newEnd ) {\n\t\t\tsetSelection( ( sel ) => {\n\t\t\t\tconst { start, end } = sel;\n\t\t\t\tif ( start === newStart && end === newEnd ) {\n\t\t\t\t\treturn sel;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tstart: newStart,\n\t\t\t\t\tend: newEnd,\n\t\t\t\t};\n\t\t\t} );\n\t\t},\n\t\t__unstableDisableFormats: false,\n\t} );\n\n\t// The wp-block className is important for editor styles.\n\t// This same block is used in both the visual and the code editor.\n\tconst className = classnames( DEFAULT_CLASSNAMES, {\n\t\t'is-selected': isSelected,\n\t\t'has-fixed-toolbar': hasFixedToolbar,\n\t} );\n\n\treturn (\n\t\t/* eslint-disable jsx-a11y/heading-has-content, jsx-a11y/no-noninteractive-element-to-interactive-role */\n\t\t<PostTypeSupportCheck supportKeys=\"title\">\n\t\t\t<h1\n\t\t\t\tref={ useMergeRefs( [ richTextRef, focusRef ] ) }\n\t\t\t\tcontentEditable\n\t\t\t\tclassName={ className }\n\t\t\t\taria-label={ decodedPlaceholder }\n\t\t\t\trole=\"textbox\"\n\t\t\t\taria-multiline=\"true\"\n\t\t\t\tonFocus={ onSelect }\n\t\t\t\tonBlur={ onUnselect }\n\t\t\t\tonKeyDown={ onKeyDown }\n\t\t\t\tonKeyPress={ onUnselect }\n\t\t\t\tonPaste={ onPaste }\n\t\t\t/>\n\t\t</PostTypeSupportCheck>\n\t\t/* eslint-enable jsx-a11y/heading-has-content, jsx-a11y/no-noninteractive-element-to-interactive-role */\n\t);\n}\n\nexport default forwardRef( PostTitle );\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { TextareaControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useState, forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { DEFAULT_CLASSNAMES, REGEXP_NEWLINES } from './constants';\nimport usePostTitleFocus from './use-post-title-focus';\nimport usePostTitle from './use-post-title';\n\nfunction PostTitleRaw( _, forwardedRef ) {\n\tconst { placeholder, hasFixedToolbar } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\tconst { titlePlaceholder, hasFixedToolbar: _hasFixedToolbar } =\n\t\t\tgetSettings();\n\n\t\treturn {\n\t\t\tplaceholder: titlePlaceholder,\n\t\t\thasFixedToolbar: _hasFixedToolbar,\n\t\t};\n\t}, [] );\n\n\tconst [ isSelected, setIsSelected ] = useState( false );\n\n\tconst { title, setTitle: onUpdate } = usePostTitle();\n\tconst { ref: focusRef } = usePostTitleFocus( forwardedRef );\n\n\tfunction onChange( value ) {\n\t\tonUpdate( value.replace( REGEXP_NEWLINES, ' ' ) );\n\t}\n\n\tfunction onSelect() {\n\t\tsetIsSelected( true );\n\t}\n\n\tfunction onUnselect() {\n\t\tsetIsSelected( false );\n\t}\n\n\t// The wp-block className is important for editor styles.\n\t// This same block is used in both the visual and the code editor.\n\tconst className = classnames( DEFAULT_CLASSNAMES, {\n\t\t'is-selected': isSelected,\n\t\t'has-fixed-toolbar': hasFixedToolbar,\n\t\t'is-raw-text': true,\n\t} );\n\n\tconst decodedPlaceholder =\n\t\tdecodeEntities( placeholder ) || __( 'Add title' );\n\n\treturn (\n\t\t<TextareaControl\n\t\t\tref={ focusRef }\n\t\t\tvalue={ title }\n\t\t\tonChange={ onChange }\n\t\t\tonFocus={ onSelect }\n\t\t\tonBlur={ onUnselect }\n\t\t\tlabel={ placeholder }\n\t\t\tclassName={ className }\n\t\t\tplaceholder={ decodedPlaceholder }\n\t\t\thideLabelFromVision\n\t\t\tautoComplete=\"off\"\n\t\t\tdir=\"auto\"\n\t\t\trows={ 1 }\n\t\t\t__nextHasNoMarginBottom\n\t\t/>\n\t);\n}\n\nexport default forwardRef( PostTitleRaw );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tButton,\n\t__experimentalConfirmDialog as ConfirmDialog,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostTrash() {\n\tconst { isNew, isDeleting, postId } = useSelect( ( select ) => {\n\t\tconst store = select( editorStore );\n\t\treturn {\n\t\t\tisNew: store.isEditedPostNew(),\n\t\t\tisDeleting: store.isDeletingPost(),\n\t\t\tpostId: store.getCurrentPostId(),\n\t\t};\n\t}, [] );\n\tconst { trashPost } = useDispatch( editorStore );\n\tconst [ showConfirmDialog, setShowConfirmDialog ] = useState( false );\n\n\tif ( isNew || ! postId ) {\n\t\treturn null;\n\t}\n\n\tconst handleConfirm = () => {\n\t\tsetShowConfirmDialog( false );\n\t\ttrashPost();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\t__next40pxDefaultSize\n\t\t\t\tclassName=\"editor-post-trash\"\n\t\t\t\tisDestructive\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tisBusy={ isDeleting }\n\t\t\t\taria-disabled={ isDeleting }\n\t\t\t\tonClick={\n\t\t\t\t\tisDeleting ? undefined : () => setShowConfirmDialog( true )\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{ __( 'Move to trash' ) }\n\t\t\t</Button>\n\t\t\t<ConfirmDialog\n\t\t\t\tisOpen={ showConfirmDialog }\n\t\t\t\tonConfirm={ handleConfirm }\n\t\t\t\tonCancel={ () => setShowConfirmDialog( false ) }\n\t\t\t>\n\t\t\t\t{ __(\n\t\t\t\t\t'Are you sure you want to move this post to the trash?'\n\t\t\t\t) }\n\t\t\t</ConfirmDialog>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { withSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction PostTrashCheck( { isNew, postId, canUserDelete, children } ) {\n\tif ( isNew || ! postId || ! canUserDelete ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n\nexport default withSelect( ( select ) => {\n\tconst { isEditedPostNew, getCurrentPostId, getCurrentPostType } =\n\t\tselect( editorStore );\n\tconst { getPostType, canUser } = select( coreStore );\n\tconst postId = getCurrentPostId();\n\tconst postType = getPostType( getCurrentPostType() );\n\tconst resource = postType?.rest_base || ''; // eslint-disable-line camelcase\n\n\treturn {\n\t\tisNew: isEditedPostNew(),\n\t\tpostId,\n\t\tcanUserDelete:\n\t\t\tpostId && resource ? canUser( 'delete', resource, postId ) : false,\n\t};\n} )( PostTrashCheck );\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { safeDecodeURIComponent, cleanForSlug } from '@wordpress/url';\nimport { useState } from '@wordpress/element';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport { TextControl, ExternalLink } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostURL( { onClose } ) {\n\tconst {\n\t\tisEditable,\n\t\tpostSlug,\n\t\tviewPostLabel,\n\t\tpostLink,\n\t\tpermalinkPrefix,\n\t\tpermalinkSuffix,\n\t} = useSelect( ( select ) => {\n\t\tconst post = select( editorStore ).getCurrentPost();\n\t\tconst postTypeSlug = select( editorStore ).getCurrentPostType();\n\t\tconst postType = select( coreStore ).getPostType( postTypeSlug );\n\t\tconst permalinkParts = select( editorStore ).getPermalinkParts();\n\t\tconst hasPublishAction = post?._links?.[ 'wp:action-publish' ] ?? false;\n\n\t\treturn {\n\t\t\tisEditable:\n\t\t\t\tselect( editorStore ).isPermalinkEditable() && hasPublishAction,\n\t\t\tpostSlug: safeDecodeURIComponent(\n\t\t\t\tselect( editorStore ).getEditedPostSlug()\n\t\t\t),\n\t\t\tviewPostLabel: postType?.labels.view_item,\n\t\t\tpostLink: post.link,\n\t\t\tpermalinkPrefix: permalinkParts?.prefix,\n\t\t\tpermalinkSuffix: permalinkParts?.suffix,\n\t\t};\n\t}, [] );\n\n\tconst { editPost } = useDispatch( editorStore );\n\n\tconst [ forceEmptyField, setForceEmptyField ] = useState( false );\n\n\treturn (\n\t\t<div className=\"editor-post-url\">\n\t\t\t<InspectorPopoverHeader title={ __( 'URL' ) } onClose={ onClose } />\n\t\t\t{ isEditable && (\n\t\t\t\t<TextControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={ __( 'Permalink' ) }\n\t\t\t\t\tvalue={ forceEmptyField ? '' : postSlug }\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tspellCheck=\"false\"\n\t\t\t\t\thelp={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{ __( 'The last part of the URL.' ) }{ ' ' }\n\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\thref={ __(\n\t\t\t\t\t\t\t\t\t'https://wordpress.org/documentation/article/page-post-settings-sidebar/#permalink'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Learn more.' ) }\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\tonChange={ ( newValue ) => {\n\t\t\t\t\t\teditPost( { slug: newValue } );\n\t\t\t\t\t\t// When we delete the field the permalink gets\n\t\t\t\t\t\t// reverted to the original value.\n\t\t\t\t\t\t// The forceEmptyField logic allows the user to have\n\t\t\t\t\t\t// the field temporarily empty while typing.\n\t\t\t\t\t\tif ( ! newValue ) {\n\t\t\t\t\t\t\tif ( ! forceEmptyField ) {\n\t\t\t\t\t\t\t\tsetForceEmptyField( true );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( forceEmptyField ) {\n\t\t\t\t\t\t\tsetForceEmptyField( false );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tonBlur={ ( event ) => {\n\t\t\t\t\t\teditPost( {\n\t\t\t\t\t\t\tslug: cleanForSlug( event.target.value ),\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( forceEmptyField ) {\n\t\t\t\t\t\t\tsetForceEmptyField( false );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ isEditable && (\n\t\t\t\t<h3 className=\"editor-post-url__link-label\">\n\t\t\t\t\t{ viewPostLabel ?? __( 'View post' ) }\n\t\t\t\t</h3>\n\t\t\t) }\n\t\t\t<p>\n\t\t\t\t<ExternalLink\n\t\t\t\t\tclassName=\"editor-post-url__link\"\n\t\t\t\t\thref={ postLink }\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t>\n\t\t\t\t\t{ isEditable ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<span className=\"editor-post-url__link-prefix\">\n\t\t\t\t\t\t\t\t{ permalinkPrefix }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"editor-post-url__link-slug\">\n\t\t\t\t\t\t\t\t{ postSlug }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"editor-post-url__link-suffix\">\n\t\t\t\t\t\t\t\t{ permalinkSuffix }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tpostLink\n\t\t\t\t\t) }\n\t\t\t\t</ExternalLink>\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostURLCheck( { children } ) {\n\tconst isVisible = useSelect( ( select ) => {\n\t\tconst postTypeSlug = select( editorStore ).getCurrentPostType();\n\t\tconst postType = select( coreStore ).getPostType( postTypeSlug );\n\t\tif ( ! postType?.viewable ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst post = select( editorStore ).getCurrentPost();\n\t\tif ( ! post.link ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst permalinkParts = select( editorStore ).getPermalinkParts();\n\t\tif ( ! permalinkParts ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}, [] );\n\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { filterURLForDisplay, safeDecodeURIComponent } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostURLLabel() {\n\treturn usePostURLLabel();\n}\n\nexport function usePostURLLabel() {\n\tconst postLink = useSelect(\n\t\t( select ) => select( editorStore ).getPermalink(),\n\t\t[]\n\t);\n\treturn filterURLForDisplay( safeDecodeURIComponent( postLink ) );\n}\n","/**\n * WordPress dependencies\n */\nimport { useMemo, useState } from '@wordpress/element';\nimport { Dropdown, Button } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport PostURLCheck from './check';\nimport PostURL from './index';\nimport { usePostURLLabel } from './label';\nimport PostPanelRow from '../post-panel-row';\n\nexport default function PostURLPanel() {\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the popover's anchor updates.\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( { anchor: popoverAnchor, placement: 'bottom-end' } ),\n\t\t[ popoverAnchor ]\n\t);\n\n\treturn (\n\t\t<PostURLCheck>\n\t\t\t<PostPanelRow label={ __( 'URL' ) } ref={ setPopoverAnchor }>\n\t\t\t\t<Dropdown\n\t\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\t\tclassName=\"editor-post-url__panel-dropdown\"\n\t\t\t\t\tcontentClassName=\"editor-post-url__panel-dialog\"\n\t\t\t\t\tfocusOnMount\n\t\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t\t\t<PostURLToggle isOpen={ isOpen } onClick={ onToggle } />\n\t\t\t\t\t) }\n\t\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t\t<PostURL onClose={ onClose } />\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</PostPanelRow>\n\t\t</PostURLCheck>\n\t);\n}\n\nfunction PostURLToggle( { isOpen, onClick } ) {\n\tconst label = usePostURLLabel();\n\treturn (\n\t\t<Button\n\t\t\t__next40pxDefaultSize\n\t\t\tclassName=\"editor-post-url__panel-toggle\"\n\t\t\tvariant=\"tertiary\"\n\t\t\taria-expanded={ isOpen }\n\t\t\t// translators: %s: Current post URL.\n\t\t\taria-label={ sprintf( __( 'Change URL: %s' ), label ) }\n\t\t\tonClick={ onClick }\n\t\t>\n\t\t\t{ label }\n\t\t</Button>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostVisibilityCheck( { render } ) {\n\tconst canEdit = useSelect( ( select ) => {\n\t\treturn (\n\t\t\tselect( editorStore ).getCurrentPost()._links?.[\n\t\t\t\t'wp:action-publish'\n\t\t\t] ?? false\n\t\t);\n\t} );\n\n\treturn render( { canEdit } );\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst info = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M12 3.2c-4.8 0-8.8 3.9-8.8 8.8 0 4.8 3.9 8.8 8.8 8.8 4.8 0 8.8-3.9 8.8-8.8 0-4.8-4-8.8-8.8-8.8zm0 16c-4 0-7.2-3.3-7.2-7.2C4.8 8 8 4.8 12 4.8s7.2 3.3 7.2 7.2c0 4-3.2 7.2-7.2 7.2zM11 17h2v-6h-2v6zm0-8h2V7h-2v2z\" />\n\t</SVG>\n);\n\nexport default info;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"wordcount\"];","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\nimport { count as wordCount } from '@wordpress/wordcount';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function WordCount() {\n\tconst content = useSelect(\n\t\t( select ) => select( editorStore ).getEditedPostAttribute( 'content' ),\n\t\t[]\n\t);\n\n\t/*\n\t * translators: If your word count is based on single characters (e.g. East Asian characters),\n\t * enter 'characters_excluding_spaces' or 'characters_including_spaces'. Otherwise, enter 'words'.\n\t * Do not translate into your own language.\n\t */\n\tconst wordCountType = _x( 'words', 'Word count type. Do not translate!' );\n\n\treturn (\n\t\t<span className=\"word-count\">\n\t\t\t{ wordCount( content, wordCountType ) }\n\t\t</span>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { _x, _n, __, sprintf } from '@wordpress/i18n';\nimport { count as wordCount } from '@wordpress/wordcount';\nimport { createInterpolateElement } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Average reading rate - based on average taken from\n * https://irisreading.com/average-reading-speed-in-various-languages/\n * (Characters/minute used for Chinese rather than words).\n *\n * @type {number} A rough estimate of the average reading rate across multiple languages.\n */\nconst AVERAGE_READING_RATE = 189;\n\nexport default function TimeToRead() {\n\tconst content = useSelect(\n\t\t( select ) => select( editorStore ).getEditedPostAttribute( 'content' ),\n\t\t[]\n\t);\n\n\t/*\n\t * translators: If your word count is based on single characters (e.g. East Asian characters),\n\t * enter 'characters_excluding_spaces' or 'characters_including_spaces'. Otherwise, enter 'words'.\n\t * Do not translate into your own language.\n\t */\n\tconst wordCountType = _x( 'words', 'Word count type. Do not translate!' );\n\tconst minutesToRead = Math.round(\n\t\twordCount( content, wordCountType ) / AVERAGE_READING_RATE\n\t);\n\tconst minutesToReadString =\n\t\tminutesToRead === 0\n\t\t\t? createInterpolateElement( __( '<span>< 1</span> minute' ), {\n\t\t\t\t\tspan: <span />,\n\t\t\t  } )\n\t\t\t: createInterpolateElement(\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t/* translators: %s is the number of minutes the post will take to read. */\n\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t'<span>%d</span> minute',\n\t\t\t\t\t\t\t'<span>%d</span> minutes',\n\t\t\t\t\t\t\tminutesToRead\n\t\t\t\t\t\t),\n\t\t\t\t\t\tminutesToRead\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\tspan: <span />,\n\t\t\t\t\t}\n\t\t\t  );\n\n\treturn <span className=\"time-to-read\">{ minutesToReadString }</span>;\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { count as characterCount } from '@wordpress/wordcount';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function CharacterCount() {\n\tconst content = useSelect(\n\t\t( select ) => select( editorStore ).getEditedPostAttribute( 'content' ),\n\t\t[]\n\t);\n\n\treturn characterCount( content, 'characters_including_spaces' );\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport WordCount from '../word-count';\nimport TimeToRead from '../time-to-read';\nimport DocumentOutline from '../document-outline';\nimport CharacterCount from '../character-count';\n\nfunction TableOfContentsPanel( { hasOutlineItemsDisabled, onRequestClose } ) {\n\tconst { headingCount, paragraphCount, numberOfBlocks } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getGlobalBlockCount } = select( blockEditorStore );\n\t\t\treturn {\n\t\t\t\theadingCount: getGlobalBlockCount( 'core/heading' ),\n\t\t\t\tparagraphCount: getGlobalBlockCount( 'core/paragraph' ),\n\t\t\t\tnumberOfBlocks: getGlobalBlockCount(),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\treturn (\n\t\t/*\n\t\t * Disable reason: The `list` ARIA role is redundant but\n\t\t * Safari+VoiceOver won't announce the list otherwise.\n\t\t */\n\t\t/* eslint-disable jsx-a11y/no-redundant-roles */\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName=\"table-of-contents__wrapper\"\n\t\t\t\trole=\"note\"\n\t\t\t\taria-label={ __( 'Document Statistics' ) }\n\t\t\t\ttabIndex=\"0\"\n\t\t\t>\n\t\t\t\t<ul role=\"list\" className=\"table-of-contents__counts\">\n\t\t\t\t\t<li className=\"table-of-contents__count\">\n\t\t\t\t\t\t{ __( 'Words' ) }\n\t\t\t\t\t\t<WordCount />\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"table-of-contents__count\">\n\t\t\t\t\t\t{ __( 'Characters' ) }\n\t\t\t\t\t\t<span className=\"table-of-contents__number\">\n\t\t\t\t\t\t\t<CharacterCount />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"table-of-contents__count\">\n\t\t\t\t\t\t{ __( 'Time to read' ) }\n\t\t\t\t\t\t<TimeToRead />\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"table-of-contents__count\">\n\t\t\t\t\t\t{ __( 'Headings' ) }\n\t\t\t\t\t\t<span className=\"table-of-contents__number\">\n\t\t\t\t\t\t\t{ headingCount }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"table-of-contents__count\">\n\t\t\t\t\t\t{ __( 'Paragraphs' ) }\n\t\t\t\t\t\t<span className=\"table-of-contents__number\">\n\t\t\t\t\t\t\t{ paragraphCount }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"table-of-contents__count\">\n\t\t\t\t\t\t{ __( 'Blocks' ) }\n\t\t\t\t\t\t<span className=\"table-of-contents__number\">\n\t\t\t\t\t\t\t{ numberOfBlocks }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t{ headingCount > 0 && (\n\t\t\t\t<>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h2 className=\"table-of-contents__title\">\n\t\t\t\t\t\t{ __( 'Document Outline' ) }\n\t\t\t\t\t</h2>\n\t\t\t\t\t<DocumentOutline\n\t\t\t\t\t\tonSelect={ onRequestClose }\n\t\t\t\t\t\thasOutlineItemsDisabled={ hasOutlineItemsDisabled }\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</>\n\t\t/* eslint-enable jsx-a11y/no-redundant-roles */\n\t);\n}\n\nexport default TableOfContentsPanel;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Dropdown, Button } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { info } from '@wordpress/icons';\nimport { forwardRef } from '@wordpress/element';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport TableOfContentsPanel from './panel';\n\nfunction TableOfContents(\n\t{ hasOutlineItemsDisabled, repositionDropdown, ...props },\n\tref\n) {\n\tconst hasBlocks = useSelect(\n\t\t( select ) => !! select( blockEditorStore ).getBlockCount(),\n\t\t[]\n\t);\n\treturn (\n\t\t<Dropdown\n\t\t\tpopoverProps={ {\n\t\t\t\tplacement: repositionDropdown ? 'right' : 'bottom',\n\t\t\t} }\n\t\t\tclassName=\"table-of-contents\"\n\t\t\tcontentClassName=\"table-of-contents__popover\"\n\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t<Button\n\t\t\t\t\t{ ...props }\n\t\t\t\t\tref={ ref }\n\t\t\t\t\tonClick={ hasBlocks ? onToggle : undefined }\n\t\t\t\t\ticon={ info }\n\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\t\t\tlabel={ __( 'Details' ) }\n\t\t\t\t\ttooltipPosition=\"bottom\"\n\t\t\t\t\taria-disabled={ ! hasBlocks }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t<TableOfContentsPanel\n\t\t\t\t\tonRequestClose={ onClose }\n\t\t\t\t\thasOutlineItemsDisabled={ hasOutlineItemsDisabled }\n\t\t\t\t/>\n\t\t\t) }\n\t\t/>\n\t);\n}\n\nexport default forwardRef( TableOfContents );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Warns the user if there are unsaved changes before leaving the editor.\n * Compatible with Post Editor and Site Editor.\n *\n * @return {Component} The component.\n */\nexport default function UnsavedChangesWarning() {\n\tconst { __experimentalGetDirtyEntityRecords } = useSelect( coreStore );\n\n\tuseEffect( () => {\n\t\t/**\n\t\t * Warns the user if there are unsaved changes before leaving the editor.\n\t\t *\n\t\t * @param {Event} event `beforeunload` event.\n\t\t *\n\t\t * @return {string | undefined} Warning prompt message, if unsaved changes exist.\n\t\t */\n\t\tconst warnIfUnsavedChanges = ( event ) => {\n\t\t\t// We need to call the selector directly in the listener to avoid race\n\t\t\t// conditions with `BrowserURL` where `componentDidUpdate` gets the\n\t\t\t// new value of `isEditedPostDirty` before this component does,\n\t\t\t// causing this component to incorrectly think a trashed post is still dirty.\n\t\t\tconst dirtyEntityRecords = __experimentalGetDirtyEntityRecords();\n\t\t\tif ( dirtyEntityRecords.length > 0 ) {\n\t\t\t\tevent.returnValue = __(\n\t\t\t\t\t'You have unsaved changes. If you proceed, they will be lost.'\n\t\t\t\t);\n\t\t\t\treturn event.returnValue;\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener( 'beforeunload', warnIfUnsavedChanges );\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener( 'beforeunload', warnIfUnsavedChanges );\n\t\t};\n\t}, [ __experimentalGetDirtyEntityRecords ] );\n\n\treturn null;\n}\n","/**\n * WordPress dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\nimport {\n\twithRegistry,\n\tcreateRegistry,\n\tRegistryProvider,\n} from '@wordpress/data';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { storeConfig as blockEditorStoreConfig } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { storeConfig } from '../../store';\n\nconst withRegistryProvider = createHigherOrderComponent(\n\t( WrappedComponent ) =>\n\t\twithRegistry( ( props ) => {\n\t\t\tconst {\n\t\t\t\tuseSubRegistry = true,\n\t\t\t\tregistry,\n\t\t\t\t...additionalProps\n\t\t\t} = props;\n\t\t\tif ( ! useSubRegistry ) {\n\t\t\t\treturn <WrappedComponent { ...additionalProps } />;\n\t\t\t}\n\n\t\t\tconst [ subRegistry, setSubRegistry ] = useState( null );\n\t\t\tuseEffect( () => {\n\t\t\t\tconst newRegistry = createRegistry(\n\t\t\t\t\t{\n\t\t\t\t\t\t'core/block-editor': blockEditorStoreConfig,\n\t\t\t\t\t},\n\t\t\t\t\tregistry\n\t\t\t\t);\n\t\t\t\tnewRegistry.registerStore( 'core/editor', storeConfig );\n\t\t\t\tsetSubRegistry( newRegistry );\n\t\t\t}, [ registry ] );\n\n\t\t\tif ( ! subRegistry ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<RegistryProvider value={ subRegistry }>\n\t\t\t\t\t<WrappedComponent { ...additionalProps } />\n\t\t\t\t</RegistryProvider>\n\t\t\t);\n\t\t} ),\n\t'withRegistryProvider'\n);\n\nexport default withRegistryProvider;\n","/**\n * The `editor` settings here need to be in sync with the corresponding ones in `editor` package.\n * See `packages/editor/src/components/media-categories/index.js`.\n *\n * In the future we could consider creating an Openvese package that can be used in both `editor` and `site-editor`.\n * The rest of the settings would still need to be in sync though.\n */\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf, _x } from '@wordpress/i18n';\nimport { resolveSelect } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport { store as coreStore } from '@wordpress/core-data';\n\n/** @typedef {import('@wordpress/block-editor').InserterMediaRequest} InserterMediaRequest */\n/** @typedef {import('@wordpress/block-editor').InserterMediaItem} InserterMediaItem */\n/** @typedef {import('@wordpress/block-editor').InserterMediaCategory} InserterMediaCategory */\n\nconst getExternalLink = ( url, text ) =>\n\t`<a ${ getExternalLinkAttributes( url ) }>${ text }</a>`;\n\nconst getExternalLinkAttributes = ( url ) =>\n\t`href=\"${ url }\" target=\"_blank\" rel=\"noreferrer noopener\"`;\n\nconst getOpenverseLicense = ( license, licenseVersion ) => {\n\tlet licenseName = license.trim();\n\t// PDM has no abbreviation\n\tif ( license !== 'pdm' ) {\n\t\tlicenseName = license.toUpperCase().replace( 'SAMPLING', 'Sampling' );\n\t}\n\t// If version is known, append version to the name.\n\t// The license has to have a version to be valid. Only\n\t// PDM (public domain mark) doesn't have a version.\n\tif ( licenseVersion ) {\n\t\tlicenseName += ` ${ licenseVersion }`;\n\t}\n\t// For licenses other than public-domain marks, prepend 'CC' to the name.\n\tif ( ! [ 'pdm', 'cc0' ].includes( license ) ) {\n\t\tlicenseName = `CC ${ licenseName }`;\n\t}\n\treturn licenseName;\n};\n\nconst getOpenverseCaption = ( item ) => {\n\tconst {\n\t\ttitle,\n\t\tforeign_landing_url: foreignLandingUrl,\n\t\tcreator,\n\t\tcreator_url: creatorUrl,\n\t\tlicense,\n\t\tlicense_version: licenseVersion,\n\t\tlicense_url: licenseUrl,\n\t} = item;\n\tconst fullLicense = getOpenverseLicense( license, licenseVersion );\n\tconst _creator = decodeEntities( creator );\n\tlet _caption;\n\tif ( _creator ) {\n\t\t_caption = title\n\t\t\t? sprintf(\n\t\t\t\t\t// translators: %1s: Title of a media work from Openverse; %2s: Name of the work's creator; %3s: Work's licence e.g: \"CC0 1.0\".\n\t\t\t\t\t_x( '\"%1$s\" by %2$s/ %3$s', 'caption' ),\n\t\t\t\t\tgetExternalLink(\n\t\t\t\t\t\tforeignLandingUrl,\n\t\t\t\t\t\tdecodeEntities( title )\n\t\t\t\t\t),\n\t\t\t\t\tcreatorUrl\n\t\t\t\t\t\t? getExternalLink( creatorUrl, _creator )\n\t\t\t\t\t\t: _creator,\n\t\t\t\t\tlicenseUrl\n\t\t\t\t\t\t? getExternalLink(\n\t\t\t\t\t\t\t\t`${ licenseUrl }?ref=openverse`,\n\t\t\t\t\t\t\t\tfullLicense\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: fullLicense\n\t\t\t  )\n\t\t\t: sprintf(\n\t\t\t\t\t// translators: %1s: Link attributes for a given Openverse media work; %2s: Name of the work's creator; %3s: Works's licence e.g: \"CC0 1.0\".\n\t\t\t\t\t_x( '<a %1$s>Work</a> by %2$s/ %3$s', 'caption' ),\n\t\t\t\t\tgetExternalLinkAttributes( foreignLandingUrl ),\n\t\t\t\t\tcreatorUrl\n\t\t\t\t\t\t? getExternalLink( creatorUrl, _creator )\n\t\t\t\t\t\t: _creator,\n\t\t\t\t\tlicenseUrl\n\t\t\t\t\t\t? getExternalLink(\n\t\t\t\t\t\t\t\t`${ licenseUrl }?ref=openverse`,\n\t\t\t\t\t\t\t\tfullLicense\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: fullLicense\n\t\t\t  );\n\t} else {\n\t\t_caption = title\n\t\t\t? sprintf(\n\t\t\t\t\t// translators: %1s: Title of a media work from Openverse; %2s: Work's licence e.g: \"CC0 1.0\".\n\t\t\t\t\t_x( '\"%1$s\"/ %2$s', 'caption' ),\n\t\t\t\t\tgetExternalLink(\n\t\t\t\t\t\tforeignLandingUrl,\n\t\t\t\t\t\tdecodeEntities( title )\n\t\t\t\t\t),\n\t\t\t\t\tlicenseUrl\n\t\t\t\t\t\t? getExternalLink(\n\t\t\t\t\t\t\t\t`${ licenseUrl }?ref=openverse`,\n\t\t\t\t\t\t\t\tfullLicense\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: fullLicense\n\t\t\t  )\n\t\t\t: sprintf(\n\t\t\t\t\t// translators: %1s: Link attributes for a given Openverse media work; %2s: Works's licence e.g: \"CC0 1.0\".\n\t\t\t\t\t_x( '<a %1$s>Work</a>/ %2$s', 'caption' ),\n\t\t\t\t\tgetExternalLinkAttributes( foreignLandingUrl ),\n\t\t\t\t\tlicenseUrl\n\t\t\t\t\t\t? getExternalLink(\n\t\t\t\t\t\t\t\t`${ licenseUrl }?ref=openverse`,\n\t\t\t\t\t\t\t\tfullLicense\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: fullLicense\n\t\t\t  );\n\t}\n\treturn _caption.replace( /\\s{2}/g, ' ' );\n};\n\nconst coreMediaFetch = async ( query = {} ) => {\n\tconst mediaItems = await resolveSelect( coreStore ).getMediaItems( {\n\t\t...query,\n\t\torderBy: !! query?.search ? 'relevance' : 'date',\n\t} );\n\treturn mediaItems.map( ( mediaItem ) => ( {\n\t\t...mediaItem,\n\t\talt: mediaItem.alt_text,\n\t\turl: mediaItem.source_url,\n\t\tpreviewUrl: mediaItem.media_details?.sizes?.medium?.source_url,\n\t\tcaption: mediaItem.caption?.raw,\n\t} ) );\n};\n\n/** @type {InserterMediaCategory[]} */\nconst inserterMediaCategories = [\n\t{\n\t\tname: 'images',\n\t\tlabels: {\n\t\t\tname: __( 'Images' ),\n\t\t\tsearch_items: __( 'Search images' ),\n\t\t},\n\t\tmediaType: 'image',\n\t\tasync fetch( query = {} ) {\n\t\t\treturn coreMediaFetch( { ...query, media_type: 'image' } );\n\t\t},\n\t},\n\t{\n\t\tname: 'videos',\n\t\tlabels: {\n\t\t\tname: __( 'Videos' ),\n\t\t\tsearch_items: __( 'Search videos' ),\n\t\t},\n\t\tmediaType: 'video',\n\t\tasync fetch( query = {} ) {\n\t\t\treturn coreMediaFetch( { ...query, media_type: 'video' } );\n\t\t},\n\t},\n\t{\n\t\tname: 'audio',\n\t\tlabels: {\n\t\t\tname: __( 'Audio' ),\n\t\t\tsearch_items: __( 'Search audio' ),\n\t\t},\n\t\tmediaType: 'audio',\n\t\tasync fetch( query = {} ) {\n\t\t\treturn coreMediaFetch( { ...query, media_type: 'audio' } );\n\t\t},\n\t},\n\t{\n\t\tname: 'openverse',\n\t\tlabels: {\n\t\t\tname: __( 'Openverse' ),\n\t\t\tsearch_items: __( 'Search Openverse' ),\n\t\t},\n\t\tmediaType: 'image',\n\t\tasync fetch( query = {} ) {\n\t\t\tconst defaultArgs = {\n\t\t\t\tmature: false,\n\t\t\t\texcluded_source: 'flickr,inaturalist,wikimedia',\n\t\t\t\tlicense: 'pdm,cc0',\n\t\t\t};\n\t\t\tconst finalQuery = { ...query, ...defaultArgs };\n\t\t\tconst mapFromInserterMediaRequest = {\n\t\t\t\tper_page: 'page_size',\n\t\t\t\tsearch: 'q',\n\t\t\t};\n\t\t\tconst url = new URL(\n\t\t\t\t'https://api.openverse.engineering/v1/images/'\n\t\t\t);\n\t\t\tObject.entries( finalQuery ).forEach( ( [ key, value ] ) => {\n\t\t\t\tconst queryKey = mapFromInserterMediaRequest[ key ] || key;\n\t\t\t\turl.searchParams.set( queryKey, value );\n\t\t\t} );\n\t\t\tconst response = await window.fetch( url, {\n\t\t\t\theaders: {\n\t\t\t\t\t'User-Agent': 'WordPress/inserter-media-fetch',\n\t\t\t\t},\n\t\t\t} );\n\t\t\tconst jsonResponse = await response.json();\n\t\t\tconst results = jsonResponse.results;\n\t\t\treturn results.map( ( result ) => ( {\n\t\t\t\t...result,\n\t\t\t\t// This is a temp solution for better titles, until Openverse API\n\t\t\t\t// completes the cleaning up of some titles of their upstream data.\n\t\t\t\ttitle: result.title?.toLowerCase().startsWith( 'file:' )\n\t\t\t\t\t? result.title.slice( 5 )\n\t\t\t\t\t: result.title,\n\t\t\t\tsourceId: result.id,\n\t\t\t\tid: undefined,\n\t\t\t\tcaption: getOpenverseCaption( result ),\n\t\t\t\tpreviewUrl: result.thumbnail,\n\t\t\t} ) );\n\t\t},\n\t\tgetReportUrl: ( { sourceId } ) =>\n\t\t\t`https://wordpress.org/openverse/image/${ sourceId }/report/`,\n\t\tisExternalResource: true,\n\t},\n];\n\nexport default inserterMediaCategories;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"mediaUtils\"];","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\nimport { uploadMedia } from '@wordpress/media-utils';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nconst noop = () => {};\n\n/**\n * Upload a media file when the file upload button is activated.\n * Wrapper around mediaUpload() that injects the current post ID.\n *\n * @param {Object}   $0                   Parameters object passed to the function.\n * @param {?Object}  $0.additionalData    Additional data to include in the request.\n * @param {string}   $0.allowedTypes      Array with the types of media that can be uploaded, if unset all types are allowed.\n * @param {Array}    $0.filesList         List of files.\n * @param {?number}  $0.maxUploadFileSize Maximum upload size in bytes allowed for the site.\n * @param {Function} $0.onError           Function called when an error happens.\n * @param {Function} $0.onFileChange      Function called each time a file or a temporary representation of the file is available.\n */\nexport default function mediaUpload( {\n\tadditionalData = {},\n\tallowedTypes,\n\tfilesList,\n\tmaxUploadFileSize,\n\tonError = noop,\n\tonFileChange,\n} ) {\n\tconst { getCurrentPost, getEditorSettings } = select( editorStore );\n\tconst wpAllowedMimeTypes = getEditorSettings().allowedMimeTypes;\n\tmaxUploadFileSize =\n\t\tmaxUploadFileSize || getEditorSettings().maxUploadFileSize;\n\tconst currentPost = getCurrentPost();\n\t// Templates and template parts' numerical ID is stored in `wp_id`.\n\tconst currentPostId =\n\t\ttypeof currentPost?.id === 'number'\n\t\t\t? currentPost.id\n\t\t\t: currentPost?.wp_id;\n\tconst postData = currentPostId ? { post: currentPostId } : {};\n\n\tuploadMedia( {\n\t\tallowedTypes,\n\t\tfilesList,\n\t\tonFileChange,\n\t\tadditionalData: {\n\t\t\t...postData,\n\t\t\t...additionalData,\n\t\t},\n\t\tmaxUploadFileSize,\n\t\tonError: ( { message } ) => onError( message ),\n\t\twpAllowedMimeTypes,\n\t} );\n}\n","/**\n * WordPress dependencies\n */\nimport { Platform, useMemo, useCallback } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport {\n\tstore as coreStore,\n\t__experimentalFetchLinkSuggestions as fetchLinkSuggestions,\n\t__experimentalFetchUrlData as fetchUrlData,\n} from '@wordpress/core-data';\nimport { __ } from '@wordpress/i18n';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { privateApis } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport inserterMediaCategories from '../media-categories';\nimport { mediaUpload } from '../../utils';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nconst EMPTY_BLOCKS_LIST = [];\n\nconst BLOCK_EDITOR_SETTINGS = [\n\t'__experimentalBlockDirectory',\n\t'__experimentalDiscussionSettings',\n\t'__experimentalFeatures',\n\t'__experimentalGlobalStylesBaseStyles',\n\t'__unstableGalleryWithImageBlocks',\n\t'alignWide',\n\t'blockInspectorTabs',\n\t'allowedMimeTypes',\n\t'bodyPlaceholder',\n\t'canLockBlocks',\n\t'capabilities',\n\t'clearBlockSelection',\n\t'codeEditingEnabled',\n\t'colors',\n\t'disableCustomColors',\n\t'disableCustomFontSizes',\n\t'disableCustomSpacingSizes',\n\t'disableCustomGradients',\n\t'disableLayoutStyles',\n\t'enableCustomLineHeight',\n\t'enableCustomSpacing',\n\t'enableCustomUnits',\n\t'enableOpenverseMediaCategory',\n\t'fontSizes',\n\t'gradients',\n\t'generateAnchors',\n\t'onNavigateToEntityRecord',\n\t'imageDefaultSize',\n\t'imageDimensions',\n\t'imageEditing',\n\t'imageSizes',\n\t'isRTL',\n\t'locale',\n\t'maxWidth',\n\t'postContentAttributes',\n\t'postsPerPage',\n\t'readOnly',\n\t'styles',\n\t'titlePlaceholder',\n\t'supportsLayout',\n\t'widgetTypesToHideFromLegacyWidgetBlock',\n\t'__unstableHasCustomAppender',\n\t'__unstableIsPreviewMode',\n\t'__unstableResolvedAssets',\n\t'__unstableIsBlockBasedTheme',\n\t'__experimentalArchiveTitleTypeLabel',\n\t'__experimentalArchiveTitleNameLabel',\n];\n\n/**\n * React hook used to compute the block editor settings to use for the post editor.\n *\n * @param {Object} settings EditorProvider settings prop.\n * @param {string} postType Editor root level post type.\n * @param {string} postId   Editor root level post ID.\n *\n * @return {Object} Block Editor Settings.\n */\nfunction useBlockEditorSettings( settings, postType, postId ) {\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst {\n\t\tallowRightClickOverrides,\n\t\tblockTypes,\n\t\tfocusMode,\n\t\thasFixedToolbar,\n\t\tisDistractionFree,\n\t\tkeepCaretInsideBlock,\n\t\treusableBlocks,\n\t\thasUploadPermissions,\n\t\thiddenBlockTypes,\n\t\tcanUseUnfilteredHTML,\n\t\tuserCanCreatePages,\n\t\tpageOnFront,\n\t\tpageForPosts,\n\t\tuserPatternCategories,\n\t\trestBlockPatternCategories,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst isWeb = Platform.OS === 'web';\n\t\t\tconst {\n\t\t\t\tcanUser,\n\t\t\t\tgetRawEntityRecord,\n\t\t\t\tgetEntityRecord,\n\t\t\t\tgetUserPatternCategories,\n\t\t\t\tgetEntityRecords,\n\t\t\t\tgetBlockPatternCategories,\n\t\t\t} = select( coreStore );\n\t\t\tconst { get } = select( preferencesStore );\n\t\t\tconst { getBlockTypes } = select( blocksStore );\n\t\t\tconst siteSettings = canUser( 'read', 'settings' )\n\t\t\t\t? getEntityRecord( 'root', 'site' )\n\t\t\t\t: undefined;\n\n\t\t\treturn {\n\t\t\t\tallowRightClickOverrides: get(\n\t\t\t\t\t'core',\n\t\t\t\t\t'allowRightClickOverrides'\n\t\t\t\t),\n\t\t\t\tblockTypes: getBlockTypes(),\n\t\t\t\tcanUseUnfilteredHTML: getRawEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\tpostType,\n\t\t\t\t\tpostId\n\t\t\t\t)?._links?.hasOwnProperty( 'wp:action-unfiltered-html' ),\n\t\t\t\tfocusMode: get( 'core', 'focusMode' ),\n\t\t\t\thasFixedToolbar:\n\t\t\t\t\tget( 'core', 'fixedToolbar' ) || ! isLargeViewport,\n\t\t\t\thiddenBlockTypes: get( 'core', 'hiddenBlockTypes' ),\n\t\t\t\tisDistractionFree: get( 'core', 'distractionFree' ),\n\t\t\t\tkeepCaretInsideBlock: get( 'core', 'keepCaretInsideBlock' ),\n\t\t\t\treusableBlocks: isWeb\n\t\t\t\t\t? getEntityRecords( 'postType', 'wp_block', {\n\t\t\t\t\t\t\tper_page: -1,\n\t\t\t\t\t  } )\n\t\t\t\t\t: EMPTY_BLOCKS_LIST, // Reusable blocks are fetched in the native version of this hook.\n\t\t\t\thasUploadPermissions: canUser( 'create', 'media' ) ?? true,\n\t\t\t\tuserCanCreatePages: canUser( 'create', 'pages' ),\n\t\t\t\tpageOnFront: siteSettings?.page_on_front,\n\t\t\t\tpageForPosts: siteSettings?.page_for_posts,\n\t\t\t\tuserPatternCategories: getUserPatternCategories(),\n\t\t\t\trestBlockPatternCategories: getBlockPatternCategories(),\n\t\t\t};\n\t\t},\n\t\t[ postType, postId, isLargeViewport ]\n\t);\n\n\tconst settingsBlockPatterns =\n\t\tsettings.__experimentalAdditionalBlockPatterns ?? // WP 6.0\n\t\tsettings.__experimentalBlockPatterns; // WP 5.9\n\tconst settingsBlockPatternCategories =\n\t\tsettings.__experimentalAdditionalBlockPatternCategories ?? // WP 6.0\n\t\tsettings.__experimentalBlockPatternCategories; // WP 5.9\n\n\tconst blockPatterns = useMemo(\n\t\t() =>\n\t\t\t[ ...( settingsBlockPatterns || [] ) ].filter(\n\t\t\t\t( { postTypes } ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t! postTypes ||\n\t\t\t\t\t\t( Array.isArray( postTypes ) &&\n\t\t\t\t\t\t\tpostTypes.includes( postType ) )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t),\n\t\t[ settingsBlockPatterns, postType ]\n\t);\n\n\tconst blockPatternCategories = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\t...( settingsBlockPatternCategories || [] ),\n\t\t\t\t...( restBlockPatternCategories || [] ),\n\t\t\t].filter(\n\t\t\t\t( x, index, arr ) =>\n\t\t\t\t\tindex === arr.findIndex( ( y ) => x.name === y.name )\n\t\t\t),\n\t\t[ settingsBlockPatternCategories, restBlockPatternCategories ]\n\t);\n\n\tconst { undo, setIsInserterOpened } = useDispatch( editorStore );\n\n\tconst { saveEntityRecord } = useDispatch( coreStore );\n\n\t/**\n\t * Creates a Post entity.\n\t * This is utilised by the Link UI to allow for on-the-fly creation of Posts/Pages.\n\t *\n\t * @param {Object} options parameters for the post being created. These mirror those used on 3rd param of saveEntityRecord.\n\t * @return {Object} the post type object that was created.\n\t */\n\tconst createPageEntity = useCallback(\n\t\t( options ) => {\n\t\t\tif ( ! userCanCreatePages ) {\n\t\t\t\treturn Promise.reject( {\n\t\t\t\t\tmessage: __(\n\t\t\t\t\t\t'You do not have permission to create Pages.'\n\t\t\t\t\t),\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn saveEntityRecord( 'postType', 'page', options );\n\t\t},\n\t\t[ saveEntityRecord, userCanCreatePages ]\n\t);\n\n\tconst allowedBlockTypes = useMemo( () => {\n\t\t// Omit hidden block types if exists and non-empty.\n\t\tif ( hiddenBlockTypes && hiddenBlockTypes.length > 0 ) {\n\t\t\t// Defer to passed setting for `allowedBlockTypes` if provided as\n\t\t\t// anything other than `true` (where `true` is equivalent to allow\n\t\t\t// all block types).\n\t\t\tconst defaultAllowedBlockTypes =\n\t\t\t\ttrue === settings.allowedBlockTypes\n\t\t\t\t\t? blockTypes.map( ( { name } ) => name )\n\t\t\t\t\t: settings.allowedBlockTypes || [];\n\n\t\t\treturn defaultAllowedBlockTypes.filter(\n\t\t\t\t( type ) => ! hiddenBlockTypes.includes( type )\n\t\t\t);\n\t\t}\n\n\t\treturn settings.allowedBlockTypes;\n\t}, [ settings.allowedBlockTypes, hiddenBlockTypes, blockTypes ] );\n\n\tconst forceDisableFocusMode = settings.focusMode === false;\n\n\treturn useMemo(\n\t\t() => ( {\n\t\t\t...Object.fromEntries(\n\t\t\t\tObject.entries( settings ).filter( ( [ key ] ) =>\n\t\t\t\t\tBLOCK_EDITOR_SETTINGS.includes( key )\n\t\t\t\t)\n\t\t\t),\n\t\t\tallowedBlockTypes,\n\t\t\tallowRightClickOverrides,\n\t\t\tfocusMode: focusMode && ! forceDisableFocusMode,\n\t\t\thasFixedToolbar,\n\t\t\tisDistractionFree,\n\t\t\tkeepCaretInsideBlock,\n\t\t\tmediaUpload: hasUploadPermissions ? mediaUpload : undefined,\n\t\t\t__experimentalBlockPatterns: blockPatterns,\n\t\t\t[ unlock( privateApis ).selectBlockPatternsKey ]: ( select ) =>\n\t\t\t\tunlock( select( coreStore ) ).getBlockPatternsForPostType(\n\t\t\t\t\tpostType\n\t\t\t\t),\n\t\t\t__experimentalReusableBlocks: reusableBlocks,\n\t\t\t__experimentalBlockPatternCategories: blockPatternCategories,\n\t\t\t__experimentalUserPatternCategories: userPatternCategories,\n\t\t\t__experimentalFetchLinkSuggestions: ( search, searchOptions ) =>\n\t\t\t\tfetchLinkSuggestions( search, searchOptions, settings ),\n\t\t\tinserterMediaCategories,\n\t\t\t__experimentalFetchRichUrlData: fetchUrlData,\n\t\t\t// Todo: This only checks the top level post, not the post within a template or any other entity that can be edited.\n\t\t\t// This might be better as a generic \"canUser\" selector.\n\t\t\t__experimentalCanUserUseUnfilteredHTML: canUseUnfilteredHTML,\n\t\t\t//Todo: this is only needed for native and should probably be removed.\n\t\t\t__experimentalUndo: undo,\n\t\t\t// Check whether we want all site editor frames to have outlines\n\t\t\t// including the navigation / pattern / parts editors.\n\t\t\toutlineMode: postType === 'wp_template',\n\t\t\t// Check these two properties: they were not present in the site editor.\n\t\t\t__experimentalCreatePageEntity: createPageEntity,\n\t\t\t__experimentalUserCanCreatePages: userCanCreatePages,\n\t\t\tpageOnFront,\n\t\t\tpageForPosts,\n\t\t\t__experimentalPreferPatternsOnRoot: postType === 'wp_template',\n\t\t\ttemplateLock:\n\t\t\t\tpostType === 'wp_navigation' ? 'insert' : settings.templateLock,\n\t\t\ttemplate:\n\t\t\t\tpostType === 'wp_navigation'\n\t\t\t\t\t? [ [ 'core/navigation', {}, [] ] ]\n\t\t\t\t\t: settings.template,\n\t\t\t__experimentalSetIsInserterOpened: setIsInserterOpened,\n\t\t} ),\n\t\t[\n\t\t\tallowedBlockTypes,\n\t\t\tallowRightClickOverrides,\n\t\t\tfocusMode,\n\t\t\tforceDisableFocusMode,\n\t\t\thasFixedToolbar,\n\t\t\tisDistractionFree,\n\t\t\tkeepCaretInsideBlock,\n\t\t\tsettings,\n\t\t\thasUploadPermissions,\n\t\t\treusableBlocks,\n\t\t\tuserPatternCategories,\n\t\t\tblockPatterns,\n\t\t\tblockPatternCategories,\n\t\t\tcanUseUnfilteredHTML,\n\t\t\tundo,\n\t\t\tcreatePageEntity,\n\t\t\tuserCanCreatePages,\n\t\t\tpageOnFront,\n\t\t\tpageForPosts,\n\t\t\tpostType,\n\t\t\tsetIsInserterOpened,\n\t\t]\n\t);\n}\n\nexport default useBlockEditorSettings;\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useEffect } from '@wordpress/element';\n\nconst PAGE_CONTENT_BLOCKS = [\n\t'core/post-title',\n\t'core/post-featured-image',\n\t'core/post-content',\n];\n\nfunction useDisableNonPageContentBlocks() {\n\tconst contentIds = useSelect( ( select ) => {\n\t\tconst { getBlocksByName, getBlockParents, getBlockName } =\n\t\t\tselect( blockEditorStore );\n\t\treturn getBlocksByName( PAGE_CONTENT_BLOCKS ).filter( ( clientId ) =>\n\t\t\tgetBlockParents( clientId ).every( ( parentClientId ) => {\n\t\t\t\tconst parentBlockName = getBlockName( parentClientId );\n\t\t\t\treturn (\n\t\t\t\t\tparentBlockName !== 'core/query' &&\n\t\t\t\t\t! PAGE_CONTENT_BLOCKS.includes( parentBlockName )\n\t\t\t\t);\n\t\t\t} )\n\t\t);\n\t}, [] );\n\n\tconst { setBlockEditingMode, unsetBlockEditingMode } =\n\t\tuseDispatch( blockEditorStore );\n\n\tuseEffect( () => {\n\t\tsetBlockEditingMode( '', 'disabled' ); // Disable editing at the root level.\n\n\t\tfor ( const contentId of contentIds ) {\n\t\t\tsetBlockEditingMode( contentId, 'contentOnly' ); // Re-enable each content block.\n\t\t}\n\t\treturn () => {\n\t\t\tunsetBlockEditingMode( '' );\n\t\t\tfor ( const contentId of contentIds ) {\n\t\t\t\tunsetBlockEditingMode( contentId );\n\t\t\t}\n\t\t};\n\t}, [ contentIds, setBlockEditingMode, unsetBlockEditingMode ] );\n}\n\n/**\n * Component that when rendered, makes it so that the site editor allows only\n * page content to be edited.\n */\nexport default function DisableNonPageContentBlocks() {\n\tuseDisableNonPageContentBlocks();\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * For the Navigation block editor, we need to force the block editor to contentOnly for that block.\n *\n * Set block editing mode to contentOnly when entering Navigation focus mode.\n * this ensures that non-content controls on the block will be hidden and thus\n * the user can focus on editing the Navigation Menu content only.\n */\n\nexport default function NavigationBlockEditingMode() {\n\t// In the navigation block editor,\n\t// the navigation block is the only root block.\n\tconst blockClientId = useSelect(\n\t\t( select ) => select( blockEditorStore ).getBlockOrder()?.[ 0 ],\n\t\t[]\n\t);\n\tconst { setBlockEditingMode, unsetBlockEditingMode } =\n\t\tuseDispatch( blockEditorStore );\n\n\tuseEffect( () => {\n\t\tif ( ! blockClientId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetBlockEditingMode( blockClientId, 'contentOnly' );\n\n\t\treturn () => {\n\t\t\tunsetBlockEditingMode( blockClientId );\n\t\t};\n\t}, [ blockClientId, unsetBlockEditingMode, setBlockEditingMode ] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport { addFilter, removeFilter } from '@wordpress/hooks';\n\n// These post types are \"structural\" block lists.\n// We should be allowed to use\n// the post content and template parts blocks within them.\nconst POST_TYPES_ALLOWING_POST_CONTENT_TEMPLATE_PART = [\n\t'wp_block',\n\t'wp_template',\n\t'wp_template_part',\n];\n\n/**\n * In some specific contexts,\n * the template part and post content blocks need to be hidden.\n *\n * @param {string} postType Post Type\n * @param {string} mode     Rendering mode\n */\nexport function useHideBlocksFromInserter( postType, mode ) {\n\tuseEffect( () => {\n\t\t/*\n\t\t * Prevent adding template part in the editor.\n\t\t */\n\t\taddFilter(\n\t\t\t'blockEditor.__unstableCanInsertBlockType',\n\t\t\t'removeTemplatePartsFromInserter',\n\t\t\t( canInsert, blockType ) => {\n\t\t\t\tif (\n\t\t\t\t\t! POST_TYPES_ALLOWING_POST_CONTENT_TEMPLATE_PART.includes(\n\t\t\t\t\t\tpostType\n\t\t\t\t\t) &&\n\t\t\t\t\tblockType.name === 'core/template-part' &&\n\t\t\t\t\tmode === 'post-only'\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn canInsert;\n\t\t\t}\n\t\t);\n\n\t\t/*\n\t\t * Prevent adding post content block (except in query block) in the editor.\n\t\t */\n\t\taddFilter(\n\t\t\t'blockEditor.__unstableCanInsertBlockType',\n\t\t\t'removePostContentFromInserter',\n\t\t\t(\n\t\t\t\tcanInsert,\n\t\t\t\tblockType,\n\t\t\t\trootClientId,\n\t\t\t\t{ getBlockParentsByBlockName }\n\t\t\t) => {\n\t\t\t\tif (\n\t\t\t\t\t! POST_TYPES_ALLOWING_POST_CONTENT_TEMPLATE_PART.includes(\n\t\t\t\t\t\tpostType\n\t\t\t\t\t) &&\n\t\t\t\t\tblockType.name === 'core/post-content'\n\t\t\t\t) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tgetBlockParentsByBlockName( rootClientId, 'core/query' )\n\t\t\t\t\t\t\t.length > 0\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn canInsert;\n\t\t\t}\n\t\t);\n\n\t\treturn () => {\n\t\t\tremoveFilter(\n\t\t\t\t'blockEditor.__unstableCanInsertBlockType',\n\t\t\t\t'removeTemplatePartsFromInserter'\n\t\t\t);\n\t\t\tremoveFilter(\n\t\t\t\t'blockEditor.__unstableCanInsertBlockType',\n\t\t\t\t'removePostContentFromInserter'\n\t\t\t);\n\t\t};\n\t}, [ postType, mode ] );\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst listView = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M3 6h11v1.5H3V6Zm3.5 5.5h11V13h-11v-1.5ZM21 17H10v1.5h11V17Z\" />\n\t</SVG>\n);\n\nexport default listView;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst code = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M20.8 10.7l-4.3-4.3-1.1 1.1 4.3 4.3c.1.1.1.3 0 .4l-4.3 4.3 1.1 1.1 4.3-4.3c.7-.8.7-1.9 0-2.6zM4.2 11.8l4.3-4.3-1-1-4.3 4.3c-.7.7-.7 1.8 0 2.5l4.3 4.3 1.1-1.1-4.3-4.3c-.2-.1-.2-.3-.1-.4z\" />\n\t</SVG>\n);\n\nexport default code;\n","/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\n\nconst external = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M19.5 4.5h-7V6h4.44l-5.97 5.97 1.06 1.06L18 7.06v4.44h1.5v-7Zm-13 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-3H17v3a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h3V5.5h-3Z\" />\n\t</SVG>\n);\n\nexport default external;\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { code, listView, external } from '@wordpress/icons';\nimport { useCommandLoader } from '@wordpress/commands';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction useEditorCommandLoader() {\n\tconst {\n\t\teditorMode,\n\t\tisListViewOpen,\n\t\tshowBlockBreadcrumbs,\n\t\tisDistractionFree,\n\t\tisTopToolbar,\n\t\tisFocusMode,\n\t\tisPreviewMode,\n\t\tisViewable,\n\t\tisCodeEditingEnabled,\n\t\tisRichEditingEnabled,\n\t} = useSelect( ( select ) => {\n\t\tconst { get } = select( preferencesStore );\n\t\tconst { isListViewOpened, getCurrentPostType, getEditorSettings } =\n\t\t\tselect( editorStore );\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\tconst { getPostType } = select( coreStore );\n\n\t\treturn {\n\t\t\teditorMode: get( 'core', 'editorMode' ) ?? 'visual',\n\t\t\tisListViewOpen: isListViewOpened(),\n\t\t\tshowBlockBreadcrumbs: get( 'core', 'showBlockBreadcrumbs' ),\n\t\t\tisDistractionFree: get( 'core', 'distractionFree' ),\n\t\t\tisFocusMode: get( 'core', 'focusMode' ),\n\t\t\tisTopToolbar: get( 'core', 'fixedToolbar' ),\n\t\t\tisPreviewMode: getSettings().__unstableIsPreviewMode,\n\t\t\tisViewable: getPostType( getCurrentPostType() )?.viewable ?? false,\n\t\t\tisCodeEditingEnabled: getEditorSettings().codeEditingEnabled,\n\t\t\tisRichEditingEnabled: getEditorSettings().richEditingEnabled,\n\t\t};\n\t}, [] );\n\tconst { toggle } = useDispatch( preferencesStore );\n\tconst { createInfoNotice } = useDispatch( noticesStore );\n\tconst {\n\t\t__unstableSaveForPreview,\n\t\tsetIsListViewOpened,\n\t\tswitchEditorMode,\n\t\ttoggleDistractionFree,\n\t} = useDispatch( editorStore );\n\tconst { getCurrentPostId } = useSelect( editorStore );\n\tconst allowSwitchEditorMode = isCodeEditingEnabled && isRichEditingEnabled;\n\n\tif ( isPreviewMode ) {\n\t\treturn { commands: [], isLoading: false };\n\t}\n\n\tconst commands = [];\n\n\tcommands.push( {\n\t\tname: 'core/toggle-distraction-free',\n\t\tlabel: isDistractionFree\n\t\t\t? __( 'Exit Distraction Free' )\n\t\t\t: __( 'Enter Distraction Free ' ),\n\t\tcallback: ( { close } ) => {\n\t\t\ttoggleDistractionFree();\n\t\t\tclose();\n\t\t},\n\t} );\n\n\tcommands.push( {\n\t\tname: 'core/toggle-spotlight-mode',\n\t\tlabel: __( 'Toggle spotlight' ),\n\t\tcallback: ( { close } ) => {\n\t\t\ttoggle( 'core', 'focusMode' );\n\t\t\tclose();\n\t\t\tcreateInfoNotice(\n\t\t\t\tisFocusMode ? __( 'Spotlight off.' ) : __( 'Spotlight on.' ),\n\t\t\t\t{\n\t\t\t\t\tid: 'core/editor/toggle-spotlight-mode/notice',\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: __( 'Undo' ),\n\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\ttoggle( 'core', 'focusMode' );\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t} );\n\n\tcommands.push( {\n\t\tname: 'core/toggle-list-view',\n\t\tlabel: isListViewOpen\n\t\t\t? __( 'Close List View' )\n\t\t\t: __( 'Open List View' ),\n\t\ticon: listView,\n\t\tcallback: ( { close } ) => {\n\t\t\tsetIsListViewOpened( ! isListViewOpen );\n\t\t\tclose();\n\t\t\tcreateInfoNotice(\n\t\t\t\tisListViewOpen ? __( 'List View off.' ) : __( 'List View on.' ),\n\t\t\t\t{\n\t\t\t\t\tid: 'core/editor/toggle-list-view/notice',\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t} );\n\n\tcommands.push( {\n\t\tname: 'core/toggle-top-toolbar',\n\t\tlabel: __( 'Toggle top toolbar' ),\n\t\tcallback: ( { close } ) => {\n\t\t\ttoggle( 'core', 'fixedToolbar' );\n\t\t\tif ( isDistractionFree ) {\n\t\t\t\ttoggleDistractionFree();\n\t\t\t}\n\t\t\tclose();\n\t\t\tcreateInfoNotice(\n\t\t\t\tisTopToolbar\n\t\t\t\t\t? __( 'Top toolbar off.' )\n\t\t\t\t\t: __( 'Top toolbar on.' ),\n\t\t\t\t{\n\t\t\t\t\tid: 'core/editor/toggle-top-toolbar/notice',\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: __( 'Undo' ),\n\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\ttoggle( 'core', 'fixedToolbar' );\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t} );\n\n\tif ( allowSwitchEditorMode ) {\n\t\tcommands.push( {\n\t\t\tname: 'core/toggle-code-editor',\n\t\t\tlabel:\n\t\t\t\teditorMode === 'visual'\n\t\t\t\t\t? __( 'Open code editor' )\n\t\t\t\t\t: __( 'Exit code editor' ),\n\t\t\ticon: code,\n\t\t\tcallback: ( { close } ) => {\n\t\t\t\tswitchEditorMode( editorMode === 'visual' ? 'text' : 'visual' );\n\t\t\t\tclose();\n\t\t\t},\n\t\t} );\n\t}\n\n\tcommands.push( {\n\t\tname: 'core/toggle-breadcrumbs',\n\t\tlabel: showBlockBreadcrumbs\n\t\t\t? __( 'Hide block breadcrumbs' )\n\t\t\t: __( 'Show block breadcrumbs' ),\n\t\tcallback: ( { close } ) => {\n\t\t\ttoggle( 'core', 'showBlockBreadcrumbs' );\n\t\t\tclose();\n\t\t\tcreateInfoNotice(\n\t\t\t\tshowBlockBreadcrumbs\n\t\t\t\t\t? __( 'Breadcrumbs hidden.' )\n\t\t\t\t\t: __( 'Breadcrumbs visible.' ),\n\t\t\t\t{\n\t\t\t\t\tid: 'core/editor/toggle-breadcrumbs/notice',\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t} );\n\n\tif ( isViewable ) {\n\t\tcommands.push( {\n\t\t\tname: 'core/preview-link',\n\t\t\tlabel: __( 'Preview in a new tab' ),\n\t\t\ticon: external,\n\t\t\tcallback: async ( { close } ) => {\n\t\t\t\tclose();\n\t\t\t\tconst postId = getCurrentPostId();\n\t\t\t\tconst link = await __unstableSaveForPreview();\n\t\t\t\twindow.open( link, `wp-preview-${ postId }` );\n\t\t\t},\n\t\t} );\n\t}\n\n\treturn {\n\t\tcommands,\n\t\tisLoading: false,\n\t};\n}\n\nexport default function useCommands() {\n\tuseCommandLoader( {\n\t\tname: 'core/editor/edit-ui',\n\t\thook: useEditorCommandLoader,\n\t} );\n}\n","/**\n * WordPress dependencies\n */\n\nimport { _n } from '@wordpress/i18n';\nimport { privateApis as blockEditorPrivateApis } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nconst { BlockRemovalWarningModal } = unlock( blockEditorPrivateApis );\n\n// Prevent accidental removal of certain blocks, asking the user for confirmation first.\nconst TEMPLATE_BLOCKS = [\n\t'core/post-content',\n\t'core/post-template',\n\t'core/query',\n];\nconst BLOCK_REMOVAL_RULES = [\n\t{\n\t\t// Template blocks.\n\t\t// The warning is only shown when a user manipulates templates or template parts.\n\t\tpostTypes: [ 'wp_template', 'wp_template_part' ],\n\t\tcallback( removedBlocks ) {\n\t\t\tconst removedTemplateBlocks = removedBlocks.filter( ( { name } ) =>\n\t\t\t\tTEMPLATE_BLOCKS.includes( name )\n\t\t\t);\n\t\t\tif ( removedTemplateBlocks.length ) {\n\t\t\t\treturn _n(\n\t\t\t\t\t'Deleting this block will stop your post or page content from displaying on this template. It is not recommended.',\n\t\t\t\t\t'Some of the deleted blocks will stop your post or page content from displaying on this template. It is not recommended.',\n\t\t\t\t\tremovedBlocks.length\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n\t{\n\t\t// Pattern overrides.\n\t\t// The warning is only shown when the user edits a pattern.\n\t\tpostTypes: [ 'wp_block' ],\n\t\tcallback( removedBlocks ) {\n\t\t\tconst removedBlocksWithOverrides = removedBlocks.filter(\n\t\t\t\t( { attributes } ) =>\n\t\t\t\t\tattributes?.metadata?.bindings &&\n\t\t\t\t\tObject.values( attributes.metadata.bindings ).some(\n\t\t\t\t\t\t( binding ) =>\n\t\t\t\t\t\t\tbinding.source === 'core/pattern-overrides'\n\t\t\t\t\t)\n\t\t\t);\n\t\t\tif ( removedBlocksWithOverrides.length ) {\n\t\t\t\treturn _n(\n\t\t\t\t\t'The deleted block allows instance overrides. Removing it may result in content not displaying where this pattern is used. Are you sure you want to proceed?',\n\t\t\t\t\t'Some of the deleted blocks allow instance overrides. Removing them may result in content not displaying where this pattern is used. Are you sure you want to proceed?',\n\t\t\t\t\tremovedBlocks.length\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n];\n\nexport default function BlockRemovalWarnings() {\n\tconst currentPostType = useSelect(\n\t\t( select ) => select( editorStore ).getCurrentPostType(),\n\t\t[]\n\t);\n\n\tconst removalRulesForPostType = useMemo(\n\t\t() =>\n\t\t\tBLOCK_REMOVAL_RULES.filter( ( rule ) =>\n\t\t\t\trule.postTypes.includes( currentPostType )\n\t\t\t),\n\t\t[ currentPostType ]\n\t);\n\n\t// `BlockRemovalWarnings` is rendered in the editor provider, a shared component\n\t// across react native and web. However, `BlockRemovalWarningModal` is web only.\n\t// Check it exists before trying to render it.\n\tif ( ! BlockRemovalWarningModal ) {\n\t\treturn null;\n\t}\n\n\tif ( ! removalRulesForPostType ) {\n\t\treturn null;\n\t}\n\n\treturn <BlockRemovalWarningModal rules={ removalRulesForPostType } />;\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect, useLayoutEffect, useMemo } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { EntityProvider, useEntityBlockEditor } from '@wordpress/core-data';\nimport {\n\tBlockEditorProvider,\n\tBlockContextProvider,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { privateApis as editPatternsPrivateApis } from '@wordpress/patterns';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport withRegistryProvider from './with-registry-provider';\nimport { store as editorStore } from '../../store';\nimport useBlockEditorSettings from './use-block-editor-settings';\nimport { unlock } from '../../lock-unlock';\nimport DisableNonPageContentBlocks from './disable-non-page-content-blocks';\nimport NavigationBlockEditingMode from './navigation-block-editing-mode';\nimport { useHideBlocksFromInserter } from './use-hide-blocks-from-inserter';\nimport useCommands from '../commands';\nimport BlockRemovalWarnings from '../block-removal-warnings';\n\nconst { ExperimentalBlockEditorProvider } = unlock( blockEditorPrivateApis );\nconst { PatternsMenuItems } = unlock( editPatternsPrivateApis );\n\nconst noop = () => {};\n\n/**\n * These are global entities that are only there to split blocks into logical units\n * They don't provide a \"context\" for the current post/page being rendered.\n * So we should not use their ids as post context. This is important to allow post blocks\n * (post content, post title) to be used within them without issues.\n */\nconst NON_CONTEXTUAL_POST_TYPES = [\n\t'wp_block',\n\t'wp_template',\n\t'wp_navigation',\n\t'wp_template_part',\n];\n\n/**\n * Depending on the post, template and template mode,\n * returns the appropriate blocks and change handlers for the block editor provider.\n *\n * @param {Array}   post     Block list.\n * @param {boolean} template Whether the page content has focus (and the surrounding template is inert). If `true` return page content blocks. Default `false`.\n * @param {string}  mode     Rendering mode.\n * @return {Array} Block editor props.\n */\nfunction useBlockEditorProps( post, template, mode ) {\n\tconst rootLevelPost =\n\t\tmode === 'post-only' || ! template ? 'post' : 'template';\n\tconst [ postBlocks, onInput, onChange ] = useEntityBlockEditor(\n\t\t'postType',\n\t\tpost.type,\n\t\t{ id: post.id }\n\t);\n\tconst [ templateBlocks, onInputTemplate, onChangeTemplate ] =\n\t\tuseEntityBlockEditor( 'postType', template?.type, {\n\t\t\tid: template?.id,\n\t\t} );\n\tconst maybeNavigationBlocks = useMemo( () => {\n\t\tif ( post.type === 'wp_navigation' ) {\n\t\t\treturn [\n\t\t\t\tcreateBlock( 'core/navigation', {\n\t\t\t\t\tref: post.id,\n\t\t\t\t\t// As the parent editor is locked with `templateLock`, the template locking\n\t\t\t\t\t// must be explicitly \"unset\" on the block itself to allow the user to modify\n\t\t\t\t\t// the block's content.\n\t\t\t\t\ttemplateLock: false,\n\t\t\t\t} ),\n\t\t\t];\n\t\t}\n\t}, [ post.type, post.id ] );\n\n\t// It is important that we don't create a new instance of blocks on every change\n\t// We should only create a new instance if the blocks them selves change, not a dependency of them.\n\tconst blocks = useMemo( () => {\n\t\tif ( maybeNavigationBlocks ) {\n\t\t\treturn maybeNavigationBlocks;\n\t\t}\n\n\t\tif ( rootLevelPost === 'template' ) {\n\t\t\treturn templateBlocks;\n\t\t}\n\n\t\treturn postBlocks;\n\t}, [ maybeNavigationBlocks, rootLevelPost, templateBlocks, postBlocks ] );\n\n\t// Handle fallback to postBlocks outside of the above useMemo, to ensure\n\t// that constructed block templates that call `createBlock` are not generated\n\t// too frequently. This ensures that clientIds are stable.\n\tconst disableRootLevelChanges =\n\t\t( !! template && mode === 'template-locked' ) ||\n\t\tpost.type === 'wp_navigation';\n\tif ( disableRootLevelChanges ) {\n\t\treturn [ blocks, noop, noop ];\n\t}\n\n\treturn [\n\t\tblocks,\n\t\trootLevelPost === 'post' ? onInput : onInputTemplate,\n\t\trootLevelPost === 'post' ? onChange : onChangeTemplate,\n\t];\n}\n\nexport const ExperimentalEditorProvider = withRegistryProvider(\n\t( {\n\t\tpost,\n\t\tsettings,\n\t\trecovery,\n\t\tinitialEdits,\n\t\tchildren,\n\t\tBlockEditorProviderComponent = ExperimentalBlockEditorProvider,\n\t\t__unstableTemplate: template,\n\t} ) => {\n\t\tconst mode = useSelect(\n\t\t\t( select ) => select( editorStore ).getRenderingMode(),\n\t\t\t[]\n\t\t);\n\t\tconst shouldRenderTemplate = !! template && mode !== 'post-only';\n\t\tconst rootLevelPost = shouldRenderTemplate ? template : post;\n\t\tconst defaultBlockContext = useMemo( () => {\n\t\t\tconst postContext =\n\t\t\t\t! NON_CONTEXTUAL_POST_TYPES.includes( rootLevelPost.type ) ||\n\t\t\t\tshouldRenderTemplate\n\t\t\t\t\t? { postId: post.id, postType: post.type }\n\t\t\t\t\t: {};\n\n\t\t\treturn {\n\t\t\t\t...postContext,\n\t\t\t\ttemplateSlug:\n\t\t\t\t\trootLevelPost.type === 'wp_template'\n\t\t\t\t\t\t? rootLevelPost.slug\n\t\t\t\t\t\t: undefined,\n\t\t\t};\n\t\t}, [\n\t\t\tshouldRenderTemplate,\n\t\t\tpost.id,\n\t\t\tpost.type,\n\t\t\trootLevelPost.type,\n\t\t\trootLevelPost.slug,\n\t\t] );\n\t\tconst { editorSettings, selection, isReady } = useSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst {\n\t\t\t\t\tgetEditorSettings,\n\t\t\t\t\tgetEditorSelection,\n\t\t\t\t\t__unstableIsEditorReady,\n\t\t\t\t} = select( editorStore );\n\t\t\t\treturn {\n\t\t\t\t\teditorSettings: getEditorSettings(),\n\t\t\t\t\tisReady: __unstableIsEditorReady(),\n\t\t\t\t\tselection: getEditorSelection(),\n\t\t\t\t};\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t\tconst { id, type } = rootLevelPost;\n\t\tconst blockEditorSettings = useBlockEditorSettings(\n\t\t\teditorSettings,\n\t\t\ttype,\n\t\t\tid\n\t\t);\n\t\tconst [ blocks, onInput, onChange ] = useBlockEditorProps(\n\t\t\tpost,\n\t\t\ttemplate,\n\t\t\tmode\n\t\t);\n\n\t\tconst {\n\t\t\tupdatePostLock,\n\t\t\tsetupEditor,\n\t\t\tupdateEditorSettings,\n\t\t\tsetCurrentTemplateId,\n\t\t\tsetEditedPost,\n\t\t\tsetRenderingMode,\n\t\t} = unlock( useDispatch( editorStore ) );\n\t\tconst { createWarningNotice } = useDispatch( noticesStore );\n\n\t\t// Ideally this should be synced on each change and not just something you do once.\n\t\tuseLayoutEffect( () => {\n\t\t\t// Assume that we don't need to initialize in the case of an error recovery.\n\t\t\tif ( recovery ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdatePostLock( settings.postLock );\n\t\t\tsetupEditor( post, initialEdits, settings.template );\n\t\t\tif ( settings.autosave ) {\n\t\t\t\tcreateWarningNotice(\n\t\t\t\t\t__(\n\t\t\t\t\t\t'There is an autosave of this post that is more recent than the version below.'\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'autosave-exists',\n\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: __( 'View the autosave' ),\n\t\t\t\t\t\t\t\turl: settings.autosave.editLink,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}, [] );\n\n\t\t// Synchronizes the active post with the state\n\t\tuseEffect( () => {\n\t\t\tsetEditedPost( post.type, post.id );\n\t\t}, [ post.type, post.id, setEditedPost ] );\n\n\t\t// Synchronize the editor settings as they change.\n\t\tuseEffect( () => {\n\t\t\tupdateEditorSettings( settings );\n\t\t}, [ settings, updateEditorSettings ] );\n\n\t\t// Synchronizes the active template with the state.\n\t\tuseEffect( () => {\n\t\t\tsetCurrentTemplateId( template?.id );\n\t\t}, [ template?.id, setCurrentTemplateId ] );\n\n\t\t// Sets the right rendering mode when loading the editor.\n\t\tuseEffect( () => {\n\t\t\tsetRenderingMode( settings.defaultRenderingMode ?? 'post-only' );\n\t\t}, [ settings.defaultRenderingMode, setRenderingMode ] );\n\n\t\tuseHideBlocksFromInserter( post.type, mode );\n\n\t\t// Register the editor commands.\n\t\tuseCommands();\n\n\t\tif ( ! isReady ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<EntityProvider kind=\"root\" type=\"site\">\n\t\t\t\t<EntityProvider\n\t\t\t\t\tkind=\"postType\"\n\t\t\t\t\ttype={ post.type }\n\t\t\t\t\tid={ post.id }\n\t\t\t\t>\n\t\t\t\t\t<BlockContextProvider value={ defaultBlockContext }>\n\t\t\t\t\t\t<BlockEditorProviderComponent\n\t\t\t\t\t\t\tvalue={ blocks }\n\t\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\t\tonInput={ onInput }\n\t\t\t\t\t\t\tselection={ selection }\n\t\t\t\t\t\t\tsettings={ blockEditorSettings }\n\t\t\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ children }\n\t\t\t\t\t\t\t<PatternsMenuItems />\n\t\t\t\t\t\t\t{ mode === 'template-locked' && (\n\t\t\t\t\t\t\t\t<DisableNonPageContentBlocks />\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ type === 'wp_navigation' && (\n\t\t\t\t\t\t\t\t<NavigationBlockEditingMode />\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<BlockRemovalWarnings />\n\t\t\t\t\t\t</BlockEditorProviderComponent>\n\t\t\t\t\t</BlockContextProvider>\n\t\t\t\t</EntityProvider>\n\t\t\t</EntityProvider>\n\t\t);\n\t}\n);\n\nexport function EditorProvider( props ) {\n\treturn (\n\t\t<ExperimentalEditorProvider\n\t\t\t{ ...props }\n\t\t\tBlockEditorProviderComponent={ BlockEditorProvider }\n\t\t>\n\t\t\t{ props.children }\n\t\t</ExperimentalEditorProvider>\n\t);\n}\n\nexport default EditorProvider;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"serverSideRender\"];","// Block Creation Components.\n/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\nimport { forwardRef } from '@wordpress/element';\nimport {\n\tAutocomplete as RootAutocomplete,\n\tAlignmentToolbar as RootAlignmentToolbar,\n\tBlockAlignmentToolbar as RootBlockAlignmentToolbar,\n\tBlockControls as RootBlockControls,\n\tBlockEdit as RootBlockEdit,\n\tBlockEditorKeyboardShortcuts as RootBlockEditorKeyboardShortcuts,\n\tBlockFormatControls as RootBlockFormatControls,\n\tBlockIcon as RootBlockIcon,\n\tBlockInspector as RootBlockInspector,\n\tBlockList as RootBlockList,\n\tBlockMover as RootBlockMover,\n\tBlockNavigationDropdown as RootBlockNavigationDropdown,\n\tBlockSelectionClearer as RootBlockSelectionClearer,\n\tBlockSettingsMenu as RootBlockSettingsMenu,\n\tBlockTitle as RootBlockTitle,\n\tBlockToolbar as RootBlockToolbar,\n\tColorPalette as RootColorPalette,\n\tContrastChecker as RootContrastChecker,\n\tCopyHandler as RootCopyHandler,\n\tcreateCustomColorsHOC as rootCreateCustomColorsHOC,\n\tDefaultBlockAppender as RootDefaultBlockAppender,\n\tFontSizePicker as RootFontSizePicker,\n\tgetColorClassName as rootGetColorClassName,\n\tgetColorObjectByAttributeValues as rootGetColorObjectByAttributeValues,\n\tgetColorObjectByColorValue as rootGetColorObjectByColorValue,\n\tgetFontSize as rootGetFontSize,\n\tgetFontSizeClass as rootGetFontSizeClass,\n\tInserter as RootInserter,\n\tInnerBlocks as RootInnerBlocks,\n\tInspectorAdvancedControls as RootInspectorAdvancedControls,\n\tInspectorControls as RootInspectorControls,\n\tPanelColorSettings as RootPanelColorSettings,\n\tPlainText as RootPlainText,\n\tRichText as RootRichText,\n\tRichTextShortcut as RootRichTextShortcut,\n\tRichTextToolbarButton as RootRichTextToolbarButton,\n\t__unstableRichTextInputEvent as __unstableRootRichTextInputEvent,\n\tMediaPlaceholder as RootMediaPlaceholder,\n\tMediaUpload as RootMediaUpload,\n\tMediaUploadCheck as RootMediaUploadCheck,\n\tMultiSelectScrollIntoView as RootMultiSelectScrollIntoView,\n\tNavigableToolbar as RootNavigableToolbar,\n\tObserveTyping as RootObserveTyping,\n\tSkipToSelectedBlock as RootSkipToSelectedBlock,\n\tURLInput as RootURLInput,\n\tURLInputButton as RootURLInputButton,\n\tURLPopover as RootURLPopover,\n\tWarning as RootWarning,\n\tWritingFlow as RootWritingFlow,\n\twithColorContext as rootWithColorContext,\n\twithColors as rootWithColors,\n\twithFontSizes as rootWithFontSizes,\n} from '@wordpress/block-editor';\n\nexport { default as ServerSideRender } from '@wordpress/server-side-render';\n\nfunction deprecateComponent( name, Wrapped, staticsToHoist = [] ) {\n\tconst Component = forwardRef( ( props, ref ) => {\n\t\tdeprecated( 'wp.editor.' + name, {\n\t\t\tsince: '5.3',\n\t\t\talternative: 'wp.blockEditor.' + name,\n\t\t\tversion: '6.2',\n\t\t} );\n\n\t\treturn <Wrapped ref={ ref } { ...props } />;\n\t} );\n\n\tstaticsToHoist.forEach( ( staticName ) => {\n\t\tComponent[ staticName ] = deprecateComponent(\n\t\t\tname + '.' + staticName,\n\t\t\tWrapped[ staticName ]\n\t\t);\n\t} );\n\n\treturn Component;\n}\n\nfunction deprecateFunction( name, func ) {\n\treturn ( ...args ) => {\n\t\tdeprecated( 'wp.editor.' + name, {\n\t\t\tsince: '5.3',\n\t\t\talternative: 'wp.blockEditor.' + name,\n\t\t\tversion: '6.2',\n\t\t} );\n\n\t\treturn func( ...args );\n\t};\n}\n\nconst RichText = deprecateComponent( 'RichText', RootRichText, [ 'Content' ] );\nRichText.isEmpty = deprecateFunction(\n\t'RichText.isEmpty',\n\tRootRichText.isEmpty\n);\n\nexport { RichText };\nexport const Autocomplete = deprecateComponent(\n\t'Autocomplete',\n\tRootAutocomplete\n);\nexport const AlignmentToolbar = deprecateComponent(\n\t'AlignmentToolbar',\n\tRootAlignmentToolbar\n);\nexport const BlockAlignmentToolbar = deprecateComponent(\n\t'BlockAlignmentToolbar',\n\tRootBlockAlignmentToolbar\n);\nexport const BlockControls = deprecateComponent(\n\t'BlockControls',\n\tRootBlockControls,\n\t[ 'Slot' ]\n);\nexport const BlockEdit = deprecateComponent( 'BlockEdit', RootBlockEdit );\nexport const BlockEditorKeyboardShortcuts = deprecateComponent(\n\t'BlockEditorKeyboardShortcuts',\n\tRootBlockEditorKeyboardShortcuts\n);\nexport const BlockFormatControls = deprecateComponent(\n\t'BlockFormatControls',\n\tRootBlockFormatControls,\n\t[ 'Slot' ]\n);\nexport const BlockIcon = deprecateComponent( 'BlockIcon', RootBlockIcon );\nexport const BlockInspector = deprecateComponent(\n\t'BlockInspector',\n\tRootBlockInspector\n);\nexport const BlockList = deprecateComponent( 'BlockList', RootBlockList );\nexport const BlockMover = deprecateComponent( 'BlockMover', RootBlockMover );\nexport const BlockNavigationDropdown = deprecateComponent(\n\t'BlockNavigationDropdown',\n\tRootBlockNavigationDropdown\n);\nexport const BlockSelectionClearer = deprecateComponent(\n\t'BlockSelectionClearer',\n\tRootBlockSelectionClearer\n);\nexport const BlockSettingsMenu = deprecateComponent(\n\t'BlockSettingsMenu',\n\tRootBlockSettingsMenu\n);\nexport const BlockTitle = deprecateComponent( 'BlockTitle', RootBlockTitle );\nexport const BlockToolbar = deprecateComponent(\n\t'BlockToolbar',\n\tRootBlockToolbar\n);\nexport const ColorPalette = deprecateComponent(\n\t'ColorPalette',\n\tRootColorPalette\n);\nexport const ContrastChecker = deprecateComponent(\n\t'ContrastChecker',\n\tRootContrastChecker\n);\nexport const CopyHandler = deprecateComponent( 'CopyHandler', RootCopyHandler );\nexport const DefaultBlockAppender = deprecateComponent(\n\t'DefaultBlockAppender',\n\tRootDefaultBlockAppender\n);\nexport const FontSizePicker = deprecateComponent(\n\t'FontSizePicker',\n\tRootFontSizePicker\n);\nexport const Inserter = deprecateComponent( 'Inserter', RootInserter );\nexport const InnerBlocks = deprecateComponent( 'InnerBlocks', RootInnerBlocks, [\n\t'ButtonBlockAppender',\n\t'DefaultBlockAppender',\n\t'Content',\n] );\nexport const InspectorAdvancedControls = deprecateComponent(\n\t'InspectorAdvancedControls',\n\tRootInspectorAdvancedControls,\n\t[ 'Slot' ]\n);\nexport const InspectorControls = deprecateComponent(\n\t'InspectorControls',\n\tRootInspectorControls,\n\t[ 'Slot' ]\n);\nexport const PanelColorSettings = deprecateComponent(\n\t'PanelColorSettings',\n\tRootPanelColorSettings\n);\nexport const PlainText = deprecateComponent( 'PlainText', RootPlainText );\nexport const RichTextShortcut = deprecateComponent(\n\t'RichTextShortcut',\n\tRootRichTextShortcut\n);\nexport const RichTextToolbarButton = deprecateComponent(\n\t'RichTextToolbarButton',\n\tRootRichTextToolbarButton\n);\nexport const __unstableRichTextInputEvent = deprecateComponent(\n\t'__unstableRichTextInputEvent',\n\t__unstableRootRichTextInputEvent\n);\nexport const MediaPlaceholder = deprecateComponent(\n\t'MediaPlaceholder',\n\tRootMediaPlaceholder\n);\nexport const MediaUpload = deprecateComponent( 'MediaUpload', RootMediaUpload );\nexport const MediaUploadCheck = deprecateComponent(\n\t'MediaUploadCheck',\n\tRootMediaUploadCheck\n);\nexport const MultiSelectScrollIntoView = deprecateComponent(\n\t'MultiSelectScrollIntoView',\n\tRootMultiSelectScrollIntoView\n);\nexport const NavigableToolbar = deprecateComponent(\n\t'NavigableToolbar',\n\tRootNavigableToolbar\n);\nexport const ObserveTyping = deprecateComponent(\n\t'ObserveTyping',\n\tRootObserveTyping\n);\nexport const SkipToSelectedBlock = deprecateComponent(\n\t'SkipToSelectedBlock',\n\tRootSkipToSelectedBlock\n);\nexport const URLInput = deprecateComponent( 'URLInput', RootURLInput );\nexport const URLInputButton = deprecateComponent(\n\t'URLInputButton',\n\tRootURLInputButton\n);\nexport const URLPopover = deprecateComponent( 'URLPopover', RootURLPopover );\nexport const Warning = deprecateComponent( 'Warning', RootWarning );\nexport const WritingFlow = deprecateComponent( 'WritingFlow', RootWritingFlow );\n\nexport const createCustomColorsHOC = deprecateFunction(\n\t'createCustomColorsHOC',\n\trootCreateCustomColorsHOC\n);\nexport const getColorClassName = deprecateFunction(\n\t'getColorClassName',\n\trootGetColorClassName\n);\nexport const getColorObjectByAttributeValues = deprecateFunction(\n\t'getColorObjectByAttributeValues',\n\trootGetColorObjectByAttributeValues\n);\nexport const getColorObjectByColorValue = deprecateFunction(\n\t'getColorObjectByColorValue',\n\trootGetColorObjectByColorValue\n);\nexport const getFontSize = deprecateFunction( 'getFontSize', rootGetFontSize );\nexport const getFontSizeClass = deprecateFunction(\n\t'getFontSizeClass',\n\trootGetFontSizeClass\n);\nexport const withColorContext = deprecateFunction(\n\t'withColorContext',\n\trootWithColorContext\n);\nexport const withColors = deprecateFunction( 'withColors', rootWithColors );\nexport const withFontSizes = deprecateFunction(\n\t'withFontSizes',\n\trootWithFontSizes\n);\n","/**\n * Internal dependencies\n */\nimport EditorKeyboardShortcuts from './global-keyboard-shortcuts';\n\n// Block Creation Components.\nexport * from './autocompleters';\n\n// Post Related Components.\nexport { default as AutosaveMonitor } from './autosave-monitor';\nexport { default as DocumentBar } from './document-bar';\nexport { default as DocumentOutline } from './document-outline';\nexport { default as DocumentOutlineCheck } from './document-outline/check';\nexport { EditorKeyboardShortcuts };\nexport { default as EditorKeyboardShortcutsRegister } from './global-keyboard-shortcuts/register-shortcuts';\nexport { default as EditorHistoryRedo } from './editor-history/redo';\nexport { default as EditorHistoryUndo } from './editor-history/undo';\nexport { default as EditorNotices } from './editor-notices';\nexport { default as EditorSnackbars } from './editor-snackbars';\nexport { default as EntitiesSavedStates } from './entities-saved-states';\nexport { useIsDirty as useEntitiesSavedStatesIsDirty } from './entities-saved-states/hooks/use-is-dirty';\nexport { default as ErrorBoundary } from './error-boundary';\nexport { default as LocalAutosaveMonitor } from './local-autosave-monitor';\nexport { default as PageAttributesCheck } from './page-attributes/check';\nexport { default as PageAttributesOrder } from './page-attributes/order';\nexport { default as PageAttributesPanel } from './page-attributes/panel';\nexport { default as PageAttributesParent } from './page-attributes/parent';\nexport { default as PageTemplate } from './post-template/classic-theme';\nexport { default as PluginDocumentSettingPanel } from './plugin-document-setting-panel';\nexport { default as PostTemplatePanel } from './post-template/panel';\nexport { default as PostAuthor } from './post-author';\nexport { default as PostAuthorCheck } from './post-author/check';\nexport { default as PostAuthorPanel } from './post-author/panel';\nexport { default as PostComments } from './post-comments';\nexport { default as PostDiscussionPanel } from './post-discussion/panel';\nexport { default as PostExcerpt } from './post-excerpt';\nexport { default as PostExcerptCheck } from './post-excerpt/check';\nexport { default as PostExcerptPanel } from './post-excerpt/panel';\nexport { default as PostFeaturedImage } from './post-featured-image';\nexport { default as PostFeaturedImageCheck } from './post-featured-image/check';\nexport { default as PostFeaturedImagePanel } from './post-featured-image/panel';\nexport { default as PostFormat } from './post-format';\nexport { default as PostFormatCheck } from './post-format/check';\nexport { default as PostLastRevision } from './post-last-revision';\nexport { default as PostLastRevisionCheck } from './post-last-revision/check';\nexport { default as PostLastRevisionPanel } from './post-last-revision/panel';\nexport { default as PostLockedModal } from './post-locked-modal';\nexport { default as PostPendingStatus } from './post-pending-status';\nexport { default as PostPendingStatusCheck } from './post-pending-status/check';\nexport { default as PostPingbacks } from './post-pingbacks';\nexport { default as PostPreviewButton } from './post-preview-button';\nexport { default as PostPublishButton } from './post-publish-button';\nexport { default as PostPublishButtonLabel } from './post-publish-button/label';\nexport { default as PostPublishPanel } from './post-publish-panel';\nexport { default as PostSavedState } from './post-saved-state';\nexport { default as PostSchedule } from './post-schedule';\nexport { default as PostScheduleCheck } from './post-schedule/check';\nexport {\n\tdefault as PostScheduleLabel,\n\tusePostScheduleLabel,\n} from './post-schedule/label';\nexport { default as PostSchedulePanel } from './post-schedule/panel';\nexport { default as PostSlug } from './post-slug';\nexport { default as PostSlugCheck } from './post-slug/check';\nexport { default as PostSticky } from './post-sticky';\nexport { default as PostStickyCheck } from './post-sticky/check';\nexport { default as PostSwitchToDraftButton } from './post-switch-to-draft-button';\nexport { default as PostSyncStatus } from './post-sync-status';\nexport { default as PostTaxonomies } from './post-taxonomies';\nexport { FlatTermSelector as PostTaxonomiesFlatTermSelector } from './post-taxonomies/flat-term-selector';\nexport { HierarchicalTermSelector as PostTaxonomiesHierarchicalTermSelector } from './post-taxonomies/hierarchical-term-selector';\nexport { default as PostTaxonomiesCheck } from './post-taxonomies/check';\nexport { default as PostTaxonomiesPanel } from './post-taxonomies/panel';\nexport { default as PostTextEditor } from './post-text-editor';\nexport { default as PostTitle } from './post-title';\nexport { default as PostTitleRaw } from './post-title/post-title-raw';\nexport { default as PostTrash } from './post-trash';\nexport { default as PostTrashCheck } from './post-trash/check';\nexport { default as PostTypeSupportCheck } from './post-type-support-check';\nexport { default as PostURL } from './post-url';\nexport { default as PostURLCheck } from './post-url/check';\nexport { default as PostURLLabel, usePostURLLabel } from './post-url/label';\nexport { default as PostURLPanel } from './post-url/panel';\nexport { default as PostVisibility } from './post-visibility';\nexport {\n\tdefault as PostVisibilityLabel,\n\tusePostVisibilityLabel,\n} from './post-visibility/label';\nexport { default as PostVisibilityCheck } from './post-visibility/check';\nexport { default as TableOfContents } from './table-of-contents';\nexport { default as ThemeSupportCheck } from './theme-support-check';\nexport { default as UnsavedChangesWarning } from './unsaved-changes-warning';\nexport { default as WordCount } from './word-count';\nexport { default as TimeToRead } from './time-to-read';\nexport { default as CharacterCount } from './character-count';\n\n// State Related Components.\nexport { default as EditorProvider } from './provider';\n\nexport * from './deprecated';\nexport const VisualEditorGlobalKeyboardShortcuts = EditorKeyboardShortcuts;\nexport const TextEditorGlobalKeyboardShortcuts = EditorKeyboardShortcuts;\n","/**\n * WordPress dependencies\n */\nimport { cleanForSlug as urlCleanForSlug } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Performs some basic cleanup of a string for use as a post slug\n *\n * This replicates some of what sanitize_title() does in WordPress core, but\n * is only designed to approximate what the slug will be.\n *\n * Converts Latin-1 Supplement and Latin Extended-A letters to basic Latin letters.\n * Removes combining diacritical marks. Converts whitespace, periods,\n * and forward slashes to hyphens. Removes any remaining non-word characters\n * except hyphens and underscores. Converts remaining string to lowercase.\n * It does not account for octets, HTML entities, or other encoded characters.\n *\n * @param {string} string Title or slug to be processed\n *\n * @return {string} Processed string\n */\nexport function cleanForSlug( string ) {\n\tdeprecated( 'wp.editor.cleanForSlug', {\n\t\tsince: '12.7',\n\t\tplugin: 'Gutenberg',\n\t\talternative: 'wp.url.cleanForSlug',\n\t} );\n\treturn urlCleanForSlug( string );\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect, useState, useRef } from '@wordpress/element';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { __ } from '@wordpress/i18n';\nimport { __experimentalConfirmDialog as ConfirmDialog } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Component that:\n *\n * - Displays a 'Edit your template to edit this block' notification when the\n *   user is focusing on editing page content and clicks on a disabled template\n *   block.\n * - Displays a 'Edit your template to edit this block' dialog when the user\n *   is focusing on editing page conetnt and double clicks on a disabled\n *   template block.\n *\n * @param {Object}                                 props\n * @param {import('react').RefObject<HTMLElement>} props.contentRef Ref to the block\n *                                                                  editor iframe canvas.\n */\nexport default function EditTemplateBlocksNotification( { contentRef } ) {\n\tconst { onNavigateToEntityRecord, templateId } = useSelect( ( select ) => {\n\t\tconst { getEditorSettings, getCurrentTemplateId } =\n\t\t\tselect( editorStore );\n\n\t\treturn {\n\t\t\tonNavigateToEntityRecord:\n\t\t\t\tgetEditorSettings().onNavigateToEntityRecord,\n\t\t\ttemplateId: getCurrentTemplateId(),\n\t\t};\n\t}, [] );\n\n\tconst { getNotices } = useSelect( noticesStore );\n\n\tconst { createInfoNotice, removeNotice } = useDispatch( noticesStore );\n\n\tconst [ isDialogOpen, setIsDialogOpen ] = useState( false );\n\n\tconst lastNoticeId = useRef( 0 );\n\n\tuseEffect( () => {\n\t\tconst handleClick = async ( event ) => {\n\t\t\tif ( ! event.target.classList.contains( 'is-root-container' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst isNoticeAlreadyShowing = getNotices().some(\n\t\t\t\t( notice ) => notice.id === lastNoticeId.current\n\t\t\t);\n\t\t\tif ( isNoticeAlreadyShowing ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { notice } = await createInfoNotice(\n\t\t\t\t__( 'Edit your template to edit this block.' ),\n\t\t\t\t{\n\t\t\t\t\tisDismissible: true,\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: __( 'Edit template' ),\n\t\t\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\t\t\tonNavigateToEntityRecord( {\n\t\t\t\t\t\t\t\t\tpostId: templateId,\n\t\t\t\t\t\t\t\t\tpostType: 'wp_template',\n\t\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}\n\t\t\t);\n\t\t\tlastNoticeId.current = notice.id;\n\t\t};\n\n\t\tconst handleDblClick = ( event ) => {\n\t\t\tif ( ! event.target.classList.contains( 'is-root-container' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( lastNoticeId.current ) {\n\t\t\t\tremoveNotice( lastNoticeId.current );\n\t\t\t}\n\t\t\tsetIsDialogOpen( true );\n\t\t};\n\n\t\tconst canvas = contentRef.current;\n\t\tcanvas?.addEventListener( 'click', handleClick );\n\t\tcanvas?.addEventListener( 'dblclick', handleDblClick );\n\t\treturn () => {\n\t\t\tcanvas?.removeEventListener( 'click', handleClick );\n\t\t\tcanvas?.removeEventListener( 'dblclick', handleDblClick );\n\t\t};\n\t}, [\n\t\tlastNoticeId,\n\t\tcontentRef,\n\t\tgetNotices,\n\t\tcreateInfoNotice,\n\t\tonNavigateToEntityRecord,\n\t\ttemplateId,\n\t\tremoveNotice,\n\t] );\n\n\treturn (\n\t\t<ConfirmDialog\n\t\t\tisOpen={ isDialogOpen }\n\t\t\tconfirmButtonText={ __( 'Edit template' ) }\n\t\t\tonConfirm={ () => {\n\t\t\t\tsetIsDialogOpen( false );\n\t\t\t\tonNavigateToEntityRecord( {\n\t\t\t\t\tpostId: templateId,\n\t\t\t\t\tpostType: 'wp_template',\n\t\t\t\t} );\n\t\t\t} }\n\t\t\tonCancel={ () => setIsDialogOpen( false ) }\n\t\t>\n\t\t\t{ __( 'Edit your template to edit this block.' ) }\n\t\t</ConfirmDialog>\n\t);\n}\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tBlockList,\n\tstore as blockEditorStore,\n\t__unstableUseTypewriter as useTypewriter,\n\t__unstableUseTypingObserver as useTypingObserver,\n\tuseSettings,\n\tRecursionProvider,\n\tprivateApis as blockEditorPrivateApis,\n\t__experimentalUseResizeCanvas as useResizeCanvas,\n} from '@wordpress/block-editor';\nimport { useEffect, useRef, useMemo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { parse } from '@wordpress/blocks';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useMergeRefs } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport PostTitle from '../post-title';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\nimport EditTemplateBlocksNotification from './edit-template-blocks-notification';\n\nconst {\n\tLayoutStyle,\n\tuseLayoutClasses,\n\tuseLayoutStyles,\n\tExperimentalBlockCanvas: BlockCanvas,\n\tuseFlashEditableBlocks,\n} = unlock( blockEditorPrivateApis );\n\nconst noop = () => {};\n\n/**\n * These post types have a special editor where they don't allow you to fill the title\n * and they don't apply the layout styles.\n */\nconst DESIGN_POST_TYPES = [\n\t'wp_block',\n\t'wp_template',\n\t'wp_navigation',\n\t'wp_template_part',\n];\n\n/**\n * Given an array of nested blocks, find the first Post Content\n * block inside it, recursing through any nesting levels,\n * and return its attributes.\n *\n * @param {Array} blocks A list of blocks.\n *\n * @return {Object | undefined} The Post Content block.\n */\nfunction getPostContentAttributes( blocks ) {\n\tfor ( let i = 0; i < blocks.length; i++ ) {\n\t\tif ( blocks[ i ].name === 'core/post-content' ) {\n\t\t\treturn blocks[ i ].attributes;\n\t\t}\n\t\tif ( blocks[ i ].innerBlocks.length ) {\n\t\t\tconst nestedPostContent = getPostContentAttributes(\n\t\t\t\tblocks[ i ].innerBlocks\n\t\t\t);\n\n\t\t\tif ( nestedPostContent ) {\n\t\t\t\treturn nestedPostContent;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction checkForPostContentAtRootLevel( blocks ) {\n\tfor ( let i = 0; i < blocks.length; i++ ) {\n\t\tif ( blocks[ i ].name === 'core/post-content' ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction EditorCanvas( {\n\t// Ideally as we unify post and site editors, we won't need these props.\n\tautoFocus,\n\tclassName,\n\trenderAppender,\n\tstyles,\n\tdisableIframe = false,\n\tiframeProps,\n\tchildren,\n} ) {\n\tconst {\n\t\trenderingMode,\n\t\tpostContentAttributes,\n\t\teditedPostTemplate = {},\n\t\twrapperBlockName,\n\t\twrapperUniqueId,\n\t\tdeviceType,\n\t\tshowEditorPadding,\n\t\tisDesignPostType,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetCurrentPostId,\n\t\t\tgetCurrentPostType,\n\t\t\tgetCurrentTemplateId,\n\t\t\tgetEditorSettings,\n\t\t\tgetRenderingMode,\n\t\t\tgetDeviceType,\n\t\t} = select( editorStore );\n\t\tconst { getPostType, canUser, getEditedEntityRecord } =\n\t\t\tselect( coreStore );\n\t\tconst postTypeSlug = getCurrentPostType();\n\t\tconst _renderingMode = getRenderingMode();\n\t\tlet _wrapperBlockName;\n\n\t\tif ( postTypeSlug === 'wp_block' ) {\n\t\t\t_wrapperBlockName = 'core/block';\n\t\t} else if ( _renderingMode === 'post-only' ) {\n\t\t\t_wrapperBlockName = 'core/post-content';\n\t\t}\n\n\t\tconst editorSettings = getEditorSettings();\n\t\tconst supportsTemplateMode = editorSettings.supportsTemplateMode;\n\t\tconst postType = getPostType( postTypeSlug );\n\t\tconst canEditTemplate = canUser( 'create', 'templates' );\n\t\tconst currentTemplateId = getCurrentTemplateId();\n\t\tconst template = currentTemplateId\n\t\t\t? getEditedEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\t'wp_template',\n\t\t\t\t\tcurrentTemplateId\n\t\t\t  )\n\t\t\t: undefined;\n\n\t\treturn {\n\t\t\trenderingMode: _renderingMode,\n\t\t\tpostContentAttributes: editorSettings.postContentAttributes,\n\t\t\tisDesignPostType: DESIGN_POST_TYPES.includes( postTypeSlug ),\n\t\t\t// Post template fetch returns a 404 on classic themes, which\n\t\t\t// messes with e2e tests, so check it's a block theme first.\n\t\t\teditedPostTemplate:\n\t\t\t\tpostType?.viewable && supportsTemplateMode && canEditTemplate\n\t\t\t\t\t? template\n\t\t\t\t\t: undefined,\n\t\t\twrapperBlockName: _wrapperBlockName,\n\t\t\twrapperUniqueId: getCurrentPostId(),\n\t\t\tdeviceType: getDeviceType(),\n\t\t\tshowEditorPadding:\n\t\t\t\t!! editorSettings.onNavigateToPreviousEntityRecord,\n\t\t};\n\t}, [] );\n\tconst { isCleanNewPost } = useSelect( editorStore );\n\tconst {\n\t\thasRootPaddingAwareAlignments,\n\t\tthemeHasDisabledLayoutStyles,\n\t\tthemeSupportsLayout,\n\t} = useSelect( ( select ) => {\n\t\tconst _settings = select( blockEditorStore ).getSettings();\n\t\treturn {\n\t\t\tthemeHasDisabledLayoutStyles: _settings.disableLayoutStyles,\n\t\t\tthemeSupportsLayout: _settings.supportsLayout,\n\t\t\thasRootPaddingAwareAlignments:\n\t\t\t\t_settings.__experimentalFeatures?.useRootPaddingAwareAlignments,\n\t\t};\n\t}, [] );\n\n\tconst deviceStyles = useResizeCanvas( deviceType );\n\tconst [ globalLayoutSettings ] = useSettings( 'layout' );\n\n\t// fallbackLayout is used if there is no Post Content,\n\t// and for Post Title.\n\tconst fallbackLayout = useMemo( () => {\n\t\tif ( renderingMode !== 'post-only' || isDesignPostType ) {\n\t\t\treturn { type: 'default' };\n\t\t}\n\n\t\tif ( themeSupportsLayout ) {\n\t\t\t// We need to ensure support for wide and full alignments,\n\t\t\t// so we add the constrained type.\n\t\t\treturn { ...globalLayoutSettings, type: 'constrained' };\n\t\t}\n\t\t// Set default layout for classic themes so all alignments are supported.\n\t\treturn { type: 'default' };\n\t}, [\n\t\trenderingMode,\n\t\tthemeSupportsLayout,\n\t\tglobalLayoutSettings,\n\t\tisDesignPostType,\n\t] );\n\n\tconst newestPostContentAttributes = useMemo( () => {\n\t\tif (\n\t\t\t! editedPostTemplate?.content &&\n\t\t\t! editedPostTemplate?.blocks &&\n\t\t\tpostContentAttributes\n\t\t) {\n\t\t\treturn postContentAttributes;\n\t\t}\n\t\t// When in template editing mode, we can access the blocks directly.\n\t\tif ( editedPostTemplate?.blocks ) {\n\t\t\treturn getPostContentAttributes( editedPostTemplate?.blocks );\n\t\t}\n\t\t// If there are no blocks, we have to parse the content string.\n\t\t// Best double-check it's a string otherwise the parse function gets unhappy.\n\t\tconst parseableContent =\n\t\t\ttypeof editedPostTemplate?.content === 'string'\n\t\t\t\t? editedPostTemplate?.content\n\t\t\t\t: '';\n\n\t\treturn getPostContentAttributes( parse( parseableContent ) ) || {};\n\t}, [\n\t\teditedPostTemplate?.content,\n\t\teditedPostTemplate?.blocks,\n\t\tpostContentAttributes,\n\t] );\n\n\tconst hasPostContentAtRootLevel = useMemo( () => {\n\t\tif ( ! editedPostTemplate?.content && ! editedPostTemplate?.blocks ) {\n\t\t\treturn false;\n\t\t}\n\t\t// When in template editing mode, we can access the blocks directly.\n\t\tif ( editedPostTemplate?.blocks ) {\n\t\t\treturn checkForPostContentAtRootLevel( editedPostTemplate?.blocks );\n\t\t}\n\t\t// If there are no blocks, we have to parse the content string.\n\t\t// Best double-check it's a string otherwise the parse function gets unhappy.\n\t\tconst parseableContent =\n\t\t\ttypeof editedPostTemplate?.content === 'string'\n\t\t\t\t? editedPostTemplate?.content\n\t\t\t\t: '';\n\n\t\treturn (\n\t\t\tcheckForPostContentAtRootLevel( parse( parseableContent ) ) || false\n\t\t);\n\t}, [ editedPostTemplate?.content, editedPostTemplate?.blocks ] );\n\n\tconst { layout = {}, align = '' } = newestPostContentAttributes || {};\n\n\tconst postContentLayoutClasses = useLayoutClasses(\n\t\tnewestPostContentAttributes,\n\t\t'core/post-content'\n\t);\n\n\tconst blockListLayoutClass = classnames(\n\t\t{\n\t\t\t'is-layout-flow': ! themeSupportsLayout,\n\t\t},\n\t\tthemeSupportsLayout && postContentLayoutClasses,\n\t\talign && `align${ align }`\n\t);\n\n\tconst postContentLayoutStyles = useLayoutStyles(\n\t\tnewestPostContentAttributes,\n\t\t'core/post-content',\n\t\t'.block-editor-block-list__layout.is-root-container'\n\t);\n\n\t// Update type for blocks using legacy layouts.\n\tconst postContentLayout = useMemo( () => {\n\t\treturn layout &&\n\t\t\t( layout?.type === 'constrained' ||\n\t\t\t\tlayout?.inherit ||\n\t\t\t\tlayout?.contentSize ||\n\t\t\t\tlayout?.wideSize )\n\t\t\t? { ...globalLayoutSettings, ...layout, type: 'constrained' }\n\t\t\t: { ...globalLayoutSettings, ...layout, type: 'default' };\n\t}, [\n\t\tlayout?.type,\n\t\tlayout?.inherit,\n\t\tlayout?.contentSize,\n\t\tlayout?.wideSize,\n\t\tglobalLayoutSettings,\n\t] );\n\n\t// If there is a Post Content block we use its layout for the block list;\n\t// if not, this must be a classic theme, in which case we use the fallback layout.\n\tconst blockListLayout = postContentAttributes\n\t\t? postContentLayout\n\t\t: fallbackLayout;\n\n\tconst postEditorLayout =\n\t\tblockListLayout?.type === 'default' && ! hasPostContentAtRootLevel\n\t\t\t? fallbackLayout\n\t\t\t: blockListLayout;\n\n\tconst observeTypingRef = useTypingObserver();\n\tconst titleRef = useRef();\n\tuseEffect( () => {\n\t\tif ( ! autoFocus || ! isCleanNewPost() ) {\n\t\t\treturn;\n\t\t}\n\t\ttitleRef?.current?.focus();\n\t}, [ autoFocus, isCleanNewPost ] );\n\n\t// Add some styles for alignwide/alignfull Post Content and its children.\n\tconst alignCSS = `.is-root-container.alignwide { max-width: var(--wp--style--global--wide-size); margin-left: auto; margin-right: auto;}\n\t\t.is-root-container.alignwide:where(.is-layout-flow) > :not(.alignleft):not(.alignright) { max-width: var(--wp--style--global--wide-size);}\n\t\t.is-root-container.alignfull { max-width: none; margin-left: auto; margin-right: auto;}\n\t\t.is-root-container.alignfull:where(.is-layout-flow) > :not(.alignleft):not(.alignright) { max-width: none;}`;\n\n\tconst localRef = useRef();\n\tconst typewriterRef = useTypewriter();\n\tconst contentRef = useMergeRefs( [\n\t\tlocalRef,\n\t\trenderingMode === 'post-only' ? typewriterRef : noop,\n\t\tuseFlashEditableBlocks( {\n\t\t\tisEnabled: renderingMode === 'template-locked',\n\t\t} ),\n\t] );\n\n\treturn (\n\t\t<BlockCanvas\n\t\t\tshouldIframe={\n\t\t\t\t! disableIframe || [ 'Tablet', 'Mobile' ].includes( deviceType )\n\t\t\t}\n\t\t\tcontentRef={ contentRef }\n\t\t\tstyles={ styles }\n\t\t\theight=\"100%\"\n\t\t\tiframeProps={ {\n\t\t\t\tclassName: classnames( 'editor-canvas__iframe', {\n\t\t\t\t\t'has-editor-padding': showEditorPadding,\n\t\t\t\t} ),\n\t\t\t\t...iframeProps,\n\t\t\t\tstyle: {\n\t\t\t\t\t...iframeProps?.style,\n\t\t\t\t\t...deviceStyles,\n\t\t\t\t},\n\t\t\t} }\n\t\t>\n\t\t\t{ themeSupportsLayout &&\n\t\t\t\t! themeHasDisabledLayoutStyles &&\n\t\t\t\trenderingMode === 'post-only' &&\n\t\t\t\t! isDesignPostType && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<LayoutStyle\n\t\t\t\t\t\t\tselector=\".editor-editor-canvas__post-title-wrapper\"\n\t\t\t\t\t\t\tlayout={ fallbackLayout }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<LayoutStyle\n\t\t\t\t\t\t\tselector=\".block-editor-block-list__layout.is-root-container\"\n\t\t\t\t\t\t\tlayout={ postEditorLayout }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ align && <LayoutStyle css={ alignCSS } /> }\n\t\t\t\t\t\t{ postContentLayoutStyles && (\n\t\t\t\t\t\t\t<LayoutStyle\n\t\t\t\t\t\t\t\tlayout={ postContentLayout }\n\t\t\t\t\t\t\t\tcss={ postContentLayoutStyles }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t{ renderingMode === 'post-only' && ! isDesignPostType && (\n\t\t\t\t<div\n\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t'editor-editor-canvas__post-title-wrapper',\n\t\t\t\t\t\t// The following class is only here for backward comapatibility\n\t\t\t\t\t\t// some themes might be using it to style the post title.\n\t\t\t\t\t\t'edit-post-visual-editor__post-title-wrapper',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'has-global-padding': hasRootPaddingAwareAlignments,\n\t\t\t\t\t\t}\n\t\t\t\t\t) }\n\t\t\t\t\tcontentEditable={ false }\n\t\t\t\t\tref={ observeTypingRef }\n\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t// This is using inline styles\n\t\t\t\t\t\t// so it's applied for both iframed and non iframed editors.\n\t\t\t\t\t\tmarginTop: '4rem',\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t<PostTitle ref={ titleRef } />\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<RecursionProvider\n\t\t\t\tblockName={ wrapperBlockName }\n\t\t\t\tuniqueId={ wrapperUniqueId }\n\t\t\t>\n\t\t\t\t<BlockList\n\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t\t'is-' + deviceType.toLowerCase() + '-preview',\n\t\t\t\t\t\trenderingMode !== 'post-only' || isDesignPostType\n\t\t\t\t\t\t\t? 'wp-site-blocks'\n\t\t\t\t\t\t\t: `${ blockListLayoutClass } wp-block-post-content` // Ensure root level blocks receive default/flow blockGap styling rules.\n\t\t\t\t\t) }\n\t\t\t\t\tlayout={ blockListLayout }\n\t\t\t\t\tdropZoneElement={\n\t\t\t\t\t\t// When iframed, pass in the html element of the iframe to\n\t\t\t\t\t\t// ensure the drop zone extends to the edges of the iframe.\n\t\t\t\t\t\tdisableIframe\n\t\t\t\t\t\t\t? localRef.current\n\t\t\t\t\t\t\t: localRef.current?.parentNode\n\t\t\t\t\t}\n\t\t\t\t\trenderAppender={ renderAppender }\n\t\t\t\t\t__unstableDisableDropZone={\n\t\t\t\t\t\t// In template preview mode, disable drop zones at the root of the template.\n\t\t\t\t\t\trenderingMode === 'template-locked' ? true : false\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t{ renderingMode === 'template-locked' && (\n\t\t\t\t\t<EditTemplateBlocksNotification contentRef={ localRef } />\n\t\t\t\t) }\n\t\t\t</RecursionProvider>\n\t\t\t{ children }\n\t\t</BlockCanvas>\n\t);\n}\n\nexport default EditorCanvas;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst plus = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M11 12.5V17.5H12.5V12.5H17.5V11H12.5V6H11V11H6V12.5H11Z\" />\n\t</SVG>\n);\n\nexport default plus;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useViewportMatch } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\nimport {\n\tNavigableToolbar,\n\tToolSelector,\n\tstore as blockEditorStore,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport { Button, ToolbarItem } from '@wordpress/components';\nimport { listView, plus } from '@wordpress/icons';\nimport { useRef, useCallback } from '@wordpress/element';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\nimport EditorHistoryRedo from '../editor-history/redo';\nimport EditorHistoryUndo from '../editor-history/undo';\n\nconst { useShowBlockTools } = unlock( blockEditorPrivateApis );\n\nconst preventDefault = ( event ) => {\n\tevent.preventDefault();\n};\n\nfunction DocumentTools( {\n\tclassName,\n\tdisableBlockTools = false,\n\tchildren,\n\t// This is a temporary prop until the list view is fully unified between post and site editors.\n\tlistViewLabel = __( 'Document Overview' ),\n} ) {\n\tconst inserterButton = useRef();\n\tconst { setIsInserterOpened, setIsListViewOpened } =\n\t\tuseDispatch( editorStore );\n\tconst {\n\t\tisDistractionFree,\n\t\tisInserterOpened,\n\t\tisListViewOpen,\n\t\tlistViewShortcut,\n\t\tlistViewToggleRef,\n\t\thasFixedToolbar,\n\t\tshowIconLabels,\n\t} = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\tconst { get } = select( preferencesStore );\n\t\tconst { isListViewOpened, getListViewToggleRef } = unlock(\n\t\t\tselect( editorStore )\n\t\t);\n\t\tconst { getShortcutRepresentation } = select( keyboardShortcutsStore );\n\n\t\treturn {\n\t\t\tisInserterOpened: select( editorStore ).isInserterOpened(),\n\t\t\tisListViewOpen: isListViewOpened(),\n\t\t\tlistViewShortcut: getShortcutRepresentation(\n\t\t\t\t'core/editor/toggle-list-view'\n\t\t\t),\n\t\t\tlistViewToggleRef: getListViewToggleRef(),\n\t\t\thasFixedToolbar: getSettings().hasFixedToolbar,\n\t\t\tshowIconLabels: get( 'core', 'showIconLabels' ),\n\t\t\tisDistractionFree: get( 'core', 'distractionFree' ),\n\t\t};\n\t}, [] );\n\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst isWideViewport = useViewportMatch( 'wide' );\n\tconst { showFixedToolbar } = useShowBlockTools();\n\n\t/* translators: accessibility text for the editor toolbar */\n\tconst toolbarAriaLabel = __( 'Document tools' );\n\n\tconst toggleListView = useCallback(\n\t\t() => setIsListViewOpened( ! isListViewOpen ),\n\t\t[ setIsListViewOpened, isListViewOpen ]\n\t);\n\n\tconst toggleInserter = useCallback( () => {\n\t\tif ( isInserterOpened ) {\n\t\t\t// Focusing the inserter button should close the inserter popover.\n\t\t\t// However, there are some cases it won't close when the focus is lost.\n\t\t\t// See https://github.com/WordPress/gutenberg/issues/43090 for more details.\n\t\t\tinserterButton.current.focus();\n\t\t\tsetIsInserterOpened( false );\n\t\t} else {\n\t\t\tsetIsInserterOpened( true );\n\t\t}\n\t}, [ isInserterOpened, setIsInserterOpened ] );\n\n\t/* translators: button label text should, if possible, be under 16 characters. */\n\tconst longLabel = _x(\n\t\t'Toggle block inserter',\n\t\t'Generic label for block inserter button'\n\t);\n\tconst shortLabel = ! isInserterOpened ? __( 'Add' ) : __( 'Close' );\n\n\treturn (\n\t\t// Some plugins expect and use the `edit-post-header-toolbar` CSS class to\n\t\t// find the toolbar and inject UI elements into it. This is not officially\n\t\t// supported, but we're keeping it in the list of class names for backwards\n\t\t// compatibility.\n\t\t<NavigableToolbar\n\t\t\tclassName={ classnames(\n\t\t\t\t'editor-document-tools',\n\t\t\t\t'edit-post-header-toolbar',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\taria-label={ toolbarAriaLabel }\n\t\t\tshouldUseKeyboardFocusShortcut={ ! showFixedToolbar }\n\t\t\tvariant=\"unstyled\"\n\t\t>\n\t\t\t<div className=\"editor-document-tools__left\">\n\t\t\t\t<ToolbarItem\n\t\t\t\t\tref={ inserterButton }\n\t\t\t\t\tas={ Button }\n\t\t\t\t\tclassName=\"editor-document-tools__inserter-toggle\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tisPressed={ isInserterOpened }\n\t\t\t\t\tonMouseDown={ preventDefault }\n\t\t\t\t\tonClick={ toggleInserter }\n\t\t\t\t\tdisabled={ disableBlockTools }\n\t\t\t\t\ticon={ plus }\n\t\t\t\t\tlabel={ showIconLabels ? shortLabel : longLabel }\n\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\taria-expanded={ isInserterOpened }\n\t\t\t\t/>\n\t\t\t\t{ ( isWideViewport || ! showIconLabels ) && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{ isLargeViewport && ! hasFixedToolbar && (\n\t\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\t\tas={ ToolSelector }\n\t\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\t\tshowIconLabels ? 'tertiary' : undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdisabled={ disableBlockTools }\n\t\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ EditorHistoryUndo }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ EditorHistoryRedo }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ ! isDistractionFree && (\n\t\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\t\tas={ Button }\n\t\t\t\t\t\t\t\tclassName=\"editor-document-tools__document-overview-toggle\"\n\t\t\t\t\t\t\t\ticon={ listView }\n\t\t\t\t\t\t\t\tdisabled={ disableBlockTools }\n\t\t\t\t\t\t\t\tisPressed={ isListViewOpen }\n\t\t\t\t\t\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\t\t\t\t\t\tlabel={ listViewLabel }\n\t\t\t\t\t\t\t\tonClick={ toggleListView }\n\t\t\t\t\t\t\t\tshortcut={ listViewShortcut }\n\t\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\t\tshowIconLabels ? 'tertiary' : undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taria-expanded={ isListViewOpen }\n\t\t\t\t\t\t\t\tref={ listViewToggleRef }\n\t\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t</NavigableToolbar>\n\t);\n}\n\nexport default DocumentTools;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst close = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M13 11.8l6.1-6.3-1-1-6.1 6.2-6.1-6.2-1 1 6.1 6.3-6.5 6.7 1 1 6.5-6.6 6.5 6.6 1-1z\" />\n\t</SVG>\n);\n\nexport default close;\n","/**\n * WordPress dependencies\n */\nimport { __experimentalText as Text } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport CharacterCount from '../character-count';\nimport WordCount from '../word-count';\nimport TimeToRead from '../time-to-read';\nimport DocumentOutline from '../document-outline';\n\nexport default function ListViewOutline() {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"editor-list-view-sidebar__outline\">\n\t\t\t\t<div>\n\t\t\t\t\t<Text>{ __( 'Characters:' ) }</Text>\n\t\t\t\t\t<Text>\n\t\t\t\t\t\t<CharacterCount />\n\t\t\t\t\t</Text>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Text>{ __( 'Words:' ) }</Text>\n\t\t\t\t\t<WordCount />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Text>{ __( 'Time to read:' ) }</Text>\n\t\t\t\t\t<TimeToRead />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<DocumentOutline />\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __experimentalListView as ListView } from '@wordpress/block-editor';\nimport {\n\tButton,\n\tprivateApis as componentsPrivateApis,\n} from '@wordpress/components';\nimport { useFocusOnMount, useMergeRefs } from '@wordpress/compose';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { focus } from '@wordpress/dom';\nimport { useCallback, useRef, useState } from '@wordpress/element';\nimport { __, _x } from '@wordpress/i18n';\nimport { closeSmall } from '@wordpress/icons';\nimport { useShortcut } from '@wordpress/keyboard-shortcuts';\nimport { ESCAPE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport ListViewOutline from './list-view-outline';\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nconst { Tabs } = unlock( componentsPrivateApis );\n\nexport default function ListViewSidebar() {\n\tconst { setIsListViewOpened } = useDispatch( editorStore );\n\tconst { getListViewToggleRef } = unlock( useSelect( editorStore ) );\n\n\t// This hook handles focus when the sidebar first renders.\n\tconst focusOnMountRef = useFocusOnMount( 'firstElement' );\n\n\t// When closing the list view, focus should return to the toggle button.\n\tconst closeListView = useCallback( () => {\n\t\tsetIsListViewOpened( false );\n\t\tgetListViewToggleRef().current?.focus();\n\t}, [ getListViewToggleRef, setIsListViewOpened ] );\n\n\tconst closeOnEscape = useCallback(\n\t\t( event ) => {\n\t\t\tif ( event.keyCode === ESCAPE && ! event.defaultPrevented ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tcloseListView();\n\t\t\t}\n\t\t},\n\t\t[ closeListView ]\n\t);\n\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the dropZoneElement updates.\n\tconst [ dropZoneElement, setDropZoneElement ] = useState( null );\n\t// Tracks our current tab.\n\tconst [ tab, setTab ] = useState( 'list-view' );\n\n\t// This ref refers to the sidebar as a whole.\n\tconst sidebarRef = useRef();\n\t// This ref refers to the tab panel.\n\tconst tabsRef = useRef();\n\t// This ref refers to the list view application area.\n\tconst listViewRef = useRef();\n\n\t// Must merge the refs together so focus can be handled properly in the next function.\n\tconst listViewContainerRef = useMergeRefs( [\n\t\tfocusOnMountRef,\n\t\tlistViewRef,\n\t\tsetDropZoneElement,\n\t] );\n\n\t/*\n\t * Callback function to handle list view or outline focus.\n\t *\n\t * @param {string} currentTab The current tab. Either list view or outline.\n\t *\n\t * @return void\n\t */\n\tfunction handleSidebarFocus( currentTab ) {\n\t\t// Tab panel focus.\n\t\tconst tabPanelFocus = focus.tabbable.find( tabsRef.current )[ 0 ];\n\t\t// List view tab is selected.\n\t\tif ( currentTab === 'list-view' ) {\n\t\t\t// Either focus the list view or the tab panel. Must have a fallback because the list view does not render when there are no blocks.\n\t\t\tconst listViewApplicationFocus = focus.tabbable.find(\n\t\t\t\tlistViewRef.current\n\t\t\t)[ 0 ];\n\t\t\tconst listViewFocusArea = sidebarRef.current.contains(\n\t\t\t\tlistViewApplicationFocus\n\t\t\t)\n\t\t\t\t? listViewApplicationFocus\n\t\t\t\t: tabPanelFocus;\n\t\t\tlistViewFocusArea.focus();\n\t\t\t// Outline tab is selected.\n\t\t} else {\n\t\t\ttabPanelFocus.focus();\n\t\t}\n\t}\n\n\tconst handleToggleListViewShortcut = useCallback( () => {\n\t\t// If the sidebar has focus, it is safe to close.\n\t\tif (\n\t\t\tsidebarRef.current.contains(\n\t\t\t\tsidebarRef.current.ownerDocument.activeElement\n\t\t\t)\n\t\t) {\n\t\t\tcloseListView();\n\t\t} else {\n\t\t\t// If the list view or outline does not have focus, focus should be moved to it.\n\t\t\thandleSidebarFocus( tab );\n\t\t}\n\t}, [ closeListView, tab ] );\n\n\t// This only fires when the sidebar is open because of the conditional rendering.\n\t// It is the same shortcut to open but that is defined as a global shortcut and only fires when the sidebar is closed.\n\tuseShortcut( 'core/editor/toggle-list-view', handleToggleListViewShortcut );\n\n\treturn (\n\t\t// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n\t\t<div\n\t\t\tclassName=\"editor-list-view-sidebar\"\n\t\t\tonKeyDown={ closeOnEscape }\n\t\t\tref={ sidebarRef }\n\t\t>\n\t\t\t<Tabs\n\t\t\t\tonSelect={ ( tabName ) => setTab( tabName ) }\n\t\t\t\tselectOnMove={ false }\n\t\t\t\t// The initial tab value is set explicitly to avoid an initial\n\t\t\t\t// render where no tab is selected. This ensures that the\n\t\t\t\t// tabpanel height is correct so the relevant scroll container\n\t\t\t\t// can be rendered internally.\n\t\t\t\tdefaultTabId=\"list-view\"\n\t\t\t>\n\t\t\t\t<div className=\"edit-post-editor__document-overview-panel__header\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"editor-list-view-sidebar__close-button\"\n\t\t\t\t\t\ticon={ closeSmall }\n\t\t\t\t\t\tlabel={ __( 'Close' ) }\n\t\t\t\t\t\tonClick={ closeListView }\n\t\t\t\t\t/>\n\t\t\t\t\t<Tabs.TabList\n\t\t\t\t\t\tclassName=\"editor-list-view-sidebar__tabs-tablist\"\n\t\t\t\t\t\tref={ tabsRef }\n\t\t\t\t\t>\n\t\t\t\t\t\t<Tabs.Tab\n\t\t\t\t\t\t\tclassName=\"editor-list-view-sidebar__tabs-tab\"\n\t\t\t\t\t\t\ttabId=\"list-view\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ _x( 'List View', 'Post overview' ) }\n\t\t\t\t\t\t</Tabs.Tab>\n\t\t\t\t\t\t<Tabs.Tab\n\t\t\t\t\t\t\tclassName=\"editor-list-view-sidebar__tabs-tab\"\n\t\t\t\t\t\t\ttabId=\"outline\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ _x( 'Outline', 'Post overview' ) }\n\t\t\t\t\t\t</Tabs.Tab>\n\t\t\t\t\t</Tabs.TabList>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs.TabPanel\n\t\t\t\t\tref={ listViewContainerRef }\n\t\t\t\t\tclassName=\"editor-list-view-sidebar__tabs-tabpanel\"\n\t\t\t\t\ttabId=\"list-view\"\n\t\t\t\t\tfocusable={ false }\n\t\t\t\t>\n\t\t\t\t\t<div className=\"editor-list-view-sidebar__list-view-container\">\n\t\t\t\t\t\t<div className=\"editor-list-view-sidebar__list-view-panel-content\">\n\t\t\t\t\t\t\t<ListView dropZoneElement={ dropZoneElement } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Tabs.TabPanel>\n\t\t\t\t<Tabs.TabPanel\n\t\t\t\t\tclassName=\"editor-list-view-sidebar__tabs-tabpanel\"\n\t\t\t\t\ttabId=\"outline\"\n\t\t\t\t\tfocusable={ false }\n\t\t\t\t>\n\t\t\t\t\t<div className=\"editor-list-view-sidebar__list-view-container\">\n\t\t\t\t\t\t<ListViewOutline />\n\t\t\t\t\t</div>\n\t\t\t\t</Tabs.TabPanel>\n\t\t\t</Tabs>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuItemsChoice, MenuGroup } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Set of available mode options.\n *\n * @type {Array}\n */\nconst MODES = [\n\t{\n\t\tvalue: 'visual',\n\t\tlabel: __( 'Visual editor' ),\n\t},\n\t{\n\t\tvalue: 'text',\n\t\tlabel: __( 'Code editor' ),\n\t},\n];\n\nfunction ModeSwitcher() {\n\tconst { shortcut, isRichEditingEnabled, isCodeEditingEnabled, mode } =\n\t\tuseSelect(\n\t\t\t( select ) => ( {\n\t\t\t\tshortcut: select(\n\t\t\t\t\tkeyboardShortcutsStore\n\t\t\t\t).getShortcutRepresentation( 'core/editor/toggle-mode' ),\n\t\t\t\tisRichEditingEnabled:\n\t\t\t\t\tselect( editorStore ).getEditorSettings()\n\t\t\t\t\t\t.richEditingEnabled,\n\t\t\t\tisCodeEditingEnabled:\n\t\t\t\t\tselect( editorStore ).getEditorSettings()\n\t\t\t\t\t\t.codeEditingEnabled,\n\t\t\t\tmode: select( editorStore ).getEditorMode(),\n\t\t\t} ),\n\t\t\t[]\n\t\t);\n\tconst { switchEditorMode } = useDispatch( editorStore );\n\n\tlet selectedMode = mode;\n\tif ( ! isRichEditingEnabled && mode === 'visual' ) {\n\t\tselectedMode = 'text';\n\t}\n\tif ( ! isCodeEditingEnabled && mode === 'text' ) {\n\t\tselectedMode = 'visual';\n\t}\n\n\tconst choices = MODES.map( ( choice ) => {\n\t\tif ( ! isCodeEditingEnabled && choice.value === 'text' ) {\n\t\t\tchoice = {\n\t\t\t\t...choice,\n\t\t\t\tdisabled: true,\n\t\t\t};\n\t\t}\n\t\tif ( ! isRichEditingEnabled && choice.value === 'visual' ) {\n\t\t\tchoice = {\n\t\t\t\t...choice,\n\t\t\t\tdisabled: true,\n\t\t\t\tinfo: __(\n\t\t\t\t\t'You can enable the visual editor in your profile settings.'\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tif ( choice.value !== selectedMode && ! choice.disabled ) {\n\t\t\treturn { ...choice, shortcut };\n\t\t}\n\t\treturn choice;\n\t} );\n\n\treturn (\n\t\t<MenuGroup label={ __( 'Editor' ) }>\n\t\t\t<MenuItemsChoice\n\t\t\t\tchoices={ choices }\n\t\t\t\tvalue={ selectedMode }\n\t\t\t\tonSelect={ switchEditorMode }\n\t\t\t/>\n\t\t</MenuGroup>\n\t);\n}\n\nexport default ModeSwitcher;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst mobile = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M15 4H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm.5 14c0 .3-.2.5-.5.5H9c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h6c.3 0 .5.2.5.5v12zm-4.5-.5h2V16h-2v1.5z\" />\n\t</SVG>\n);\n\nexport default mobile;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst tablet = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M17 4H7c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm.5 14c0 .3-.2.5-.5.5H7c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h10c.3 0 .5.2.5.5v12zm-7.5-.5h4V16h-4v1.5z\" />\n\t</SVG>\n);\n\nexport default tablet;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst desktop = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M20.5 16h-.7V8c0-1.1-.9-2-2-2H6.2c-1.1 0-2 .9-2 2v8h-.7c-.8 0-1.5.7-1.5 1.5h20c0-.8-.7-1.5-1.5-1.5zM5.7 8c0-.3.2-.5.5-.5h11.6c.3 0 .5.2.5.5v7.6H5.7V8z\" />\n\t</SVG>\n);\n\nexport default desktop;\n","/**\n * WordPress dependencies\n */\nimport { BlockIcon } from '@wordpress/block-editor';\nimport { CheckboxControl } from '@wordpress/components';\n\nfunction BlockTypesChecklist( { blockTypes, value, onItemChange } ) {\n\treturn (\n\t\t<ul className=\"editor-block-manager__checklist\">\n\t\t\t{ blockTypes.map( ( blockType ) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={ blockType.name }\n\t\t\t\t\tclassName=\"editor-block-manager__checklist-item\"\n\t\t\t\t>\n\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ blockType.title }\n\t\t\t\t\t\tchecked={ value.includes( blockType.name ) }\n\t\t\t\t\t\tonChange={ ( ...args ) =>\n\t\t\t\t\t\t\tonItemChange( blockType.name, ...args )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<BlockIcon icon={ blockType.icon } />\n\t\t\t\t</li>\n\t\t\t) ) }\n\t\t</ul>\n\t);\n}\n\nexport default BlockTypesChecklist;\n","/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { CheckboxControl } from '@wordpress/components';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesChecklist from './checklist';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nfunction BlockManagerCategory( { title, blockTypes } ) {\n\tconst instanceId = useInstanceId( BlockManagerCategory );\n\tconst { allowedBlockTypes, hiddenBlockTypes } = useSelect( ( select ) => {\n\t\tconst { getEditorSettings } = select( editorStore );\n\t\tconst { get } = select( preferencesStore );\n\t\treturn {\n\t\t\tallowedBlockTypes: getEditorSettings().allowedBlockTypes,\n\t\t\thiddenBlockTypes: get( 'core', 'hiddenBlockTypes' ),\n\t\t};\n\t}, [] );\n\tconst filteredBlockTypes = useMemo( () => {\n\t\tif ( allowedBlockTypes === true ) {\n\t\t\treturn blockTypes;\n\t\t}\n\t\treturn blockTypes.filter( ( { name } ) => {\n\t\t\treturn allowedBlockTypes?.includes( name );\n\t\t} );\n\t}, [ allowedBlockTypes, blockTypes ] );\n\tconst { showBlockTypes, hideBlockTypes } = unlock(\n\t\tuseDispatch( editorStore )\n\t);\n\tconst toggleVisible = useCallback(\n\t\t( blockName, nextIsChecked ) => {\n\t\t\tif ( nextIsChecked ) {\n\t\t\t\tshowBlockTypes( blockName );\n\t\t\t} else {\n\t\t\t\thideBlockTypes( blockName );\n\t\t\t}\n\t\t},\n\t\t[ showBlockTypes, hideBlockTypes ]\n\t);\n\tconst toggleAllVisible = useCallback(\n\t\t( nextIsChecked ) => {\n\t\t\tconst blockNames = blockTypes.map( ( { name } ) => name );\n\t\t\tif ( nextIsChecked ) {\n\t\t\t\tshowBlockTypes( blockNames );\n\t\t\t} else {\n\t\t\t\thideBlockTypes( blockNames );\n\t\t\t}\n\t\t},\n\t\t[ blockTypes, showBlockTypes, hideBlockTypes ]\n\t);\n\n\tif ( ! filteredBlockTypes.length ) {\n\t\treturn null;\n\t}\n\n\tconst checkedBlockNames = filteredBlockTypes\n\t\t.map( ( { name } ) => name )\n\t\t.filter( ( type ) => ! ( hiddenBlockTypes ?? [] ).includes( type ) );\n\n\tconst titleId = 'editor-block-manager__category-title-' + instanceId;\n\n\tconst isAllChecked = checkedBlockNames.length === filteredBlockTypes.length;\n\tconst isIndeterminate = ! isAllChecked && checkedBlockNames.length > 0;\n\n\treturn (\n\t\t<div\n\t\t\trole=\"group\"\n\t\t\taria-labelledby={ titleId }\n\t\t\tclassName=\"editor-block-manager__category\"\n\t\t>\n\t\t\t<CheckboxControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tchecked={ isAllChecked }\n\t\t\t\tonChange={ toggleAllVisible }\n\t\t\t\tclassName=\"editor-block-manager__category-title\"\n\t\t\t\tindeterminate={ isIndeterminate }\n\t\t\t\tlabel={ <span id={ titleId }>{ title }</span> }\n\t\t\t/>\n\t\t\t<BlockTypesChecklist\n\t\t\t\tblockTypes={ filteredBlockTypes }\n\t\t\t\tvalue={ checkedBlockNames }\n\t\t\t\tonItemChange={ toggleVisible }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default BlockManagerCategory;\n","/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { SearchControl, Button } from '@wordpress/components';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { useEffect, useState } from '@wordpress/element';\nimport { useDebounce, compose } from '@wordpress/compose';\nimport { speak } from '@wordpress/a11y';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\nimport BlockManagerCategory from './category';\n\nfunction BlockManager( {\n\tblockTypes,\n\tcategories,\n\thasBlockSupport,\n\tisMatchingSearchTerm,\n\tnumberOfHiddenBlocks,\n\tenableAllBlockTypes,\n} ) {\n\tconst debouncedSpeak = useDebounce( speak, 500 );\n\tconst [ search, setSearch ] = useState( '' );\n\n\t// Filtering occurs here (as opposed to `withSelect`) to avoid\n\t// wasted renders by consequence of `Array#filter` producing\n\t// a new value reference on each call.\n\tblockTypes = blockTypes.filter(\n\t\t( blockType ) =>\n\t\t\thasBlockSupport( blockType, 'inserter', true ) &&\n\t\t\t( ! search || isMatchingSearchTerm( blockType, search ) ) &&\n\t\t\t( ! blockType.parent ||\n\t\t\t\tblockType.parent.includes( 'core/post-content' ) )\n\t);\n\n\t// Announce search results on change\n\tuseEffect( () => {\n\t\tif ( ! search ) {\n\t\t\treturn;\n\t\t}\n\t\tconst count = blockTypes.length;\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results. */\n\t\t\t_n( '%d result found.', '%d results found.', count ),\n\t\t\tcount\n\t\t);\n\t\tdebouncedSpeak( resultsFoundMessage );\n\t}, [ blockTypes.length, search, debouncedSpeak ] );\n\n\treturn (\n\t\t<div className=\"editor-block-manager__content\">\n\t\t\t{ !! numberOfHiddenBlocks && (\n\t\t\t\t<div className=\"editor-block-manager__disabled-blocks-count\">\n\t\t\t\t\t{ sprintf(\n\t\t\t\t\t\t/* translators: %d: number of blocks. */\n\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t'%d block is hidden.',\n\t\t\t\t\t\t\t'%d blocks are hidden.',\n\t\t\t\t\t\t\tnumberOfHiddenBlocks\n\t\t\t\t\t\t),\n\t\t\t\t\t\tnumberOfHiddenBlocks\n\t\t\t\t\t) }\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={ () => enableAllBlockTypes( blockTypes ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Reset' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<SearchControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Search for a block' ) }\n\t\t\t\tplaceholder={ __( 'Search for a block' ) }\n\t\t\t\tvalue={ search }\n\t\t\t\tonChange={ ( nextSearch ) => setSearch( nextSearch ) }\n\t\t\t\tclassName=\"editor-block-manager__search\"\n\t\t\t/>\n\t\t\t<div\n\t\t\t\ttabIndex=\"0\"\n\t\t\t\trole=\"region\"\n\t\t\t\taria-label={ __( 'Available block types' ) }\n\t\t\t\tclassName=\"editor-block-manager__results\"\n\t\t\t>\n\t\t\t\t{ blockTypes.length === 0 && (\n\t\t\t\t\t<p className=\"editor-block-manager__no-results\">\n\t\t\t\t\t\t{ __( 'No blocks found.' ) }\n\t\t\t\t\t</p>\n\t\t\t\t) }\n\t\t\t\t{ categories.map( ( category ) => (\n\t\t\t\t\t<BlockManagerCategory\n\t\t\t\t\t\tkey={ category.slug }\n\t\t\t\t\t\ttitle={ category.title }\n\t\t\t\t\t\tblockTypes={ blockTypes.filter(\n\t\t\t\t\t\t\t( blockType ) =>\n\t\t\t\t\t\t\t\tblockType.category === category.slug\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t\t<BlockManagerCategory\n\t\t\t\t\ttitle={ __( 'Uncategorized' ) }\n\t\t\t\t\tblockTypes={ blockTypes.filter(\n\t\t\t\t\t\t( { category } ) => ! category\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetBlockTypes,\n\t\t\tgetCategories,\n\t\t\thasBlockSupport,\n\t\t\tisMatchingSearchTerm,\n\t\t} = select( blocksStore );\n\t\tconst { get } = select( preferencesStore );\n\n\t\t// Some hidden blocks become unregistered\n\t\t// by removing for instance the plugin that registered them, yet\n\t\t// they're still remain as hidden by the user's action.\n\t\t// We consider \"hidden\", blocks which were hidden and\n\t\t// are still registered.\n\t\tconst blockTypes = getBlockTypes();\n\t\tconst hiddenBlockTypes = (\n\t\t\tget( 'core', 'hiddenBlockTypes' ) ?? []\n\t\t).filter( ( hiddenBlock ) => {\n\t\t\treturn blockTypes.some(\n\t\t\t\t( registeredBlock ) => registeredBlock.name === hiddenBlock\n\t\t\t);\n\t\t} );\n\t\tconst numberOfHiddenBlocks =\n\t\t\tArray.isArray( hiddenBlockTypes ) && hiddenBlockTypes.length;\n\n\t\treturn {\n\t\t\tblockTypes,\n\t\t\tcategories: getCategories(),\n\t\t\thasBlockSupport,\n\t\t\tisMatchingSearchTerm,\n\t\t\tnumberOfHiddenBlocks,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { showBlockTypes } = unlock( dispatch( editorStore ) );\n\t\treturn {\n\t\t\tenableAllBlockTypes: ( blockTypes ) => {\n\t\t\t\tconst blockNames = blockTypes.map( ( { name } ) => name );\n\t\t\t\tshowBlockTypes( blockNames );\n\t\t\t},\n\t\t};\n\t} ),\n] )( BlockManager );\n","/**\n * WordPress dependencies\n */\n\nimport { __ } from '@wordpress/i18n';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport {\n\tstore as preferencesStore,\n\tprivateApis as preferencesPrivateApis,\n} from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport EnablePanelOption from './enable-panel';\nimport EnablePluginDocumentSettingPanelOption from './enable-plugin-document-setting-panel';\nimport BlockManager from '../block-manager';\nimport PostTaxonomies from '../post-taxonomies';\nimport PostFeaturedImageCheck from '../post-featured-image/check';\nimport PostExcerptCheck from '../post-excerpt/check';\nimport PageAttributesCheck from '../page-attributes/check';\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nconst {\n\tPreferencesModal,\n\tPreferencesModalTabs,\n\tPreferencesModalSection,\n\tPreferenceToggleControl,\n} = unlock( preferencesPrivateApis );\n\nexport default function EditorPreferencesModal( {\n\textraSections = {},\n\tisActive,\n\tonClose,\n} ) {\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst { showBlockBreadcrumbsOption } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditorSettings } = select( editorStore );\n\t\t\tconst { get } = select( preferencesStore );\n\t\t\tconst isRichEditingEnabled = getEditorSettings().richEditingEnabled;\n\t\t\tconst isDistractionFreeEnabled = get( 'core', 'distractionFree' );\n\t\t\treturn {\n\t\t\t\tshowBlockBreadcrumbsOption:\n\t\t\t\t\t! isDistractionFreeEnabled &&\n\t\t\t\t\tisLargeViewport &&\n\t\t\t\t\tisRichEditingEnabled,\n\t\t\t};\n\t\t},\n\t\t[ isLargeViewport ]\n\t);\n\n\tconst { setIsListViewOpened, setIsInserterOpened } =\n\t\tuseDispatch( editorStore );\n\tconst { set: setPreference } = useDispatch( preferencesStore );\n\n\tconst toggleDistractionFree = () => {\n\t\tsetPreference( 'core', 'fixedToolbar', true );\n\t\tsetIsInserterOpened( false );\n\t\tsetIsListViewOpened( false );\n\t\t// Todo: Check sidebar when closing/opening distraction free.\n\t};\n\n\tconst turnOffDistractionFree = () => {\n\t\tsetPreference( 'core', 'distractionFree', false );\n\t};\n\n\tconst sections = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tname: 'general',\n\t\t\t\ttabLabel: __( 'General' ),\n\t\t\t\tcontent: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PreferencesModalSection title={ __( 'Interface' ) }>\n\t\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tfeatureName=\"showListViewByDefault\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Opens the block list view sidebar by default.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __( 'Always open list view' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ showBlockBreadcrumbsOption && (\n\t\t\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\t\tfeatureName=\"showBlockBreadcrumbs\"\n\t\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t\t'Display the block hierarchy trail at the bottom of the editor.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Show block breadcrumbs' ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tfeatureName=\"allowRightClickOverrides\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Allows contextual list view menus via right-click, overriding browser defaults.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t'Allow right-click contextual menus'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t\t<PreferencesModalSection\n\t\t\t\t\t\t\ttitle={ __( 'Document settings' ) }\n\t\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t\t'Select what settings are shown in the document panel.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<EnablePluginDocumentSettingPanelOption.Slot />\n\t\t\t\t\t\t\t<PostTaxonomies\n\t\t\t\t\t\t\t\ttaxonomyWrapper={ ( content, taxonomy ) => (\n\t\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\t\tlabel={ taxonomy.labels.menu_name }\n\t\t\t\t\t\t\t\t\t\tpanelName={ `taxonomy-panel-${ taxonomy.slug }` }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PostFeaturedImageCheck>\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Featured image' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"featured-image\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PostFeaturedImageCheck>\n\t\t\t\t\t\t\t<PostExcerptCheck>\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Excerpt' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"post-excerpt\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PostExcerptCheck>\n\t\t\t\t\t\t\t<PostTypeSupportCheck\n\t\t\t\t\t\t\t\tsupportKeys={ [ 'comments', 'trackbacks' ] }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Discussion' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"discussion-panel\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PostTypeSupportCheck>\n\t\t\t\t\t\t\t<PageAttributesCheck>\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Page attributes' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"page-attributes\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PageAttributesCheck>\n\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t\t{ extraSections?.general }\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'appearance',\n\t\t\t\ttabLabel: __( 'Appearance' ),\n\t\t\t\tcontent: (\n\t\t\t\t\t<PreferencesModalSection\n\t\t\t\t\t\ttitle={ __( 'Appearance' ) }\n\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t'Customize the editor interface to suit your needs.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\tfeatureName=\"fixedToolbar\"\n\t\t\t\t\t\t\tonToggle={ turnOffDistractionFree }\n\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t'Access all block and document tools in a single place.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tlabel={ __( 'Top toolbar' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\tfeatureName=\"distractionFree\"\n\t\t\t\t\t\t\tonToggle={ toggleDistractionFree }\n\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t'Reduce visual distractions by hiding the toolbar and other elements to focus on writing.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tlabel={ __( 'Distraction free' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\tfeatureName=\"focusMode\"\n\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t'Highlights the current block and fades other content.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tlabel={ __( 'Spotlight mode' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ extraSections?.appearance }\n\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'accessibility',\n\t\t\t\ttabLabel: __( 'Accessibility' ),\n\t\t\t\tcontent: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PreferencesModalSection\n\t\t\t\t\t\t\ttitle={ __( 'Navigation' ) }\n\t\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t\t'Optimize the editing experience for enhanced control.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tfeatureName=\"keepCaretInsideBlock\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Keeps the text cursor within the block boundaries, aiding users with screen readers by preventing unintentional cursor movement outside the block.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t'Contain text cursor inside block'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t\t<PreferencesModalSection title={ __( 'Interface' ) }>\n\t\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tfeatureName=\"showIconLabels\"\n\t\t\t\t\t\t\t\tlabel={ __( 'Show button text labels' ) }\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Show text instead of icons on buttons across the interface.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'blocks',\n\t\t\t\ttabLabel: __( 'Blocks' ),\n\t\t\t\tcontent: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PreferencesModalSection title={ __( 'Inserter' ) }>\n\t\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tfeatureName=\"mostUsedBlocks\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Adds a category with the most frequently used blocks in the inserter.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __( 'Show most used blocks' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t\t<PreferencesModalSection\n\t\t\t\t\t\t\ttitle={ __( 'Manage block visibility' ) }\n\t\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t\t\"Disable blocks that you don't want to appear in the inserter. They can always be toggled back on later.\"\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockManager />\n\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t\t[ isLargeViewport, showBlockBreadcrumbsOption, extraSections ]\n\t);\n\n\tif ( ! isActive ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PreferencesModal closeModal={ onClose }>\n\t\t\t<PreferencesModalTabs sections={ sections } />\n\t\t</PreferencesModal>\n\t);\n}\n","/**\n * Internal dependencies\n */\nimport EditorCanvas from './components/editor-canvas';\nimport { ExperimentalEditorProvider } from './components/provider';\nimport { lock } from './lock-unlock';\nimport { EntitiesSavedStatesExtensible } from './components/entities-saved-states';\nimport useBlockEditorSettings from './components/provider/use-block-editor-settings';\nimport DocumentTools from './components/document-tools';\nimport InserterSidebar from './components/inserter-sidebar';\nimport ListViewSidebar from './components/list-view-sidebar';\nimport ModeSwitcher from './components/mode-switcher';\nimport PluginPostExcerpt from './components/post-excerpt/plugin';\nimport PostPanelRow from './components/post-panel-row';\nimport PostViewLink from './components/post-view-link';\nimport PreviewDropdown from './components/preview-dropdown';\nimport PreferencesModal from './components/preferences-modal';\n\nexport const privateApis = {};\nlock( privateApis, {\n\tDocumentTools,\n\tEditorCanvas,\n\tExperimentalEditorProvider,\n\tEntitiesSavedStatesExtensible,\n\tInserterSidebar,\n\tListViewSidebar,\n\tModeSwitcher,\n\tPluginPostExcerpt,\n\tPostPanelRow,\n\tPostViewLink,\n\tPreviewDropdown,\n\tPreferencesModal,\n\n\t// This is a temporary private API while we're updating the site editor to use EditorProvider.\n\tuseBlockEditorSettings,\n} );\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { Button, VisuallyHidden } from '@wordpress/components';\nimport { __experimentalLibrary as Library } from '@wordpress/block-editor';\nimport { close } from '@wordpress/icons';\nimport {\n\tuseViewportMatch,\n\t__experimentalUseDialog as useDialog,\n} from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nexport default function InserterSidebar() {\n\tconst { insertionPoint, showMostUsedBlocks } = useSelect( ( select ) => {\n\t\tconst { getInsertionPoint } = unlock( select( editorStore ) );\n\t\tconst { get } = select( preferencesStore );\n\t\treturn {\n\t\t\tinsertionPoint: getInsertionPoint(),\n\t\t\tshowMostUsedBlocks: get( 'core', 'mostUsedBlocks' ),\n\t\t};\n\t}, [] );\n\tconst { setIsInserterOpened } = useDispatch( editorStore );\n\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\tconst TagName = ! isMobileViewport ? VisuallyHidden : 'div';\n\tconst [ inserterDialogRef, inserterDialogProps ] = useDialog( {\n\t\tonClose: () => setIsInserterOpened( false ),\n\t\tfocusOnMount: null,\n\t} );\n\n\tconst libraryRef = useRef();\n\tuseEffect( () => {\n\t\tlibraryRef.current.focusSearch();\n\t}, [] );\n\n\treturn (\n\t\t<div\n\t\t\tref={ inserterDialogRef }\n\t\t\t{ ...inserterDialogProps }\n\t\t\tclassName=\"editor-inserter-sidebar\"\n\t\t>\n\t\t\t<TagName className=\"editor-inserter-sidebar__header\">\n\t\t\t\t<Button\n\t\t\t\t\ticon={ close }\n\t\t\t\t\tlabel={ __( 'Close block inserter' ) }\n\t\t\t\t\tonClick={ () => setIsInserterOpened( false ) }\n\t\t\t\t/>\n\t\t\t</TagName>\n\t\t\t<div className=\"editor-inserter-sidebar__content\">\n\t\t\t\t<Library\n\t\t\t\t\tshowMostUsedBlocks={ showMostUsedBlocks }\n\t\t\t\t\tshowInserterHelpPanel\n\t\t\t\t\tshouldFocusBlock={ isMobileViewport }\n\t\t\t\t\trootClientId={ insertionPoint.rootClientId }\n\t\t\t\t\t__experimentalInsertionIndex={\n\t\t\t\t\t\tinsertionPoint.insertionIndex\n\t\t\t\t\t}\n\t\t\t\t\t__experimentalFilterValue={ insertionPoint.filterValue }\n\t\t\t\t\tref={ libraryRef }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { external } from '@wordpress/icons';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostViewLink() {\n\tconst { hasLoaded, permalink, isPublished, label, showIconLabels } =\n\t\tuseSelect( ( select ) => {\n\t\t\t// Grab post type to retrieve the view_item label.\n\t\t\tconst postTypeSlug = select( editorStore ).getCurrentPostType();\n\t\t\tconst postType = select( coreStore ).getPostType( postTypeSlug );\n\t\t\tconst { get } = select( preferencesStore );\n\n\t\t\treturn {\n\t\t\t\tpermalink: select( editorStore ).getPermalink(),\n\t\t\t\tisPublished: select( editorStore ).isCurrentPostPublished(),\n\t\t\t\tlabel: postType?.labels.view_item,\n\t\t\t\thasLoaded: !! postType,\n\t\t\t\tshowIconLabels: get( 'core', 'showIconLabels' ),\n\t\t\t};\n\t\t}, [] );\n\n\t// Only render the view button if the post is published and has a permalink.\n\tif ( ! isPublished || ! permalink || ! hasLoaded ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Button\n\t\t\ticon={ external }\n\t\t\tlabel={ label || __( 'View post' ) }\n\t\t\thref={ permalink }\n\t\t\ttarget=\"_blank\"\n\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\tsize=\"compact\"\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useViewportMatch } from '@wordpress/compose';\nimport {\n\tDropdownMenu,\n\tMenuGroup,\n\tMenuItem,\n\tVisuallyHidden,\n\tIcon,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { check, desktop, mobile, tablet, external } from '@wordpress/icons';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PostPreviewButton from '../post-preview-button';\n\nexport default function PreviewDropdown( { forceIsAutosaveable, disabled } ) {\n\tconst { deviceType, homeUrl, isTemplate, isViewable, showIconLabels } =\n\t\tuseSelect( ( select ) => {\n\t\t\tconst { getDeviceType, getCurrentPostType } = select( editorStore );\n\t\t\tconst { getUnstableBase, getPostType } = select( coreStore );\n\t\t\tconst { get } = select( preferencesStore );\n\t\t\tconst _currentPostType = getCurrentPostType();\n\t\t\treturn {\n\t\t\t\tdeviceType: getDeviceType(),\n\t\t\t\thomeUrl: getUnstableBase()?.home,\n\t\t\t\tisTemplate: _currentPostType === 'wp_template',\n\t\t\t\tisViewable: getPostType( _currentPostType )?.viewable ?? false,\n\t\t\t\tshowIconLabels: get( 'core', 'showIconLabels' ),\n\t\t\t};\n\t\t}, [] );\n\tconst { setDeviceType } = useDispatch( editorStore );\n\tconst isMobile = useViewportMatch( 'medium', '<' );\n\tif ( isMobile ) return null;\n\n\tconst popoverProps = {\n\t\tplacement: 'bottom-end',\n\t};\n\tconst toggleProps = {\n\t\tclassName: 'editor-preview-dropdown__toggle',\n\t\tsize: 'compact',\n\t\tshowTooltip: ! showIconLabels,\n\t\tdisabled,\n\t\t__experimentalIsFocusable: disabled,\n\t};\n\tconst menuProps = {\n\t\t'aria-label': __( 'View options' ),\n\t};\n\n\tconst deviceIcons = {\n\t\tmobile,\n\t\ttablet,\n\t\tdesktop,\n\t};\n\n\treturn (\n\t\t<DropdownMenu\n\t\t\tclassName=\"editor-preview-dropdown\"\n\t\t\tpopoverProps={ popoverProps }\n\t\t\ttoggleProps={ toggleProps }\n\t\t\tmenuProps={ menuProps }\n\t\t\ticon={ deviceIcons[ deviceType.toLowerCase() ] }\n\t\t\tlabel={ __( 'View' ) }\n\t\t\tdisableOpenOnArrowDown={ disabled }\n\t\t>\n\t\t\t{ ( { onClose } ) => (\n\t\t\t\t<>\n\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tonClick={ () => setDeviceType( 'Desktop' ) }\n\t\t\t\t\t\t\ticon={ deviceType === 'Desktop' && check }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Desktop' ) }\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tonClick={ () => setDeviceType( 'Tablet' ) }\n\t\t\t\t\t\t\ticon={ deviceType === 'Tablet' && check }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Tablet' ) }\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tonClick={ () => setDeviceType( 'Mobile' ) }\n\t\t\t\t\t\t\ticon={ deviceType === 'Mobile' && check }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Mobile' ) }\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t{ isTemplate && (\n\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\thref={ homeUrl }\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\ticon={ external }\n\t\t\t\t\t\t\t\tonClick={ onClose }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'View site' ) }\n\t\t\t\t\t\t\t\t<VisuallyHidden as=\"span\">\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t/* translators: accessibility text */\n\t\t\t\t\t\t\t\t\t\t__( '(opens in a new tab)' )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t) }\n\t\t\t\t\t{ isViewable && (\n\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t<PostPreviewButton\n\t\t\t\t\t\t\t\tclassName=\"editor-preview-dropdown__button-external\"\n\t\t\t\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\t\t\t\tforceIsAutosaveable={ forceIsAutosaveable }\n\t\t\t\t\t\t\t\ttextContent={\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{ __( 'Preview in new tab' ) }\n\t\t\t\t\t\t\t\t\t\t<Icon icon={ external } />\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonPreview={ onClose }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t) }\n\t\t</DropdownMenu>\n\t);\n}\n"],"names":["module","exports","keys","values","map","Map","has","key","indexOf","get","set","value","push","delete","index","splice","createEvent","name","Event","bubbles","e","evt","document","initEvent","assign","ta","nodeName","heightOffset","clientWidth","cachedHeight","pageResize","update","destroy","style","window","removeEventListener","Object","forEach","bind","height","resize","overflowY","overflowX","wordWrap","addEventListener","getComputedStyle","boxSizing","parseFloat","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","isNaN","changeOverflow","width","offsetWidth","scrollHeight","overflows","el","arr","parentNode","Element","scrollTop","node","getParentOverflows","docTop","documentElement","styleHeight","Math","round","computed","actualHeight","offsetHeight","dispatchEvent","err","methods","autosize","options","Array","prototype","call","length","x","default","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","isArray","inner","apply","toString","join","prop","currentStyle","replace","word","letter","toUpperCase","computedStyle","lnHeightStr","lnHeight","_lnHeightStyle","lineHeight","_node","createElement","innerHTML","setAttribute","fontSizeStr","fontSize","padding","border","body","appendChild","removeChild","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","extendStatics","__extends","this","setPrototypeOf","__proto__","d","b","p","__","constructor","create","__assign","t","s","n","__rest","getOwnPropertySymbols","__esModule","React","getLineHeight","RESIZED","TextareaAutosizeClass","_super","_this","state","textarea","onResize","updateLineHeight","setState","onChange","currentValue","currentTarget","componentDidMount","_a","maxRows","async","setTimeout","componentWillUnmount","render","_b","children","innerRef","maxHeight","ref","current","componentDidUpdate","defaultProps","rows","propTypes","Component","TextareaAutosize","forwardRef","TextareaAutosize_1","characterMap","chars","allAccents","RegExp","firstAccent","matcher","match","removeAccents","remove","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","a","definition","o","defineProperty","enumerable","obj","r","Symbol","toStringTag","lock","unlock","__dangerousOptInToUnstableAPIsOnlyForCoreModules","label","_x","useSource","lockAttributesEditing","EDITOR_SETTINGS_DEFAULTS","SETTINGS_DEFAULTS","richEditingEnabled","codeEditingEnabled","fontLibraryEnabled","enableCustomFields","defaultRenderingMode","getPostRawValue","raw","combineReducers","postId","action","type","postType","templateId","id","saving","pending","deleting","postLock","isLocked","template","isValid","postSavingLock","lockName","removedLockName","restState","editorSettings","settings","postAutosavingLock","renderingMode","mode","deviceType","removedPanels","includes","panelName","blockInserterPanel","isOpen","listViewPanel","listViewToggleRef","LEAF_KEY","isShallowEqual","fromIndex","selector","getDependants","rootCache","normalizedGetDependants","clear","WeakMap","callSelector","cache","args","dependants","len","dependant","caches","isUniqueByDependants","head","createCache","getCache","lastDependants","next","prev","val","SVG","xmlns","viewBox","Path","EDIT_MERGE_PROPERTIES","Set","SAVE_POST_NOTICE_ID","TRASH_POST_NOTICE_ID","PERMALINK_POSTNAME_REGEX","ONE_MINUTE_IN_MS","AUTOSAVE_PROPERTIES","fillRule","getTemplatePartIcon","iconName","headerIcon","footerIcon","sidebarIcon","symbolFilledIcon","EMPTY_OBJECT","hasEditorUndo","createRegistrySelector","select","coreStore","hasUndo","hasEditorRedo","hasRedo","isEditedPostNew","getCurrentPost","status","hasChangedContent","getPostEdits","isEditedPostDirty","getCurrentPostType","getCurrentPostId","hasEditsForEntityRecord","hasNonPostEntityChanges","dirtyEntityRecords","__experimentalGetDirtyEntityRecords","some","entityRecord","kind","isCleanNewPost","getRawEntityRecord","getCurrentTemplateId","getCurrentPostRevisionsCount","_getCurrentPost$_link","_links","count","getCurrentPostLastRevisionId","_getCurrentPost$_link2","getEntityRecordEdits","getCurrentPostAttribute","attributeName","post","getNestedEditedPostProperty","createSelector","edits","getEditedPostAttribute","getEditedPostContent","getAutosaveAttribute","currentUserId","getCurrentUser","autosave","getAutosave","getEditedPostVisibility","isCurrentPostPending","isCurrentPostPublished","currentPost","isInTheFuture","Date","Number","getDate","date","isCurrentPostScheduled","isEditedPostPublishable","isEditedPostSaveable","isSavingPost","isEditedPostEmpty","Platform","OS","record","getEditedEntityRecord","content","blocks","blockName","getDefaultBlockName","getFreeformContentHandlerName","isEditedPostAutosaveable","isPostAutosavingLocked","hasFetchedAutosave","hasFetchedAutosaves","field","isEditedPostBeingScheduled","checkedDate","isEditedPostDateFloating","modified","isDeletingPost","isSavingNonPostEntityChanges","entitiesBeingSaved","__experimentalGetEntitiesBeingSaved","didPostSaveRequestSucceed","getLastEntitySaveError","didPostSaveRequestFail","isAutosavingPost","Boolean","isAutosave","isPreviewingPost","isPreview","getEditedPostPreviewLink","previewLink","addQueryArgs","preview","featuredImageId","_thumbnail_id","getSuggestedPostFormat","blockEditorStore","getBlocks","provider","attributes","providerNameSlug","__unstableSerializeAndClean","isPublishingPost","isPermalinkEditable","permalinkTemplate","test","getPermalink","permalinkParts","getPermalinkParts","prefix","postName","suffix","getEditedPostSlug","cleanForSlug","split","isPostLocked","isPostSavingLocked","isPostLockTakeover","isTakeover","getPostLockUser","user","getActivePostLock","activePostLock","canUserUseUnfilteredHTML","isPublishSidebarEnabled","preferencesStore","getEditorBlocks","parse","isEditorPanelRemoved","isEditorPanelEnabled","inactivePanels","isEditorPanelOpened","openPanels","getEditorSelectionStart","deprecated","since","alternative","selectionStart","getEditorSelectionEnd","selectionEnd","getEditorSelection","__unstableIsEditorReady","getEditorSettings","getRenderingMode","getDeviceType","isListViewOpened","isInserterOpened","getEditorMode","_select$get","getStateBeforeOptimisticTransaction","hint","inSomeHistory","getBlockEditorSelector","version","getBlockName","isBlockValid","getBlockAttributes","getBlock","getClientIdsOfDescendants","getClientIdsWithDescendants","getGlobalBlockCount","getBlocksByClientId","getBlockCount","getBlockSelectionStart","getBlockSelectionEnd","getSelectedBlockCount","hasSelectedBlock","getSelectedBlockClientId","getSelectedBlock","getBlockRootClientId","getBlockHierarchyRootClientId","getAdjacentBlockClientId","getPreviousBlockClientId","getNextBlockClientId","getSelectedBlocksInitialCaretPosition","getMultiSelectedBlockClientIds","getMultiSelectedBlocks","getFirstMultiSelectedBlockClientId","getLastMultiSelectedBlockClientId","isFirstMultiSelectedBlock","isBlockMultiSelected","isAncestorMultiSelected","getMultiSelectedBlocksStartClientId","getMultiSelectedBlocksEndClientId","getBlockOrder","getBlockIndex","isBlockSelected","hasSelectedInnerBlock","isBlockWithinSelection","hasMultiSelection","isMultiSelecting","isSelectionEnabled","getBlockMode","isTyping","isCaretWithinFormattedText","getBlockInsertionPoint","isBlockInsertionPointVisible","isValidTemplate","getTemplate","getTemplateLock","canInsertBlockType","getInserterItems","hasInserterItems","getBlockListSettings","__experimentalGetDefaultTemplateTypes","defaultTemplateTypes","__experimentalGetDefaultTemplatePartAreas","areas","defaultTemplatePartAreas","item","icon","__experimentalGetDefaultTemplateType","slug","_Object$values$find","templateTypes","find","__experimentalGetTemplateInfo","description","title","area","defaultTitle","defaultDescription","templateTitle","rendered","layout","getPostTypeLabel","currentPostType","getPostType","labels","singular_name","postKey","isPostNew","localAutosaveClear","sessionStorage","removeItem","setupEditor","dispatch","setEditedPost","synchronizeBlocksWithTemplate","resetEditorBlocks","__unstableShouldCreateUndoLevel","edit","_post$key$raw","editPost","__experimentalTearDownEditor","resetPost","updatePost","setupEditorState","registry","editEntityRecord","savePost","undoIgnore","previousRecord","getEntityRecordNonTransientEdits","saveEntityRecord","error","applyFilters","Promise","resolve","catch","data","code","publishStatus","isPublished","messages","publish","private","future","noticeMessage","message","getNotificationArgumentsForSaveFail","noticesStore","createErrorNotice","updatedRecord","_postType$viewable","previousPost","willPublish","willTrash","isDraft","shouldShowLink","viewable","item_trashed","item_reverted_to_draft","item_published","item_published_privately","item_scheduled","item_updated","actions","view_item","url","link","getNotificationArgumentsForSaveSuccess","resolveSelect","createSuccessNotice","__unstableMarkLastChangeAsPersistent","refreshPost","trashPost","postTypeSlug","removeNotice","rest_base","restBase","rest_namespace","restNamespace","apiFetch","path","method","local","excerpt","setItem","JSON","stringify","post_title","localAutosaveSet","__unstableSaveForPreview","forceIsAutosaveable","redo","undo","createUndoLevel","updatePostLock","enablePublishSidebar","disablePublishSidebar","lockPostSaving","unlockPostSaving","lockPostAutosaving","unlockPostAutosaving","selection","__unstableCreateUndoLevel","blocksForSerialization","updateEditorSettings","setRenderingMode","clearSelectedBlock","setDeviceType","toggleEditorPanelEnabled","_registry$select$get","updatedInactivePanels","filter","invactivePanelName","toggleEditorPanelOpened","_registry$select$get2","updatedOpenPanels","openPanelName","removeEditorPanel","setIsInserterOpened","setIsListViewOpened","toggleDistractionFree","isDistractionFree","batch","createInfoNotice","onClick","toggle","switchEditorMode","speak","getBlockEditorAction","resetBlocks","receiveBlocks","updateBlock","updateBlockAttributes","selectBlock","startMultiSelect","stopMultiSelect","multiSelect","toggleSelection","replaceBlocks","replaceBlock","moveBlocksDown","moveBlocksUp","moveBlockToPosition","insertBlock","insertBlocks","showInsertionPoint","hideInsertionPoint","setTemplateValidity","synchronizeTemplate","mergeBlocks","removeBlocks","removeBlock","toggleBlockMode","startTyping","stopTyping","enterFormattedText","exitFormattedText","insertDefaultBlock","updateBlockListSettings","setCurrentTemplateId","createTemplate","savedTemplate","showBlockTypes","blockNames","newBlockNames","hideBlockTypes","existingBlockNames","mergedBlockNames","EMPTY_INSERTION_POINT","rootClientId","insertionIndex","filterValue","getInsertionPoint","postContentClientId","getBlocksByName","getListViewToggleRef","storeConfig","reducer","selectors","store","createReduxStore","register","registerPrivateActions","privateActions","registerPrivateSelectors","privateSelectors","sourceAttributes","useSelect","editorStore","context","metaKey","meta","setMeta","useEntityProp","placeholder","metaValue","updateValue","newValue","registerBlockBindingsSource","blocksStore","postMeta","patternOverrides","getUserLabel","avatar","avatar_urls","className","alt","src","Fragment","addFilter","_settings$attributes","metaAttributes","fromEntries","entries","source","attributeKey","createHigherOrderComponent","BlockEdit","setAttributes","mergedAttributes","useMemo","nextAttributes","nextMeta","createWithMetaAttributeSource","triggerPrefix","useItems","users","getUsers","search","encodeURIComponent","getOptionCompletion","completers","userAutocompleter","useSetPatternBindings","ResetOverridesControl","PATTERN_TYPES","PARTIAL_SYNCING_SUPPORTED_BLOCKS","patternsPrivateApis","withPatternOverrideControls","isSupportedBlock","BindingUpdater","isSelected","ControlsWithStoreSubscription","blockEditingMode","useBlockEditingMode","isEditingPattern","bindings","metadata","hasPatternBindings","binding","shouldShowResetOverridesControl","EditorKeyboardShortcuts","isModeToggleDisabled","useDispatch","useShortcut","isDisabled","event","preventDefault","AutosaveMonitor","super","needsAutosave","isDirty","isAutosaveable","disableIntervalChecks","setAutosaveTimer","prevProps","editsReference","interval","clearTimeout","timerId","isAutosaving","timeout","autosaveTimerHandler","compose","withSelect","ownProps","getReferenceByDistinctEdits","autosaveInterval","withDispatch","TYPE_LABELS","wp_pattern","wp_navigation","wp_template","wp_template_part","ICONS","wp_block","navigationIcon","TEMPLATE_POST_TYPES","GLOBAL_POST_TYPES","MotionButton","motion","Button","DocumentBar","_ICONS$postType","isResolving","templateIcon","onNavigateToPreviousEntityRecord","getTemplateInfo","isResolvingSelector","_postType","_postId","_document","_templateInfo","open","openCommandCenter","commandsStore","isReducedMotion","useReducedMotion","isNotFound","pageIcon","isTemplate","isGlobalEntity","hasBackButton","mounted","useRef","useEffect","classnames","AnimatePresence","isRTL","chevronRightSmall","chevronLeftSmall","stopPropagation","size","initial","opacity","transform","animate","exit","transition","duration","Text","div","BlockIcon","as","sprintf","displayShortcut","primary","TableOfContentsItem","level","href","onSelect","toLowerCase","emptyHeadingContent","incorrectLevelContent","singleH1Headings","multipleH1Headings","EmptyOutlineIllustration","fill","Rect","rx","Line","x1","y1","x2","y2","stroke","y","computeOutlineHeadings","flatMap","block","isEmpty","isEmptyHeading","innerBlocks","heading","trim","DocumentOutline","isTitleSupported","hasOutlineItemsDisabled","_postType$supports$ti","supports","headings","prevHeadingLevel","titleNode","querySelector","hasTitle","hasMultipleH1","reduce","acc","DocumentOutlineItem","isIncorrectLevel","clientId","getTextContent","html","DocumentOutlineCheck","hasHeadings","registerShortcut","keyboardShortcutsStore","category","keyCombination","modifier","character","aliases","isAppleOS","BlockEditorKeyboardShortcuts","Register","shortcut","primaryShift","undoIcon","redoIcon","resetTemplateValidity","Notice","isDismissible","confirmSynchronization","confirm","notices","getNotices","dismissibleNotices","nonDismissibleNotices","NoticeList","onRemove","TemplateValidationNotice","MAX_VISIBLE_NOTICES","EditorSnackbars","snackbarNotices","slice","SnackbarList","EntityRecordItem","checked","entityRecordTitle","PanelRow","CheckboxControl","__nextHasNoMarginBottom","decodeEntities","getGlobalStylesChanges","GlobalStylesContext","blockEditorPrivateApis","GlobalStylesDescription","currentEditorGlobalStyles","useContext","savedRecord","getEntityRecord","globalStylesChanges","maxResults","change","EntityDescription","entity","getEntityDescription","EntityTypeList","list","unselectedEntities","setUnselectedEntities","firstRecord","entityLabel","getEntityConfig","PanelBody","initialOpen","property","elt","useIsDirty","editedEntities","siteEdits","siteEntityConfig","_siteEntityConfig$met","editedEntitiesWithoutSite","siteEntityLabels","editedSiteEntities","_setUnselectedEntities","useState","PUBLISH_ON_SAVE_ENTITIES","identity","EntitiesSavedStates","close","renderDialog","isDirtyProps","EntitiesSavedStatesExtensible","additionalPrompt","onSave","saveEnabled","saveEnabledProp","saveLabel","saveButtonRef","saveEditedEntityRecord","__experimentalSaveSpecifiedEntityEdits","saveSpecifiedEntityEdits","partitionedSavables","site","siteSavables","templateSavables","templatePartSavables","contentSavables","sortedPartitionedSavables","homeUrl","getUnstableBase","home","dismissPanel","useCallback","saveDialogRef","saveDialogProps","useDialog","onClose","dialogLabel","useInstanceId","dialogDescription","role","Flex","gap","FlexItem","isBlock","variant","disabled","__experimentalIsFocusable","saveCheckedEntities","saveNoticeId","entitiesToSave","siteItemsToSave","pendingSavedRecords","typeToPublish","all","then","createInterpolateElement","_n","strong","getContent","CopyButton","text","useCopyToClipboard","ErrorBoundary","componentDidCatch","doAction","getDerivedStateFromError","stack","Warning","requestIdleCallback","requestAnimationFrame","hasStorageSupport","ifCondition","hasSessionStorageSupport","deferredAutosave","hasRemoteAutosave","createWarningNotice","localAutosave","getItem","localAutosaveGet","editsContent","editsWithoutContent","useAutosaveNotice","didError","lastIsDirty","lastIsAutosaving","wasEditedPostNew","usePrevious","prevPostId","useAutosavePurge","localAutosaveInterval","supportsPageAttributes","supportKeys","isSupported","PageAttributesOrder","order","_select$getEditedPost","orderInput","setOrderInput","FlexBlock","NumberControl","__next40pxDefaultSize","newOrder","isInteger","menu_order","labelPosition","onBlur","PageAttributesOrderWithChecks","PostTypeSupportCheck","buildTermsTree","flatTerms","flatTermsWithParentAndChildren","term","parent","termsByParent","fillWithChildren","terms","unescapeString","unescapeTerm","unescapeTerms","getTitle","getItemPriority","searchValue","normalizedName","normalizedSearch","startsWith","Infinity","fieldValue","setFieldValue","isHierarchical","parentPostId","parentPostTitle","pageItems","_pType$hierarchical","getEntityRecords","pageId","pType","postIsHierarchical","hierarchical","query","per_page","exclude","parent_exclude","orderby","_fields","parentPost","parentOptions","getOptionsFromTree","tree","treeNode","repeat","rawName","sort","flat","opts","optsHasParent","unshift","ComboboxControl","onFilterValueChange","debounce","inputValue","selectedPostId","PANEL_NAME","_postType$labels$attr","isEnabled","isOpened","PageAttributesCheck","opened","onToggle","onTogglePanel","PageAttributesParent","clipRule","DEFAULT_TITLE","CreateNewTemplateModal","defaultBlockTemplate","onNavigateToEntityRecord","getTemplateId","setTitle","isBusy","setIsBusy","cancel","Modal","onRequestClose","onSubmit","newTemplateContent","serialize","createBlock","tagName","inherit","newTemplate","VStack","spacing","TextControl","help","HStack","justify","useEditedPostContext","useAllowSwitchingTemplates","siteSettings","templates","isPostsPage","page_for_posts","isFrontPage","page_on_front","useTemplates","post_type","useAvailableTemplates","currentTemplateSlug","useCurrentTemplateSlug","allowSwitchingTemplate","is_custom","entityTemplate","POPOVER_PROPS","placement","PostTemplateToggle","templateSlug","supportsTemplateMode","availableTemplates","canUser","PostTemplateDropdownContent","_options$find","_selectedOption$value","fetchedTemplates","selectedTemplateSlug","canCreate","canEdit","currentTemplateId","canCreateTemplates","_currentTemplateId","selectedOption","option","isCreateModalOpen","setIsCreateModalOpen","InspectorPopoverHeader","addTemplate","SelectControl","hideLabelFromVision","Dropdown","popoverProps","focusOnMount","renderToggle","renderContent","PreferenceBaseOption","preferencesPrivateApis","isRemoved","isChecked","Fill","Slot","createSlotFill","EnablePluginDocumentSettingPanelOption","EnablePanelOption","PluginDocumentSettingPanel","pluginName","usePluginContext","SwapTemplateButton","showModal","setShowModal","MenuItem","overlayClassName","isFullScreen","TemplatesList","templatesAsPatterns","shownTemplates","useAsyncList","BlockPatternsList","blockPatterns","shownPatterns","onClickPattern","ResetDefaultTemplate","CreateNewTemplate","BlockThemeControl","isTemplateHidden","hasGoBack","_getEditorSettings","editedRecord","hasResolved","useEntityRecord","notificationAction","DropdownMenu","toggleProps","MenuGroup","check","PostPanelRow","PostTemplatePanel","isBlockTheme","__unstableIsBlockBasedTheme","isVisible","_select$canUser","canViewTemplates","_select$canUser2","ClassicThemeControl","BASE_QUERY","AUTHORS_QUERY","who","useAuthorsQuery","authorId","authors","postAuthor","getUser","_authorId","authorOptions","fetchedAuthors","author","findIndex","PostAuthorCombobox","postAuthorId","allowReset","PostAuthorSelect","PostAuthorCheck","hasAssignAuthorAction","hasAuthors","_post$_links$wpActio","PostAuthorForm","commentStatus","onToggleComments","comment_status","pingStatus","onTogglePingback","ping_status","PostComments","PostPingbacks","TextareaControl","ExternalLink","PluginPostExcerpt","PostExcerptPanel","PostExcerptCheck","toggleExcerptPanel","fills","PostExcerptForm","getThemeSupports","themeSupports","_themeSupports$key","supported","ThemeSupportCheck","ALLOWED_MEDIA_TYPES","DEFAULT_FEATURE_IMAGE_LABEL","DEFAULT_SET_FEATURE_IMAGE_LABEL","instructions","applyWithSelect","getMedia","media","currentPostId","applyWithDispatch","noticeOperations","onUpdateImage","image","featured_media","onDropImage","filesList","getSettings","mediaUpload","allowedTypes","onFileChange","onError","removeAllNotices","onRemoveImage","withNotices","withFilters","noticeUI","toggleRef","isLoading","setIsLoading","mediaSourceUrl","_media$media_details$","_media$media_details$2","defaultSize","media_details","sizes","mediaWidth","mediaHeight","source_url","fallbackSize","getMediaDetails","onDropFiles","isBlobURL","PostFeaturedImageCheck","alt_text","full","file","MediaUploadCheck","fallback","MediaUpload","featured_image","unstableFeaturedImageFlow","modalClass","Spinner","set_featured_image","focus","DropZone","onFilesDrop","PostFeaturedImagePanel","withPanelBody","_postType$labels$feat","PostFeaturedImage","disablePostFormats","POST_FORMATS","caption","normalizedA","normalizedB","PostFormat","postFormatSelectorId","postFormat","suggestedFormat","supportedFormats","_postFormat","formats","format","suggestion","onUpdatePostFormat","PostFormatCheck","lastRevisionId","revisionsCount","PostLastRevisionCheck","revision","backup","iconPosition","PostLastRevision","PostLockedModal","hookName","postLockUtils","releasePostLock","FormData","append","unlockNonce","navigator","sendBeacon","ajaxUrl","xhr","XMLHttpRequest","send","addAction","post_id","received","lock_error","avatar_src_2x","new_lock","removeAction","userDisplayName","userAvatar","unlockUrl","lockKey","_wpnonce","nonce","allPostsUrl","allPostsLabel","shouldCloseOnClickOutside","shouldCloseOnEsc","alignment","PreviewLink","hasPublishAction","PostPendingStatusCheck","togglePendingStatus","PostPreviewButton","textContent","onPreview","currentPostLink","isSaveable","isViewable","editor","targetId","target","previewWindow","targetDocument","markup","renderToString","write","writeInterstitialMessage","VisuallyHidden","isBeingScheduled","isSaving","isPublishing","noop","PostPublishButton","buttonNode","createRef","createOnClick","closeEntitiesSavedStates","entitiesSavedStatesCallback","timeoutID","callback","setEntitiesSavedStatesCallback","savedEntities","forceIsDirty","isPublishable","isAutoSaving","isToggle","onStatusChange","visibility","isButtonDisabled","isToggleDisabled","buttonProps","onClickButton","onClickToggle","toggleChildren","buttonChildren","PublishButtonLabel","componentProps","componentChildren","visibilityOptions","public","info","password","PostVisibility","instanceId","hasPassword","setHasPassword","showPrivateConfirmDialog","setShowPrivateConfirmDialog","PostVisibilityChoice","setPublic","setPrivate","setPasswordProtected","htmlFor","ConfirmDialog","onConfirm","confirmPrivate","onCancel","handleDialogCancel","PostVisibilityLabel","usePostVisibilityLabel","_typeof","iterator","requiredArgs","required","TypeError","toDate","argument","argStr","getTime","console","warn","NaN","startOfMonth","dirtyDate","setDate","setHours","endOfMonth","month","getMonth","setFullYear","getFullYear","pow","millisecondsInMinute","millisecondsInHour","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseDateUnit","parseInt","parseTimeUnit","daysInMonths","isLeapYearIndex","year","PostSchedule","postDate","previewedMonth","setPreviewedMonth","eventsByPostType","after","toISOString","before","events","eventDate","is12HourTime","time","reverse","PublishDateTimePicker","currentDate","is12Hour","onMonthPreviewed","_options$additionalDi","additionalDigits","dirtyNumber","ceil","floor","toInteger","RangeError","dateStrings","dateString","timeString","substr","token","exec","splitDateString","parseYearResult","regex","captures","restDateString","century","parseYear","isWeekDate","dayOfYear","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","diff","getUTCDay","setUTCDate","getUTCDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","max","parseDate","offset","timestamp","hours","minutes","seconds","validateTime","parseTime","result","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","sign","_hours","validateTimezone","parseTimezone","parseISO","PostScheduleLabel","usePostScheduleLabel","isFloating","getFullPostScheduleLabel","dateAttribute","now","getTimezoneOffset","isTimezoneSameAsSiteTimezone","isSameDay","dateI18n","tomorrow","getPostScheduleLabel","timezoneAbbreviation","abbr","offsetFormatted","getTimezoneAbbreviation","formattedDate","left","right","MIN_MOST_USED_TERMS","DEFAULT_QUERY","hide_empty","MostUsedTerms","taxonomy","_terms","showTerms","mostUsedTerms","BaseControl","VisualLabel","most_used","EMPTY_ARRAY","MAX_TERMS_SUGGESTIONS","isSameTermName","termA","termB","termNamesToIds","names","termName","FlatTermSelector","_taxonomy$labels$add_","_taxonomy$labels$sing2","setValues","setSearch","debouncedSearch","useDebounce","termIds","hasAssignAction","hasCreateAction","hasResolvedTerms","_post$_links","_post$_links2","getTaxonomy","hasFinishedResolution","_taxonomy","_termIds","include","searchResults","newValues","suggestions","onUpdateTerms","newTermIds","newTermLabel","add_new_item","singularName","termAddedLabel","termRemovedLabel","removeTermLabel","FormTokenField","termNames","availableTerms","uniqueTerms","newTermNames","newTerm","throwOnError","term_id","findOrCreateTerm","newTerms","newAvailableTerms","concat","onInputChange","maxSuggestions","added","removed","_taxonomy$labels$sing","defaultName","termAddedMessage","TagsPanel","panelBodyTitle","MaybeTagsPanel","hasTags","isPostTypeSupported","tagsTaxonomy","_isPostTypeSupported","types","areTagsFetched","tags","hadTagsWhenOpeningThePanel","getSuggestion","suggestedPostFormat","PostFormatSuggestion","suggestionText","PostFormatPanel","currentPostFormat","_select$getThemeSuppo","MIN_TERMS_COUNT_FOR_FILTER","HierarchicalTermSelector","_taxonomy$labels$sear","_taxonomy$name","adding","setAdding","formName","setFormName","formParent","setFormParent","showForm","setShowForm","setFilterValue","filteredTermsTree","setFilteredTermsTree","debouncedSpeak","loading","availableTermsTree","termsTree","treeHasSelection","termTree","child","newTermTree","termOrChildIsSelected","termASelected","termBSelected","sortBySelected","renderTerms","renderedTerms","termId","labelWithFallback","labelProperty","fallbackIsCategory","fallbackIsNotCategory","_taxonomy$labels$labe","newTermButtonLabel","parentSelectLabel","noParentOption","newTermSubmitLabel","filterLabel","search_items","groupLabel","showFilter","direction","newFilteredTermsTree","matchTermsForFilter","originalTerm","getFilterMatcher","getResultCount","resultCount","resultsFoundMessage","tabIndex","onToggleForm","existingTerm","findTerm","TreeSelect","noOptionLabel","parentId","selectedId","hasNoCategory","categoriesTaxonomy","defaultCategoryId","default_category","defaultCategory","postTypeSupportsCategories","categories","shouldShowPanel","setShouldShowPanel","flattenBlocks","Image","img","onKeyDown","scale","objectFit","borderRadius","cursor","whileHover","isUploading","setIsUploading","editorBlocks","externalImages","display","flexWrap","fetch","response","blob","reject","finally","isRequestingSiteIcon","siteIconUrl","siteTitle","siteHome","siteData","site_icon_url","filterURLForDisplay","prePublishTitle","prePublishBodyText","siteIcon","Icon","wordpress","MaybeUploadMedia","MaybePostFormatPanel","MaybeCategoryPanel","POSTNAME","PAGENAME","onCopy","PostPublishPanelPostpublish","showCopyConfirmation","onSelectInput","postLink","dismissCopyConfirmation","isScheduled","postLabel","viewPostLabel","addNewPostLabel","permalink_template","getFuturePostUrl","addLink","postPublishNonLinkHeader","readOnly","safeDecodeURIComponent","onFocus","PostPublishPanel","isPostTypeViewable","onTogglePublishSidebar","PostPublishExtension","PrePublishExtension","additionalProps","propsForPanel","isPublishedOrScheduled","isPrePublish","isPostPublish","closeSmall","PostPublishPanelPrepublish","withFocusReturn","withConstrainedTabbing","cloneElement","PostSavedState","forceSavedMessage","setForceSavedMessage","isLargeViewport","useViewportMatch","isNew","isPending","showIconLabels","wasSaving","timeoutId","shortLabel","isSaved","isSavedState","getAnimateClassName","cloudUpload","cloud","PostScheduleCheck","_select$getCurrentPos","PostSchedulePanel","popoverAnchor","setPopoverAnchor","anchor","fullLabel","contentClassName","showTooltip","PostScheduleForm","PostSlugCheck","PostSlug","postSlug","postTitle","postID","editedSlug","setSlug","onUpdateSlug","autoComplete","spellCheck","PostStickyCheck","hasStickyAction","PostSticky","postSticky","sticky","PostSwitchToDraftButton","showConfirmDialog","setShowConfirmDialog","alertMessage","flexGrow","justifyContent","handleConfirm","PostSyncStatus","syncStatus","wp_pattern_sync_status","taxonomyWrapper","taxonomies","getTaxonomies","show_ui","TaxonomyComponent","PostTaxonomiesCheck","TaxonomyPanel","taxonomyMenuName","menu_name","PostTaxonomiesForm","PostTextEditor","_type","_id","Function","Textarea","dir","DEFAULT_CLASSNAMES","REGEXP_NEWLINES","usePostTitleFocus","forwardedRef","_isCleanNewPost","useImperativeHandle","defaultView","ownerDocument","activeElement","usePostTitle","newTitle","_","hasFixedToolbar","titlePlaceholder","_hasFixedToolbar","setIsSelected","focusRef","onUpdate","setSelection","onInsertBlockAfter","onUnselect","decodedPlaceholder","richTextRef","useRichText","start","end","onSelectionChange","newStart","newEnd","sel","__unstableDisableFormats","useMergeRefs","contentEditable","keyCode","ENTER","onKeyPress","onPaste","clipboardData","plainText","getData","error1","error2","log","pasteHandler","HTML","firstBlock","contentNoHTML","stripHTML","insert","toHTMLString","PostTrash","isDeleting","isDestructive","resource","canUserDelete","PostURL","isEditable","permalinkPrefix","permalinkSuffix","forceEmptyField","setForceEmptyField","PostURLCheck","PostURLLabel","usePostURLLabel","PostURLPanel","PostURLToggle","PostVisibilityCheck","WordCount","wordCountType","wordCount","AVERAGE_READING_RATE","TimeToRead","minutesToRead","minutesToReadString","span","CharacterCount","characterCount","headingCount","paragraphCount","numberOfBlocks","repositionDropdown","hasBlocks","tooltipPosition","TableOfContentsPanel","UnsavedChangesWarning","warnIfUnsavedChanges","returnValue","WrappedComponent","withRegistry","useSubRegistry","subRegistry","setSubRegistry","newRegistry","createRegistry","blockEditorStoreConfig","registerStore","RegistryProvider","getExternalLink","getExternalLinkAttributes","getOpenverseCaption","foreign_landing_url","foreignLandingUrl","creator","creator_url","creatorUrl","license","license_version","licenseVersion","license_url","licenseUrl","fullLicense","getOpenverseLicense","licenseName","_creator","_caption","coreMediaFetch","getMediaItems","orderBy","mediaItem","previewUrl","medium","mediaType","media_type","finalQuery","mature","excluded_source","mapFromInserterMediaRequest","URL","queryKey","searchParams","headers","json","results","sourceId","thumbnail","getReportUrl","isExternalResource","additionalData","maxUploadFileSize","wpAllowedMimeTypes","allowedMimeTypes","wp_id","postData","uploadMedia","EMPTY_BLOCKS_LIST","BLOCK_EDITOR_SETTINGS","_settings$__experimen","_settings$__experimen2","allowRightClickOverrides","blockTypes","focusMode","keepCaretInsideBlock","reusableBlocks","hasUploadPermissions","hiddenBlockTypes","canUseUnfilteredHTML","userCanCreatePages","pageOnFront","pageForPosts","userPatternCategories","restBlockPatternCategories","_canUser","isWeb","getUserPatternCategories","getBlockPatternCategories","getBlockTypes","settingsBlockPatterns","__experimentalAdditionalBlockPatterns","__experimentalBlockPatterns","settingsBlockPatternCategories","__experimentalAdditionalBlockPatternCategories","__experimentalBlockPatternCategories","postTypes","blockPatternCategories","createPageEntity","allowedBlockTypes","forceDisableFocusMode","privateApis","selectBlockPatternsKey","getBlockPatternsForPostType","__experimentalReusableBlocks","__experimentalUserPatternCategories","__experimentalFetchLinkSuggestions","searchOptions","fetchLinkSuggestions","inserterMediaCategories","__experimentalFetchRichUrlData","fetchUrlData","__experimentalCanUserUseUnfilteredHTML","__experimentalUndo","outlineMode","__experimentalCreatePageEntity","__experimentalUserCanCreatePages","__experimentalPreferPatternsOnRoot","templateLock","__experimentalSetIsInserterOpened","PAGE_CONTENT_BLOCKS","DisableNonPageContentBlocks","contentIds","getBlockParents","every","parentClientId","parentBlockName","setBlockEditingMode","unsetBlockEditingMode","contentId","useDisableNonPageContentBlocks","NavigationBlockEditingMode","blockClientId","POST_TYPES_ALLOWING_POST_CONTENT_TEMPLATE_PART","useEditorCommandLoader","editorMode","isListViewOpen","showBlockBreadcrumbs","isTopToolbar","isFocusMode","isPreviewMode","isCodeEditingEnabled","isRichEditingEnabled","_get","_getPostType$viewable","__unstableIsPreviewMode","allowSwitchEditorMode","commands","listView","external","BlockRemovalWarningModal","TEMPLATE_BLOCKS","BLOCK_REMOVAL_RULES","removedBlocks","BlockRemovalWarnings","removalRulesForPostType","rule","rules","ExperimentalBlockEditorProvider","PatternsMenuItems","editPatternsPrivateApis","NON_CONTEXTUAL_POST_TYPES","ExperimentalEditorProvider","withRegistryProvider","recovery","initialEdits","BlockEditorProviderComponent","__unstableTemplate","shouldRenderTemplate","rootLevelPost","defaultBlockContext","isReady","blockEditorSettings","useBlockEditorSettings","onInput","postBlocks","useEntityBlockEditor","templateBlocks","onInputTemplate","onChangeTemplate","maybeNavigationBlocks","useBlockEditorProps","useLayoutEffect","editLink","_settings$defaultRend","canInsert","blockType","getBlockParentsByBlockName","removeFilter","useHideBlocksFromInserter","useCommandLoader","hook","EntityProvider","BlockContextProvider","BlockEditorProvider","deprecateComponent","Wrapped","staticsToHoist","staticName","deprecateFunction","RichText","RootRichText","Autocomplete","RootAutocomplete","AlignmentToolbar","RootAlignmentToolbar","BlockAlignmentToolbar","RootBlockAlignmentToolbar","BlockControls","RootBlockControls","RootBlockEdit","RootBlockEditorKeyboardShortcuts","BlockFormatControls","RootBlockFormatControls","RootBlockIcon","BlockInspector","RootBlockInspector","BlockList","RootBlockList","BlockMover","RootBlockMover","BlockNavigationDropdown","RootBlockNavigationDropdown","BlockSelectionClearer","RootBlockSelectionClearer","BlockSettingsMenu","RootBlockSettingsMenu","BlockTitle","RootBlockTitle","BlockToolbar","RootBlockToolbar","ColorPalette","RootColorPalette","ContrastChecker","RootContrastChecker","CopyHandler","RootCopyHandler","DefaultBlockAppender","RootDefaultBlockAppender","FontSizePicker","RootFontSizePicker","Inserter","RootInserter","InnerBlocks","RootInnerBlocks","InspectorAdvancedControls","RootInspectorAdvancedControls","InspectorControls","RootInspectorControls","PanelColorSettings","RootPanelColorSettings","PlainText","RootPlainText","RichTextShortcut","RootRichTextShortcut","RichTextToolbarButton","RootRichTextToolbarButton","__unstableRichTextInputEvent","__unstableRootRichTextInputEvent","MediaPlaceholder","RootMediaPlaceholder","RootMediaUpload","RootMediaUploadCheck","MultiSelectScrollIntoView","RootMultiSelectScrollIntoView","NavigableToolbar","RootNavigableToolbar","ObserveTyping","RootObserveTyping","SkipToSelectedBlock","RootSkipToSelectedBlock","URLInput","RootURLInput","URLInputButton","RootURLInputButton","URLPopover","RootURLPopover","RootWarning","WritingFlow","RootWritingFlow","createCustomColorsHOC","rootCreateCustomColorsHOC","getColorClassName","rootGetColorClassName","getColorObjectByAttributeValues","rootGetColorObjectByAttributeValues","getColorObjectByColorValue","rootGetColorObjectByColorValue","getFontSize","rootGetFontSize","getFontSizeClass","rootGetFontSizeClass","withColorContext","rootWithColorContext","withColors","rootWithColors","withFontSizes","rootWithFontSizes","VisualEditorGlobalKeyboardShortcuts","TextEditorGlobalKeyboardShortcuts","plugin","urlCleanForSlug","EditTemplateBlocksNotification","contentRef","isDialogOpen","setIsDialogOpen","lastNoticeId","handleClick","classList","contains","isNoticeAlreadyShowing","notice","handleDblClick","canvas","confirmButtonText","LayoutStyle","useLayoutClasses","useLayoutStyles","ExperimentalBlockCanvas","BlockCanvas","useFlashEditableBlocks","DESIGN_POST_TYPES","getPostContentAttributes","nestedPostContent","checkForPostContentAtRootLevel","useShowBlockTools","ListViewOutline","Tabs","componentsPrivateApis","MODES","onItemChange","BlockManagerCategory","filteredBlockTypes","toggleVisible","nextIsChecked","toggleAllVisible","checkedBlockNames","titleId","isAllChecked","isIndeterminate","indeterminate","BlockTypesChecklist","getCategories","hasBlockSupport","isMatchingSearchTerm","hiddenBlock","registeredBlock","numberOfHiddenBlocks","enableAllBlockTypes","SearchControl","nextSearch","PreferencesModal","PreferencesModalTabs","PreferencesModalSection","PreferenceToggleControl","DocumentTools","disableBlockTools","listViewLabel","inserterButton","listViewShortcut","getShortcutRepresentation","isWideViewport","showFixedToolbar","toolbarAriaLabel","toggleListView","toggleInserter","longLabel","shouldUseKeyboardFocusShortcut","ToolbarItem","isPressed","onMouseDown","plus","ToolSelector","EditorHistoryUndo","EditorHistoryRedo","EditorCanvas","autoFocus","renderAppender","styles","disableIframe","iframeProps","postContentAttributes","editedPostTemplate","wrapperBlockName","wrapperUniqueId","showEditorPadding","isDesignPostType","_renderingMode","_wrapperBlockName","canEditTemplate","hasRootPaddingAwareAlignments","themeHasDisabledLayoutStyles","themeSupportsLayout","_settings","disableLayoutStyles","supportsLayout","__experimentalFeatures","useRootPaddingAwareAlignments","deviceStyles","useResizeCanvas","globalLayoutSettings","useSettings","fallbackLayout","newestPostContentAttributes","parseableContent","hasPostContentAtRootLevel","align","postContentLayoutClasses","blockListLayoutClass","postContentLayoutStyles","postContentLayout","contentSize","wideSize","blockListLayout","postEditorLayout","observeTypingRef","useTypingObserver","titleRef","localRef","typewriterRef","useTypewriter","shouldIframe","css","marginTop","PostTitle","RecursionProvider","uniqueId","dropZoneElement","__unstableDisableDropZone","InserterSidebar","insertionPoint","showMostUsedBlocks","isMobileViewport","TagName","inserterDialogRef","inserterDialogProps","libraryRef","focusSearch","Library","showInserterHelpPanel","shouldFocusBlock","__experimentalInsertionIndex","__experimentalFilterValue","ListViewSidebar","focusOnMountRef","useFocusOnMount","closeListView","closeOnEscape","ESCAPE","defaultPrevented","setDropZoneElement","tab","setTab","sidebarRef","tabsRef","listViewRef","listViewContainerRef","handleToggleListViewShortcut","currentTab","tabPanelFocus","tabbable","listViewApplicationFocus","handleSidebarFocus","tabName","selectOnMove","defaultTabId","TabList","Tab","tabId","TabPanel","focusable","ListView","ModeSwitcher","selectedMode","choices","choice","MenuItemsChoice","PostViewLink","hasLoaded","permalink","PreviewDropdown","_currentPostType","menuProps","deviceIcons","mobile","tablet","desktop","disableOpenOnArrowDown","extraSections","isActive","showBlockBreadcrumbsOption","setPreference","turnOffDistractionFree","sections","tabLabel","scope","featureName","PostTaxonomies","general","appearance","BlockManager","closeModal"],"sourceRoot":""}