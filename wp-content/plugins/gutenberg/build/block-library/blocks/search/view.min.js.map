{"version":3,"file":"./build/block-library/blocks/search/view.min.js","mappings":"MAGA,IAAIA,EAAsB,KAE1B,MAAMC,EAAc,sCAOpB,SAASC,EAAiBC,GACzB,KAAS,qBAAsBA,EAAQC,SACtC,MAAM,IAAIC,MAAO,8CAGlB,MAAMC,EAAYH,EAAQC,QAAQG,iBAClCJ,EAAQC,QAAQG,iBAAmBJ,EAAQG,UAC3CH,EAAQG,UAAYA,CACrB,CAQA,SAASE,EAAgBC,GACxB,OAAOA,EAAMC,cAAe,0BAC7B,CAQA,SAASC,EAAiBF,GACzB,OAAOA,EAAMC,cAAe,2BAC7B,CAOA,SAASE,EAAoBC,GAC5B,GAAOb,GAKY,WAAda,EAAMC,IAAmB,CAC7B,MAAML,EAAQT,EACde,IACAJ,EAAiBF,GAAQO,OAC1B,CACD,CAOA,SAASC,EAAkBJ,GACnBb,GAKFa,EAAMK,OAAOC,QAAS,sBAAyBnB,GACnDe,GAEF,CA4CA,SAASA,IACR,IAAOf,EACN,MAAM,IAAIK,MAAO,+CAElB,MAAMI,EAAQT,EACRoB,EAAcZ,EAAgBC,GAC9BY,EAAeV,EAAiBF,GAEtCY,EAAaC,KAAO,SACpBF,EAAYG,WAAa,OACzBH,EAAYI,UAAY,EACxBH,EAAaI,aAAe,QAC5BJ,EAAaK,aAAc,gBAAiBN,EAAYO,IACxDzB,EAAiBmB,GACjBZ,EAAMmB,UAAUC,IAAK5B,GAGrB6B,SAASC,oBAAqB,UAAWnB,EAAoB,CAC5DoB,SAAS,IAEVF,SAASC,oBAAqB,QAASd,EAAkB,CACxDe,SAAS,IAGVhC,EAAsB,IACvB,CAGA8B,SAASG,iBACR,SACEpB,IAED,MAAMJ,EAAQI,EAAMK,OAAOC,QAC1B,4CAOInB,GAAuBS,IAAUT,GACrCe,IAKAN,aAAiByB,iBACjBzB,EAAMmB,UAAUO,SAAUlC,IAlF7B,SAA4BQ,GAEtBT,GACJe,IAGD,MAAMK,EAAcZ,EAAgBC,GAC9BY,EAAeV,EAAiBF,GAEtCY,EAAaC,KAAO,SACpBF,EAAYG,WAAa,QACzBH,EAAYI,SAAW,EACvBH,EAAaI,aAAe,OAC5BJ,EAAae,gBAAiB,iBAC9BlC,EAAiBmB,GACjBZ,EAAMmB,UAAUS,OAAQpC,GAExBmB,EAAYJ,QAGZc,SAASG,iBAAkB,UAAWrB,EAAoB,CACzDoB,SAAS,IAEVF,SAASG,iBAAkB,QAAShB,EAAkB,CACrDe,SAAS,IAGVhC,EAAsBS,CACvB,CAwDG6B,CAAmB7B,EACpB,GAED,CAAEuB,SAAS,G","sources":["webpack://wp/./packages/block-library/build-module/search/@wordpress/block-library/src/search/view.js"],"sourcesContent":["/*eslint-env browser*/\n\n/** @type {?HTMLFormElement} */\nlet expandedSearchBlock = null;\n\nconst hiddenClass = 'wp-block-search__searchfield-hidden';\n\n/**\n * Toggles aria-label with data-toggled-aria-label.\n *\n * @param {HTMLElement} element\n */\nfunction toggleAriaLabel( element ) {\n\tif ( ! ( 'toggledAriaLabel' in element.dataset ) ) {\n\t\tthrow new Error( 'Element lacks toggledAriaLabel in dataset.' );\n\t}\n\n\tconst ariaLabel = element.dataset.toggledAriaLabel;\n\telement.dataset.toggledAriaLabel = element.ariaLabel;\n\telement.ariaLabel = ariaLabel;\n}\n\n/**\n * Gets search input.\n *\n * @param {HTMLFormElement} block Search block.\n * @return {HTMLInputElement} Search input.\n */\nfunction getSearchInput( block ) {\n\treturn block.querySelector( '.wp-block-search__input' );\n}\n\n/**\n * Gets search button.\n *\n * @param {HTMLFormElement} block Search block.\n * @return {HTMLButtonElement} Search button.\n */\nfunction getSearchButton( block ) {\n\treturn block.querySelector( '.wp-block-search__button' );\n}\n\n/**\n * Handles keydown event to collapse an expanded Search block (when pressing Escape key).\n *\n * @param {KeyboardEvent} event\n */\nfunction handleKeydownEvent( event ) {\n\tif ( ! expandedSearchBlock ) {\n\t\t// In case the event listener wasn't removed in time.\n\t\treturn;\n\t}\n\n\tif ( event.key === 'Escape' ) {\n\t\tconst block = expandedSearchBlock; // This is nullified by collapseExpandedSearchBlock().\n\t\tcollapseExpandedSearchBlock();\n\t\tgetSearchButton( block ).focus();\n\t}\n}\n\n/**\n * Handles keyup event to collapse an expanded Search block (e.g. when tabbing out of expanded Search block).\n *\n * @param {KeyboardEvent} event\n */\nfunction handleKeyupEvent( event ) {\n\tif ( ! expandedSearchBlock ) {\n\t\t// In case the event listener wasn't removed in time.\n\t\treturn;\n\t}\n\n\tif ( event.target.closest( '.wp-block-search' ) !== expandedSearchBlock ) {\n\t\tcollapseExpandedSearchBlock();\n\t}\n}\n\n/**\n * Expands search block.\n *\n * Inverse of what is done in collapseExpandedSearchBlock().\n *\n * @param {HTMLFormElement} block Search block.\n */\nfunction expandSearchBlock( block ) {\n\t// Make sure only one is open at a time.\n\tif ( expandedSearchBlock ) {\n\t\tcollapseExpandedSearchBlock();\n\t}\n\n\tconst searchField = getSearchInput( block );\n\tconst searchButton = getSearchButton( block );\n\n\tsearchButton.type = 'submit';\n\tsearchField.ariaHidden = 'false';\n\tsearchField.tabIndex = 0;\n\tsearchButton.ariaExpanded = 'true';\n\tsearchButton.removeAttribute( 'aria-controls' ); // Note: Seemingly not reflected with searchButton.ariaControls.\n\ttoggleAriaLabel( searchButton );\n\tblock.classList.remove( hiddenClass );\n\n\tsearchField.focus(); // Note that Chrome seems to do this automatically.\n\n\t// The following two must be inverse of what is done in collapseExpandedSearchBlock().\n\tdocument.addEventListener( 'keydown', handleKeydownEvent, {\n\t\tpassive: true,\n\t} );\n\tdocument.addEventListener( 'keyup', handleKeyupEvent, {\n\t\tpassive: true,\n\t} );\n\n\texpandedSearchBlock = block;\n}\n\n/**\n * Collapses the expanded search block.\n *\n * Inverse of what is done in expandSearchBlock().\n */\nfunction collapseExpandedSearchBlock() {\n\tif ( ! expandedSearchBlock ) {\n\t\tthrow new Error( 'Expected expandedSearchBlock to be defined.' );\n\t}\n\tconst block = expandedSearchBlock;\n\tconst searchField = getSearchInput( block );\n\tconst searchButton = getSearchButton( block );\n\n\tsearchButton.type = 'button';\n\tsearchField.ariaHidden = 'true';\n\tsearchField.tabIndex = -1;\n\tsearchButton.ariaExpanded = 'false';\n\tsearchButton.setAttribute( 'aria-controls', searchField.id ); // Note: Seemingly not reflected with searchButton.ariaControls.\n\ttoggleAriaLabel( searchButton );\n\tblock.classList.add( hiddenClass );\n\n\t// The following two must be inverse of what is done in expandSearchBlock().\n\tdocument.removeEventListener( 'keydown', handleKeydownEvent, {\n\t\tpassive: true,\n\t} );\n\tdocument.removeEventListener( 'keyup', handleKeyupEvent, {\n\t\tpassive: true,\n\t} );\n\n\texpandedSearchBlock = null;\n}\n\n// Listen for click events anywhere on the document so this script can be loaded asynchronously in the head.\ndocument.addEventListener(\n\t'click',\n\t( event ) => {\n\t\t// Get the ancestor expandable Search block of the clicked element.\n\t\tconst block = event.target.closest(\n\t\t\t'.wp-block-search__button-behavior-expand'\n\t\t);\n\n\t\t/*\n\t\t * If there is already an expanded search block and either the current click was not for a Search block or it was\n\t\t * for another block, then collapse the currently-expanded block.\n\t\t */\n\t\tif ( expandedSearchBlock && block !== expandedSearchBlock ) {\n\t\t\tcollapseExpandedSearchBlock();\n\t\t}\n\n\t\t// If the click was on or inside a collapsed Search block, expand it.\n\t\tif (\n\t\t\tblock instanceof HTMLFormElement &&\n\t\t\tblock.classList.contains( hiddenClass )\n\t\t) {\n\t\t\texpandSearchBlock( block );\n\t\t}\n\t},\n\t{ passive: true }\n);\n"],"names":["expandedSearchBlock","hiddenClass","toggleAriaLabel","element","dataset","Error","ariaLabel","toggledAriaLabel","getSearchInput","block","querySelector","getSearchButton","handleKeydownEvent","event","key","collapseExpandedSearchBlock","focus","handleKeyupEvent","target","closest","searchField","searchButton","type","ariaHidden","tabIndex","ariaExpanded","setAttribute","id","classList","add","document","removeEventListener","passive","addEventListener","HTMLFormElement","contains","removeAttribute","remove","expandSearchBlock"],"sourceRoot":""}