{"version":3,"file":"./build/block-library/blocks/navigation/view.min.js","mappings":"MAQA,IAAIA,GAAiB,EAOrB,SAASC,EAAeC,GACvBA,EACEC,iBAAkB,0BAClBC,SAAS,SAAWC,GACpBA,EAAOC,aAAc,gBAAiB,QACvC,IACDN,GAAiB,CAClB,CAkCAO,SAASC,iBACR,SACA,SAAWC,GACV,MAAMC,EAASD,EAAMC,OACfC,EAASD,EAAOE,QAAS,wCAG1BZ,GACqBO,SAASJ,iBACjC,wBAEgBC,SAAS,SAAWS,GAC7BA,EAAMC,SAAUJ,IACtBT,EAAeY,EAEjB,IAIIF,aAAkBI,mBA9CzB,SAA+BC,GAC9B,MAAMC,EAC4C,SAAjDD,EAAaE,aAAc,iBACtBhB,EAAiBc,EAAaJ,QAAS,6BAExCK,EACJhB,EAAeC,IAGUc,EAAaJ,QACrC,iGAGCT,iBAAkB,6BAClBC,SAAWe,IACNA,IAAUjB,GACdD,EAAekB,EAChB,IAIFH,EAAaV,aAAc,gBAAiB,QAC5CN,GAAiB,EAEnB,CAuBGoB,CAAsBT,EAExB,GACA,CAAEU,SAAS,IAIZd,SAASC,iBACR,SACA,SAAWC,GAEHT,GAIeO,SAASJ,iBAC9B,uCAEaC,SAAS,SAAWS,GACjC,GAAOA,EAAMC,SAAUL,EAAMC,SAEtB,GAAmB,WAAdD,EAAMa,IAAmB,CACpC,MAAMjB,EAASQ,EAAMU,cAAe,0BACpCtB,EAAeY,GAEfR,GAAQmB,OACT,OANCvB,EAAeY,EAOjB,GACD,GACA,CAAEQ,SAAS,G","sources":["webpack://wp/./packages/block-library/build-module/navigation/@wordpress/block-library/src/navigation/view.js"],"sourcesContent":["/*eslint-env browser*/\n// Open on click functionality.\n\n/**\n * Keep track of whether a submenu is open to short-circuit delegated event listeners.\n *\n * @type {boolean}\n */\nlet hasOpenSubmenu = false;\n\n/**\n * Close submenu items for a navigation item.\n *\n * @param {HTMLElement} navigationItem - Either a NAV or LI element.\n */\nfunction closeSubmenus( navigationItem ) {\n\tnavigationItem\n\t\t.querySelectorAll( '[aria-expanded=\"true\"]' )\n\t\t.forEach( function ( toggle ) {\n\t\t\ttoggle.setAttribute( 'aria-expanded', 'false' );\n\t\t} );\n\thasOpenSubmenu = false;\n}\n\n/**\n * Toggle submenu on click.\n *\n * @param {HTMLButtonElement} buttonToggle\n */\nfunction toggleSubmenuOnClick( buttonToggle ) {\n\tconst isSubmenuOpen =\n\t\tbuttonToggle.getAttribute( 'aria-expanded' ) === 'true';\n\tconst navigationItem = buttonToggle.closest( '.wp-block-navigation-item' );\n\n\tif ( isSubmenuOpen ) {\n\t\tcloseSubmenus( navigationItem );\n\t} else {\n\t\t// Close all sibling submenus.\n\t\tconst navigationParent = buttonToggle.closest(\n\t\t\t'.wp-block-navigation__submenu-container, .wp-block-navigation__container, .wp-block-page-list'\n\t\t);\n\t\tnavigationParent\n\t\t\t.querySelectorAll( '.wp-block-navigation-item' )\n\t\t\t.forEach( ( child ) => {\n\t\t\t\tif ( child !== navigationItem ) {\n\t\t\t\t\tcloseSubmenus( child );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// Open submenu.\n\t\tbuttonToggle.setAttribute( 'aria-expanded', 'true' );\n\t\thasOpenSubmenu = true;\n\t}\n}\n\n// Open on button click or close on click outside.\ndocument.addEventListener(\n\t'click',\n\tfunction ( event ) {\n\t\tconst target = event.target;\n\t\tconst button = target.closest( '.wp-block-navigation-submenu__toggle' );\n\n\t\t// Close any other open submenus.\n\t\tif ( hasOpenSubmenu ) {\n\t\t\tconst navigationBlocks = document.querySelectorAll(\n\t\t\t\t'.wp-block-navigation'\n\t\t\t);\n\t\t\tnavigationBlocks.forEach( function ( block ) {\n\t\t\t\tif ( ! block.contains( target ) ) {\n\t\t\t\t\tcloseSubmenus( block );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Now open the submenu if one was clicked.\n\t\tif ( button instanceof HTMLButtonElement ) {\n\t\t\ttoggleSubmenuOnClick( button );\n\t\t}\n\t},\n\t{ passive: true }\n);\n\n// Close on focus outside or escape key.\ndocument.addEventListener(\n\t'keyup',\n\tfunction ( event ) {\n\t\t// Abort if there aren't any submenus open anyway.\n\t\tif ( ! hasOpenSubmenu ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst submenuBlocks = document.querySelectorAll(\n\t\t\t'.wp-block-navigation-item.has-child'\n\t\t);\n\t\tsubmenuBlocks.forEach( function ( block ) {\n\t\t\tif ( ! block.contains( event.target ) ) {\n\t\t\t\tcloseSubmenus( block );\n\t\t\t} else if ( event.key === 'Escape' ) {\n\t\t\t\tconst toggle = block.querySelector( '[aria-expanded=\"true\"]' );\n\t\t\t\tcloseSubmenus( block );\n\t\t\t\t// Focus the submenu trigger so focus does not get trapped in the closed submenu.\n\t\t\t\ttoggle?.focus();\n\t\t\t}\n\t\t} );\n\t},\n\t{ passive: true }\n);\n"],"names":["hasOpenSubmenu","closeSubmenus","navigationItem","querySelectorAll","forEach","toggle","setAttribute","document","addEventListener","event","target","button","closest","block","contains","HTMLButtonElement","buttonToggle","isSubmenuOpen","getAttribute","child","toggleSubmenuOnClick","passive","key","querySelector","focus"],"sourceRoot":""}