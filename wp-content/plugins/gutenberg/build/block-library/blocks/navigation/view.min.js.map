{"version":3,"file":"./build/block-library/blocks/navigation/view.min.js","mappings":"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","sources":["webpack://wp/external window [\"wp\",\"interactivity\"]","webpack://wp/./packages/block-library/build-module/navigation/@wordpress/block-library/src/navigation/constants.js","webpack://wp/./packages/block-library/build-module/navigation/@wordpress/block-library/src/navigation/view.js"],"sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"interactivity\"];","export const DEFAULT_BLOCK = {\n\tname: 'core/navigation-link',\n};\n\nexport const ALLOWED_BLOCKS = [\n\t'core/navigation-link',\n\t'core/search',\n\t'core/social-links',\n\t'core/page-list',\n\t'core/spacer',\n\t'core/home-link',\n\t'core/site-title',\n\t'core/site-logo',\n\t'core/navigation-submenu',\n\t'core/loginout',\n\t'core/buttons',\n];\n\nexport const PRIORITIZED_INSERTER_BLOCKS = [\n\t'core/navigation-link/page',\n\t'core/navigation-link',\n];\n\n// These parameters must be kept aligned with those in\n// lib/compat/wordpress-6.3/navigation-block-preloading.php\n// and\n// edit-site/src/components/sidebar-navigation-screen-navigation-menus/constants.js\nexport const PRELOADED_NAVIGATION_MENUS_QUERY = {\n\tper_page: 100,\n\tstatus: [ 'publish', 'draft' ],\n\torder: 'desc',\n\torderby: 'date',\n};\n\nexport const SELECT_NAVIGATION_MENUS_ARGS = [\n\t'postType',\n\t'wp_navigation',\n\tPRELOADED_NAVIGATION_MENUS_QUERY,\n];\n\nexport const NAVIGATION_MOBILE_COLLAPSE = '600px';\n","/**\n * WordPress dependencies\n */\nimport { store, getContext, getElement } from '@wordpress/interactivity';\n\n/**\n * Internal dependencies\n */\nimport { NAVIGATION_MOBILE_COLLAPSE } from './constants';\n\nconst focusableSelectors = [\n\t'a[href]',\n\t'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\n\t'select:not([disabled]):not([aria-hidden])',\n\t'textarea:not([disabled]):not([aria-hidden])',\n\t'button:not([disabled]):not([aria-hidden])',\n\t'[contenteditable]',\n\t'[tabindex]:not([tabindex^=\"-\"])',\n];\n\n// This is a fix for Safari in iOS/iPadOS. Without it, Safari doesn't focus out\n// when the user taps in the body. It can be removed once we add an overlay to\n// capture the clicks, instead of relying on the focusout event.\ndocument.addEventListener( 'click', () => {} );\n\nconst { state, actions } = store( 'core/navigation', {\n\tstate: {\n\t\tget roleAttribute() {\n\t\t\tconst ctx = getContext();\n\t\t\treturn ctx.type === 'overlay' && state.isMenuOpen ? 'dialog' : null;\n\t\t},\n\t\tget ariaModal() {\n\t\t\tconst ctx = getContext();\n\t\t\treturn ctx.type === 'overlay' && state.isMenuOpen ? 'true' : null;\n\t\t},\n\t\tget ariaLabel() {\n\t\t\tconst ctx = getContext();\n\t\t\treturn ctx.type === 'overlay' && state.isMenuOpen\n\t\t\t\t? ctx.ariaLabel\n\t\t\t\t: null;\n\t\t},\n\t\tget isMenuOpen() {\n\t\t\t// The menu is opened if either `click`, `hover` or `focus` is true.\n\t\t\treturn (\n\t\t\t\tObject.values( state.menuOpenedBy ).filter( Boolean ).length > 0\n\t\t\t);\n\t\t},\n\t\tget menuOpenedBy() {\n\t\t\tconst ctx = getContext();\n\t\t\treturn ctx.type === 'overlay'\n\t\t\t\t? ctx.overlayOpenedBy\n\t\t\t\t: ctx.submenuOpenedBy;\n\t\t},\n\t},\n\tactions: {\n\t\topenMenuOnHover() {\n\t\t\tconst { type, overlayOpenedBy } = getContext();\n\t\t\tif (\n\t\t\t\ttype === 'submenu' &&\n\t\t\t\t// Only open on hover if the overlay is closed.\n\t\t\t\tObject.values( overlayOpenedBy || {} ).filter( Boolean )\n\t\t\t\t\t.length === 0\n\t\t\t)\n\t\t\t\tactions.openMenu( 'hover' );\n\t\t},\n\t\tcloseMenuOnHover() {\n\t\t\tactions.closeMenu( 'hover' );\n\t\t},\n\t\topenMenuOnClick() {\n\t\t\tconst ctx = getContext();\n\t\t\tconst { ref } = getElement();\n\t\t\tctx.previousFocus = ref;\n\t\t\tactions.openMenu( 'click' );\n\t\t},\n\t\tcloseMenuOnClick() {\n\t\t\tactions.closeMenu( 'click' );\n\t\t\tactions.closeMenu( 'focus' );\n\t\t},\n\t\topenMenuOnFocus() {\n\t\t\tactions.openMenu( 'focus' );\n\t\t},\n\t\ttoggleMenuOnClick() {\n\t\t\tconst ctx = getContext();\n\t\t\tconst { ref } = getElement();\n\t\t\t// Safari won't send focus to the clicked element, so we need to manually place it: https://bugs.webkit.org/show_bug.cgi?id=22261\n\t\t\tif ( window.document.activeElement !== ref ) ref.focus();\n\t\t\tconst { menuOpenedBy } = state;\n\t\t\tif ( menuOpenedBy.click || menuOpenedBy.focus ) {\n\t\t\t\tactions.closeMenu( 'click' );\n\t\t\t\tactions.closeMenu( 'focus' );\n\t\t\t} else {\n\t\t\t\tctx.previousFocus = ref;\n\t\t\t\tactions.openMenu( 'click' );\n\t\t\t}\n\t\t},\n\t\thandleMenuKeydown( event ) {\n\t\t\tconst { type, firstFocusableElement, lastFocusableElement } =\n\t\t\t\tgetContext();\n\t\t\tif ( state.menuOpenedBy.click ) {\n\t\t\t\t// If Escape close the menu.\n\t\t\t\tif ( event?.key === 'Escape' ) {\n\t\t\t\t\tactions.closeMenu( 'click' );\n\t\t\t\t\tactions.closeMenu( 'focus' );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Trap focus if it is an overlay (main menu).\n\t\t\t\tif ( type === 'overlay' && event.key === 'Tab' ) {\n\t\t\t\t\t// If shift + tab it change the direction.\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.shiftKey &&\n\t\t\t\t\t\twindow.document.activeElement === firstFocusableElement\n\t\t\t\t\t) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tlastFocusableElement.focus();\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t! event.shiftKey &&\n\t\t\t\t\t\twindow.document.activeElement === lastFocusableElement\n\t\t\t\t\t) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tfirstFocusableElement.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thandleMenuFocusout( event ) {\n\t\t\tconst { modal } = getContext();\n\t\t\t// If focus is outside modal, and in the document, close menu\n\t\t\t// event.target === The element losing focus\n\t\t\t// event.relatedTarget === The element receiving focus (if any)\n\t\t\t// When focusout is outsite the document,\n\t\t\t// `window.document.activeElement` doesn't change.\n\n\t\t\t// The event.relatedTarget is null when something outside the navigation menu is clicked. This is only necessary for Safari.\n\t\t\tif (\n\t\t\t\tevent.relatedTarget === null ||\n\t\t\t\t( ! modal?.contains( event.relatedTarget ) &&\n\t\t\t\t\tevent.target !== window.document.activeElement )\n\t\t\t) {\n\t\t\t\tactions.closeMenu( 'click' );\n\t\t\t\tactions.closeMenu( 'focus' );\n\t\t\t}\n\t\t},\n\n\t\topenMenu( menuOpenedOn = 'click' ) {\n\t\t\tconst { type } = getContext();\n\t\t\tstate.menuOpenedBy[ menuOpenedOn ] = true;\n\t\t\tif ( type === 'overlay' ) {\n\t\t\t\t// Add a `has-modal-open` class to the <html> root.\n\t\t\t\tdocument.documentElement.classList.add( 'has-modal-open' );\n\t\t\t}\n\t\t},\n\n\t\tcloseMenu( menuClosedOn = 'click' ) {\n\t\t\tconst ctx = getContext();\n\t\t\tstate.menuOpenedBy[ menuClosedOn ] = false;\n\t\t\t// Check if the menu is still open or not.\n\t\t\tif ( ! state.isMenuOpen ) {\n\t\t\t\tif ( ctx.modal?.contains( window.document.activeElement ) ) {\n\t\t\t\t\tctx.previousFocus?.focus();\n\t\t\t\t}\n\t\t\t\tctx.modal = null;\n\t\t\t\tctx.previousFocus = null;\n\t\t\t\tif ( ctx.type === 'overlay' ) {\n\t\t\t\t\tdocument.documentElement.classList.remove(\n\t\t\t\t\t\t'has-modal-open'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n\tcallbacks: {\n\t\tinitMenu() {\n\t\t\tconst ctx = getContext();\n\t\t\tconst { ref } = getElement();\n\t\t\tif ( state.isMenuOpen ) {\n\t\t\t\tconst focusableElements =\n\t\t\t\t\tref.querySelectorAll( focusableSelectors );\n\t\t\t\tctx.modal = ref;\n\t\t\t\tctx.firstFocusableElement = focusableElements[ 0 ];\n\t\t\t\tctx.lastFocusableElement =\n\t\t\t\t\tfocusableElements[ focusableElements.length - 1 ];\n\t\t\t}\n\t\t},\n\t\tfocusFirstElement() {\n\t\t\tconst { ref } = getElement();\n\t\t\tif ( state.isMenuOpen ) {\n\t\t\t\tconst focusableElements =\n\t\t\t\t\tref.querySelectorAll( focusableSelectors );\n\t\t\t\tfocusableElements?.[ 0 ]?.focus();\n\t\t\t}\n\t\t},\n\t\tinitNav() {\n\t\t\tconst context = getContext();\n\t\t\tconst mediaQuery = window.matchMedia(\n\t\t\t\t`(max-width: ${ NAVIGATION_MOBILE_COLLAPSE })`\n\t\t\t);\n\n\t\t\t// Run once to set the initial state.\n\t\t\tcontext.isCollapsed = mediaQuery.matches;\n\n\t\t\tfunction handleCollapse( event ) {\n\t\t\t\tcontext.isCollapsed = event.matches;\n\t\t\t}\n\n\t\t\t// Run on resize to update the state.\n\t\t\tmediaQuery.addEventListener( 'change', handleCollapse );\n\n\t\t\t// Remove the listener when the component is unmounted.\n\t\t\treturn () => {\n\t\t\t\tmediaQuery.removeEventListener( 'change', handleCollapse );\n\t\t\t};\n\t\t},\n\t},\n} );\n"],"names":["window","focusableSelectors","document","addEventListener","state","actions","store","roleAttribute","getContext","type","isMenuOpen","ariaModal","ariaLabel","ctx","Object","values","menuOpenedBy","filter","Boolean","length","overlayOpenedBy","submenuOpenedBy","openMenuOnHover","openMenu","closeMenuOnHover","closeMenu","openMenuOnClick","ref","getElement","previousFocus","closeMenuOnClick","openMenuOnFocus","toggleMenuOnClick","activeElement","focus","click","handleMenuKeydown","event","firstFocusableElement","lastFocusableElement","key","shiftKey","preventDefault","handleMenuFocusout","modal","relatedTarget","contains","target","menuOpenedOn","documentElement","classList","add","menuClosedOn","remove","callbacks","initMenu","focusableElements","querySelectorAll","focusFirstElement","initNav","context","mediaQuery","matchMedia","handleCollapse","isCollapsed","matches","removeEventListener"],"sourceRoot":""}